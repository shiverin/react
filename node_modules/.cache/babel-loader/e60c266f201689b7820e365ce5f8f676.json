{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { theme } from '@chakra-ui/theme';\nimport { createToastFn } from './create-toast-fn.mjs';\nimport { ToastProvider } from './toast.provider.mjs';\nimport { ThemeProvider } from '../system/providers.mjs';\nimport { ColorModeContext } from '../color-mode/color-mode-context.mjs';\nvar defaults = {\n  duration: 5e3,\n  variant: \"solid\"\n};\nvar defaultStandaloneParam = {\n  theme: theme,\n  colorMode: \"light\",\n  toggleColorMode: function toggleColorMode() {},\n  setColorMode: function setColorMode() {},\n  defaultOptions: defaults,\n  forced: false\n};\n\nfunction createStandaloneToast() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultStandaloneParam,\n      _ref$theme = _ref.theme,\n      theme = _ref$theme === void 0 ? defaultStandaloneParam.theme : _ref$theme,\n      _ref$colorMode = _ref.colorMode,\n      colorMode = _ref$colorMode === void 0 ? defaultStandaloneParam.colorMode : _ref$colorMode,\n      _ref$toggleColorMode = _ref.toggleColorMode,\n      toggleColorMode = _ref$toggleColorMode === void 0 ? defaultStandaloneParam.toggleColorMode : _ref$toggleColorMode,\n      _ref$setColorMode = _ref.setColorMode,\n      setColorMode = _ref$setColorMode === void 0 ? defaultStandaloneParam.setColorMode : _ref$setColorMode,\n      _ref$defaultOptions = _ref.defaultOptions,\n      defaultOptions = _ref$defaultOptions === void 0 ? defaultStandaloneParam.defaultOptions : _ref$defaultOptions,\n      motionVariants = _ref.motionVariants,\n      toastSpacing = _ref.toastSpacing,\n      component = _ref.component,\n      forced = _ref.forced;\n\n  var colorModeContextValue = {\n    colorMode: colorMode,\n    setColorMode: setColorMode,\n    toggleColorMode: toggleColorMode,\n    forced: forced\n  };\n\n  var ToastContainer = function ToastContainer() {\n    return /* @__PURE__ */jsx(ThemeProvider, {\n      theme: theme,\n      children: /* @__PURE__ */jsx(ColorModeContext.Provider, {\n        value: colorModeContextValue,\n        children: /* @__PURE__ */jsx(ToastProvider, {\n          defaultOptions: defaultOptions,\n          motionVariants: motionVariants,\n          toastSpacing: toastSpacing,\n          component: component\n        })\n      })\n    });\n  };\n\n  return {\n    ToastContainer: ToastContainer,\n    toast: createToastFn(theme.direction, defaultOptions)\n  };\n}\n\nexport { createStandaloneToast, defaultStandaloneParam };","map":{"version":3,"names":["jsx","theme","createToastFn","ToastProvider","ThemeProvider","ColorModeContext","defaults","duration","variant","defaultStandaloneParam","colorMode","toggleColorMode","setColorMode","defaultOptions","forced","createStandaloneToast","motionVariants","toastSpacing","component","colorModeContextValue","ToastContainer","children","Provider","value","toast","direction"],"sources":["/workspaces/200508238/develop/node_modules/@chakra-ui/react/dist/esm/toast/create-standalone-toast.mjs"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { theme } from '@chakra-ui/theme';\nimport { createToastFn } from './create-toast-fn.mjs';\nimport { ToastProvider } from './toast.provider.mjs';\nimport { ThemeProvider } from '../system/providers.mjs';\nimport { ColorModeContext } from '../color-mode/color-mode-context.mjs';\n\nconst defaults = {\n  duration: 5e3,\n  variant: \"solid\"\n};\nconst defaultStandaloneParam = {\n  theme: theme,\n  colorMode: \"light\",\n  toggleColorMode: () => {\n  },\n  setColorMode: () => {\n  },\n  defaultOptions: defaults,\n  forced: false\n};\nfunction createStandaloneToast({\n  theme = defaultStandaloneParam.theme,\n  colorMode = defaultStandaloneParam.colorMode,\n  toggleColorMode = defaultStandaloneParam.toggleColorMode,\n  setColorMode = defaultStandaloneParam.setColorMode,\n  defaultOptions = defaultStandaloneParam.defaultOptions,\n  motionVariants,\n  toastSpacing,\n  component,\n  forced\n} = defaultStandaloneParam) {\n  const colorModeContextValue = {\n    colorMode,\n    setColorMode,\n    toggleColorMode,\n    forced\n  };\n  const ToastContainer = () => /* @__PURE__ */ jsx(ThemeProvider, { theme, children: /* @__PURE__ */ jsx(ColorModeContext.Provider, { value: colorModeContextValue, children: /* @__PURE__ */ jsx(\n    ToastProvider,\n    {\n      defaultOptions,\n      motionVariants,\n      toastSpacing,\n      component\n    }\n  ) }) });\n  return {\n    ToastContainer,\n    toast: createToastFn(theme.direction, defaultOptions)\n  };\n}\n\nexport { createStandaloneToast, defaultStandaloneParam };\n"],"mappings":"AAAA;;AACA,SAASA,GAAT,QAAoB,mBAApB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,SAASC,gBAAT,QAAiC,sCAAjC;AAEA,IAAMC,QAAQ,GAAG;EACfC,QAAQ,EAAE,GADK;EAEfC,OAAO,EAAE;AAFM,CAAjB;AAIA,IAAMC,sBAAsB,GAAG;EAC7BR,KAAK,EAAEA,KADsB;EAE7BS,SAAS,EAAE,OAFkB;EAG7BC,eAAe,EAAE,2BAAM,CACtB,CAJ4B;EAK7BC,YAAY,EAAE,wBAAM,CACnB,CAN4B;EAO7BC,cAAc,EAAEP,QAPa;EAQ7BQ,MAAM,EAAE;AARqB,CAA/B;;AAUA,SAASC,qBAAT,GAU4B;EAAA,+EAAxBN,sBAAwB;EAAA,sBAT1BR,KAS0B;EAAA,IAT1BA,KAS0B,2BATlBQ,sBAAsB,CAACR,KASL;EAAA,0BAR1BS,SAQ0B;EAAA,IAR1BA,SAQ0B,+BARdD,sBAAsB,CAACC,SAQT;EAAA,gCAP1BC,eAO0B;EAAA,IAP1BA,eAO0B,qCAPRF,sBAAsB,CAACE,eAOf;EAAA,6BAN1BC,YAM0B;EAAA,IAN1BA,YAM0B,kCANXH,sBAAsB,CAACG,YAMZ;EAAA,+BAL1BC,cAK0B;EAAA,IAL1BA,cAK0B,oCALTJ,sBAAsB,CAACI,cAKd;EAAA,IAJ1BG,cAI0B,QAJ1BA,cAI0B;EAAA,IAH1BC,YAG0B,QAH1BA,YAG0B;EAAA,IAF1BC,SAE0B,QAF1BA,SAE0B;EAAA,IAD1BJ,MAC0B,QAD1BA,MAC0B;;EAC1B,IAAMK,qBAAqB,GAAG;IAC5BT,SAAS,EAATA,SAD4B;IAE5BE,YAAY,EAAZA,YAF4B;IAG5BD,eAAe,EAAfA,eAH4B;IAI5BG,MAAM,EAANA;EAJ4B,CAA9B;;EAMA,IAAMM,cAAc,GAAG,SAAjBA,cAAiB;IAAA,OAAM,eAAgBpB,GAAG,CAACI,aAAD,EAAgB;MAAEH,KAAK,EAALA,KAAF;MAASoB,QAAQ,EAAE,eAAgBrB,GAAG,CAACK,gBAAgB,CAACiB,QAAlB,EAA4B;QAAEC,KAAK,EAAEJ,qBAAT;QAAgCE,QAAQ,EAAE,eAAgBrB,GAAG,CAC7LG,aAD6L,EAE7L;UACEU,cAAc,EAAdA,cADF;UAEEG,cAAc,EAAdA,cAFF;UAGEC,YAAY,EAAZA,YAHF;UAIEC,SAAS,EAATA;QAJF,CAF6L;MAA7D,CAA5B;IAAtC,CAAhB,CAAzB;EAAA,CAAvB;;EASA,OAAO;IACLE,cAAc,EAAdA,cADK;IAELI,KAAK,EAAEtB,aAAa,CAACD,KAAK,CAACwB,SAAP,EAAkBZ,cAAlB;EAFf,CAAP;AAID;;AAED,SAASE,qBAAT,EAAgCN,sBAAhC"},"metadata":{},"sourceType":"module"}