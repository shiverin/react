{"ast":null,"code":"import { runIfFn, isObject, mergeWith } from '@chakra-ui/utils';\nimport { pseudoSelectors } from './pseudos.mjs';\nimport { systemProps } from './system.mjs';\nimport { expandResponsive } from './utils/expand-responsive.mjs';\nimport { splitByComma } from './utils/split-by-comma.mjs';\n\nfunction isCssVar(value) {\n  return /^var\\(--.+\\)$/.test(value);\n}\n\nconst isCSSVariableTokenValue = (key, value) => key.startsWith(\"--\") && typeof value === \"string\" && !isCssVar(value);\n\nconst resolveTokenValue = (theme, value) => {\n  if (value == null) return value;\n\n  const getVar = val => theme.__cssMap?.[val]?.varRef;\n\n  const getValue = val => getVar(val) ?? val;\n\n  const [tokenValue, fallbackValue] = splitByComma(value);\n  value = getVar(tokenValue) ?? getValue(fallbackValue) ?? getValue(value);\n  return value;\n};\n\nfunction getCss(options) {\n  const {\n    configs = {},\n    pseudos = {},\n    theme\n  } = options;\n\n  const css2 = function (stylesOrFn) {\n    let nested = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    const _styles = runIfFn(stylesOrFn, theme);\n\n    const styles = expandResponsive(_styles)(theme);\n    let computedStyles = {};\n\n    for (let key in styles) {\n      const valueOrFn = styles[key];\n      let value = runIfFn(valueOrFn, theme);\n\n      if (key in pseudos) {\n        key = pseudos[key];\n      }\n\n      if (isCSSVariableTokenValue(key, value)) {\n        value = resolveTokenValue(theme, value);\n      }\n\n      let config = configs[key];\n\n      if (config === true) {\n        config = {\n          property: key\n        };\n      }\n\n      if (isObject(value)) {\n        computedStyles[key] = computedStyles[key] ?? {};\n        computedStyles[key] = mergeWith({}, computedStyles[key], css2(value, true));\n        continue;\n      }\n\n      let rawValue = config?.transform?.(value, theme, _styles) ?? value;\n      rawValue = config?.processResult ? css2(rawValue, true) : rawValue;\n      const configProperty = runIfFn(config?.property, theme);\n\n      if (!nested && config?.static) {\n        const staticStyles = runIfFn(config.static, theme);\n        computedStyles = mergeWith({}, computedStyles, staticStyles);\n      }\n\n      if (configProperty && Array.isArray(configProperty)) {\n        for (const property of configProperty) {\n          computedStyles[property] = rawValue;\n        }\n\n        continue;\n      }\n\n      if (configProperty) {\n        if (configProperty === \"&\" && isObject(rawValue)) {\n          computedStyles = mergeWith({}, computedStyles, rawValue);\n        } else {\n          computedStyles[configProperty] = rawValue;\n        }\n\n        continue;\n      }\n\n      if (isObject(rawValue)) {\n        computedStyles = mergeWith({}, computedStyles, rawValue);\n        continue;\n      }\n\n      computedStyles[key] = rawValue;\n    }\n\n    return computedStyles;\n  };\n\n  return css2;\n}\n\nconst css = styles => theme => {\n  const cssFn = getCss({\n    theme,\n    pseudos: pseudoSelectors,\n    configs: systemProps\n  });\n  return cssFn(styles);\n};\n\nexport { css, getCss };","map":{"version":3,"names":["runIfFn","isObject","mergeWith","pseudoSelectors","systemProps","expandResponsive","splitByComma","isCssVar","value","test","isCSSVariableTokenValue","key","startsWith","resolveTokenValue","theme","getVar","val","__cssMap","varRef","getValue","tokenValue","fallbackValue","getCss","options","configs","pseudos","css2","stylesOrFn","nested","_styles","styles","computedStyles","valueOrFn","config","property","rawValue","transform","processResult","configProperty","static","staticStyles","Array","isArray","css","cssFn"],"sources":["/workspaces/200508238/develop/node_modules/@chakra-ui/react/node_modules/@chakra-ui/styled-system/dist/esm/css.mjs"],"sourcesContent":["import { runIfFn, isObject, mergeWith } from '@chakra-ui/utils';\nimport { pseudoSelectors } from './pseudos.mjs';\nimport { systemProps } from './system.mjs';\nimport { expandResponsive } from './utils/expand-responsive.mjs';\nimport { splitByComma } from './utils/split-by-comma.mjs';\n\nfunction isCssVar(value) {\n  return /^var\\(--.+\\)$/.test(value);\n}\nconst isCSSVariableTokenValue = (key, value) => key.startsWith(\"--\") && typeof value === \"string\" && !isCssVar(value);\nconst resolveTokenValue = (theme, value) => {\n  if (value == null)\n    return value;\n  const getVar = (val) => theme.__cssMap?.[val]?.varRef;\n  const getValue = (val) => getVar(val) ?? val;\n  const [tokenValue, fallbackValue] = splitByComma(value);\n  value = getVar(tokenValue) ?? getValue(fallbackValue) ?? getValue(value);\n  return value;\n};\nfunction getCss(options) {\n  const { configs = {}, pseudos = {}, theme } = options;\n  const css2 = (stylesOrFn, nested = false) => {\n    const _styles = runIfFn(stylesOrFn, theme);\n    const styles = expandResponsive(_styles)(theme);\n    let computedStyles = {};\n    for (let key in styles) {\n      const valueOrFn = styles[key];\n      let value = runIfFn(valueOrFn, theme);\n      if (key in pseudos) {\n        key = pseudos[key];\n      }\n      if (isCSSVariableTokenValue(key, value)) {\n        value = resolveTokenValue(theme, value);\n      }\n      let config = configs[key];\n      if (config === true) {\n        config = { property: key };\n      }\n      if (isObject(value)) {\n        computedStyles[key] = computedStyles[key] ?? {};\n        computedStyles[key] = mergeWith(\n          {},\n          computedStyles[key],\n          css2(value, true)\n        );\n        continue;\n      }\n      let rawValue = config?.transform?.(value, theme, _styles) ?? value;\n      rawValue = config?.processResult ? css2(rawValue, true) : rawValue;\n      const configProperty = runIfFn(config?.property, theme);\n      if (!nested && config?.static) {\n        const staticStyles = runIfFn(config.static, theme);\n        computedStyles = mergeWith({}, computedStyles, staticStyles);\n      }\n      if (configProperty && Array.isArray(configProperty)) {\n        for (const property of configProperty) {\n          computedStyles[property] = rawValue;\n        }\n        continue;\n      }\n      if (configProperty) {\n        if (configProperty === \"&\" && isObject(rawValue)) {\n          computedStyles = mergeWith({}, computedStyles, rawValue);\n        } else {\n          computedStyles[configProperty] = rawValue;\n        }\n        continue;\n      }\n      if (isObject(rawValue)) {\n        computedStyles = mergeWith({}, computedStyles, rawValue);\n        continue;\n      }\n      computedStyles[key] = rawValue;\n    }\n    return computedStyles;\n  };\n  return css2;\n}\nconst css = (styles) => (theme) => {\n  const cssFn = getCss({\n    theme,\n    pseudos: pseudoSelectors,\n    configs: systemProps\n  });\n  return cssFn(styles);\n};\n\nexport { css, getCss };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}