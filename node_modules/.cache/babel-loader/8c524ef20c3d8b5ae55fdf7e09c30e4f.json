{"ast":null,"code":"'use client';\n\nimport _slicedToArray from \"/workspaces/200508238/develop/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { getOwnerWindow } from '@chakra-ui/utils';\nimport { useState, useEffect } from 'react';\nimport { useEventListener } from './use-event-listener.mjs';\n\nfunction useAnimationState(props) {\n  var isOpen = props.isOpen,\n      ref = props.ref;\n\n  var _useState = useState(isOpen),\n      _useState2 = _slicedToArray(_useState, 2),\n      mounted = _useState2[0],\n      setMounted = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      once = _useState4[0],\n      setOnce = _useState4[1];\n\n  useEffect(function () {\n    if (!once) {\n      setMounted(isOpen);\n      setOnce(true);\n    }\n  }, [isOpen, once, mounted]);\n  useEventListener(function () {\n    return ref.current;\n  }, \"animationend\", function () {\n    setMounted(isOpen);\n  });\n  var hidden = isOpen ? false : !mounted;\n  return {\n    present: !hidden,\n    onComplete: function onComplete() {\n      var _ref$current;\n\n      var win = getOwnerWindow(ref.current);\n      var evt = new win.CustomEvent(\"animationend\", {\n        bubbles: true\n      });\n      (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.dispatchEvent(evt);\n    }\n  };\n}\n\nexport { useAnimationState };","map":{"version":3,"names":["getOwnerWindow","useState","useEffect","useEventListener","useAnimationState","props","isOpen","ref","mounted","setMounted","once","setOnce","current","hidden","present","onComplete","win","evt","CustomEvent","bubbles","dispatchEvent"],"sources":["/workspaces/200508238/develop/node_modules/@chakra-ui/react/node_modules/@chakra-ui/hooks/dist/esm/use-animation-state.mjs"],"sourcesContent":["'use client';\nimport { getOwnerWindow } from '@chakra-ui/utils';\nimport { useState, useEffect } from 'react';\nimport { useEventListener } from './use-event-listener.mjs';\n\nfunction useAnimationState(props) {\n  const { isOpen, ref } = props;\n  const [mounted, setMounted] = useState(isOpen);\n  const [once, setOnce] = useState(false);\n  useEffect(() => {\n    if (!once) {\n      setMounted(isOpen);\n      setOnce(true);\n    }\n  }, [isOpen, once, mounted]);\n  useEventListener(\n    () => ref.current,\n    \"animationend\",\n    () => {\n      setMounted(isOpen);\n    }\n  );\n  const hidden = isOpen ? false : !mounted;\n  return {\n    present: !hidden,\n    onComplete() {\n      const win = getOwnerWindow(ref.current);\n      const evt = new win.CustomEvent(\"animationend\", { bubbles: true });\n      ref.current?.dispatchEvent(evt);\n    }\n  };\n}\n\nexport { useAnimationState };\n"],"mappings":"AAAA;;;AACA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,gBAAT,QAAiC,0BAAjC;;AAEA,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;EAChC,IAAQC,MAAR,GAAwBD,KAAxB,CAAQC,MAAR;EAAA,IAAgBC,GAAhB,GAAwBF,KAAxB,CAAgBE,GAAhB;;EACA,gBAA8BN,QAAQ,CAACK,MAAD,CAAtC;EAAA;EAAA,IAAOE,OAAP;EAAA,IAAgBC,UAAhB;;EACA,iBAAwBR,QAAQ,CAAC,KAAD,CAAhC;EAAA;EAAA,IAAOS,IAAP;EAAA,IAAaC,OAAb;;EACAT,SAAS,CAAC,YAAM;IACd,IAAI,CAACQ,IAAL,EAAW;MACTD,UAAU,CAACH,MAAD,CAAV;MACAK,OAAO,CAAC,IAAD,CAAP;IACD;EACF,CALQ,EAKN,CAACL,MAAD,EAASI,IAAT,EAAeF,OAAf,CALM,CAAT;EAMAL,gBAAgB,CACd;IAAA,OAAMI,GAAG,CAACK,OAAV;EAAA,CADc,EAEd,cAFc,EAGd,YAAM;IACJH,UAAU,CAACH,MAAD,CAAV;EACD,CALa,CAAhB;EAOA,IAAMO,MAAM,GAAGP,MAAM,GAAG,KAAH,GAAW,CAACE,OAAjC;EACA,OAAO;IACLM,OAAO,EAAE,CAACD,MADL;IAELE,UAFK,wBAEQ;MAAA;;MACX,IAAMC,GAAG,GAAGhB,cAAc,CAACO,GAAG,CAACK,OAAL,CAA1B;MACA,IAAMK,GAAG,GAAG,IAAID,GAAG,CAACE,WAAR,CAAoB,cAApB,EAAoC;QAAEC,OAAO,EAAE;MAAX,CAApC,CAAZ;MACA,gBAAAZ,GAAG,CAACK,OAAJ,8DAAaQ,aAAb,CAA2BH,GAA3B;IACD;EANI,CAAP;AAQD;;AAED,SAASb,iBAAT"},"metadata":{},"sourceType":"module"}