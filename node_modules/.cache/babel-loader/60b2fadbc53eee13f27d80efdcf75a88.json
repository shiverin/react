{"ast":null,"code":"'use client';\n\nimport { useTheme } from './use-theme.mjs';\nimport { useColorMode } from '../color-mode/color-mode-context.mjs';\n\nfunction useChakra() {\n  const colorModeResult = useColorMode();\n  const theme = useTheme();\n  return { ...colorModeResult,\n    theme\n  };\n}\n\nfunction getBreakpointValue(theme, value, fallback) {\n  if (value == null) return value;\n\n  const getValue = val => {\n    var _theme$__breakpoints, _theme$__breakpoints$;\n\n    return (_theme$__breakpoints = theme.__breakpoints) === null || _theme$__breakpoints === void 0 ? void 0 : (_theme$__breakpoints$ = _theme$__breakpoints.asArray) === null || _theme$__breakpoints$ === void 0 ? void 0 : _theme$__breakpoints$[val];\n  };\n\n  return getValue(value) ?? getValue(fallback) ?? fallback;\n}\n\nfunction getTokenValue(theme, value, fallback) {\n  if (value == null) return value;\n\n  const getValue = val => {\n    var _theme$__cssMap, _theme$__cssMap$val;\n\n    return (_theme$__cssMap = theme.__cssMap) === null || _theme$__cssMap === void 0 ? void 0 : (_theme$__cssMap$val = _theme$__cssMap[val]) === null || _theme$__cssMap$val === void 0 ? void 0 : _theme$__cssMap$val.value;\n  };\n\n  return getValue(value) ?? getValue(fallback) ?? fallback;\n}\n\nfunction useToken(scale, token, fallback) {\n  const theme = useTheme();\n  return getToken(scale, token, fallback)(theme);\n}\n\nfunction getToken(scale, token, fallback) {\n  const _token = Array.isArray(token) ? token : [token];\n\n  const _fallback = Array.isArray(fallback) ? fallback : [fallback];\n\n  return theme => {\n    const fallbackArr = _fallback.filter(Boolean);\n\n    const result = _token.map((token2, index) => {\n      if (scale === \"breakpoints\") {\n        return getBreakpointValue(theme, token2, fallbackArr[index] ?? token2);\n      }\n\n      const path = `${scale}.${token2}`;\n      return getTokenValue(theme, path, fallbackArr[index] ?? token2);\n    });\n\n    return Array.isArray(token) ? result : result[0];\n  };\n}\n\nexport { getToken, useChakra, useToken };","map":{"version":3,"names":["useTheme","useColorMode","useChakra","colorModeResult","theme","getBreakpointValue","value","fallback","getValue","val","__breakpoints","asArray","getTokenValue","__cssMap","useToken","scale","token","getToken","_token","Array","isArray","_fallback","fallbackArr","filter","Boolean","result","map","token2","index","path"],"sources":["/workspaces/200508238/develop/node_modules/@chakra-ui/react/dist/esm/system/hooks.mjs"],"sourcesContent":["'use client';\nimport { useTheme } from './use-theme.mjs';\nimport { useColorMode } from '../color-mode/color-mode-context.mjs';\n\nfunction useChakra() {\n  const colorModeResult = useColorMode();\n  const theme = useTheme();\n  return { ...colorModeResult, theme };\n}\nfunction getBreakpointValue(theme, value, fallback) {\n  if (value == null)\n    return value;\n  const getValue = (val) => theme.__breakpoints?.asArray?.[val];\n  return getValue(value) ?? getValue(fallback) ?? fallback;\n}\nfunction getTokenValue(theme, value, fallback) {\n  if (value == null)\n    return value;\n  const getValue = (val) => theme.__cssMap?.[val]?.value;\n  return getValue(value) ?? getValue(fallback) ?? fallback;\n}\nfunction useToken(scale, token, fallback) {\n  const theme = useTheme();\n  return getToken(scale, token, fallback)(theme);\n}\nfunction getToken(scale, token, fallback) {\n  const _token = Array.isArray(token) ? token : [token];\n  const _fallback = Array.isArray(fallback) ? fallback : [fallback];\n  return (theme) => {\n    const fallbackArr = _fallback.filter(Boolean);\n    const result = _token.map((token2, index) => {\n      if (scale === \"breakpoints\") {\n        return getBreakpointValue(theme, token2, fallbackArr[index] ?? token2);\n      }\n      const path = `${scale}.${token2}`;\n      return getTokenValue(theme, path, fallbackArr[index] ?? token2);\n    });\n    return Array.isArray(token) ? result : result[0];\n  };\n}\n\nexport { getToken, useChakra, useToken };\n"],"mappings":"AAAA;;AACA,SAASA,QAAT,QAAyB,iBAAzB;AACA,SAASC,YAAT,QAA6B,sCAA7B;;AAEA,SAASC,SAAT,GAAqB;EACnB,MAAMC,eAAe,GAAGF,YAAY,EAApC;EACA,MAAMG,KAAK,GAAGJ,QAAQ,EAAtB;EACA,OAAO,EAAE,GAAGG,eAAL;IAAsBC;EAAtB,CAAP;AACD;;AACD,SAASC,kBAAT,CAA4BD,KAA5B,EAAmCE,KAAnC,EAA0CC,QAA1C,EAAoD;EAClD,IAAID,KAAK,IAAI,IAAb,EACE,OAAOA,KAAP;;EACF,MAAME,QAAQ,GAAIC,GAAD;IAAA;;IAAA,+BAASL,KAAK,CAACM,aAAf,kFAAS,qBAAqBC,OAA9B,0DAAS,sBAA+BF,GAA/B,CAAT;EAAA,CAAjB;;EACA,OAAOD,QAAQ,CAACF,KAAD,CAAR,IAAmBE,QAAQ,CAACD,QAAD,CAA3B,IAAyCA,QAAhD;AACD;;AACD,SAASK,aAAT,CAAuBR,KAAvB,EAA8BE,KAA9B,EAAqCC,QAArC,EAA+C;EAC7C,IAAID,KAAK,IAAI,IAAb,EACE,OAAOA,KAAP;;EACF,MAAME,QAAQ,GAAIC,GAAD;IAAA;;IAAA,0BAASL,KAAK,CAACS,QAAf,2EAAS,gBAAiBJ,GAAjB,CAAT,wDAAS,oBAAuBH,KAAhC;EAAA,CAAjB;;EACA,OAAOE,QAAQ,CAACF,KAAD,CAAR,IAAmBE,QAAQ,CAACD,QAAD,CAA3B,IAAyCA,QAAhD;AACD;;AACD,SAASO,QAAT,CAAkBC,KAAlB,EAAyBC,KAAzB,EAAgCT,QAAhC,EAA0C;EACxC,MAAMH,KAAK,GAAGJ,QAAQ,EAAtB;EACA,OAAOiB,QAAQ,CAACF,KAAD,EAAQC,KAAR,EAAeT,QAAf,CAAR,CAAiCH,KAAjC,CAAP;AACD;;AACD,SAASa,QAAT,CAAkBF,KAAlB,EAAyBC,KAAzB,EAAgCT,QAAhC,EAA0C;EACxC,MAAMW,MAAM,GAAGC,KAAK,CAACC,OAAN,CAAcJ,KAAd,IAAuBA,KAAvB,GAA+B,CAACA,KAAD,CAA9C;;EACA,MAAMK,SAAS,GAAGF,KAAK,CAACC,OAAN,CAAcb,QAAd,IAA0BA,QAA1B,GAAqC,CAACA,QAAD,CAAvD;;EACA,OAAQH,KAAD,IAAW;IAChB,MAAMkB,WAAW,GAAGD,SAAS,CAACE,MAAV,CAAiBC,OAAjB,CAApB;;IACA,MAAMC,MAAM,GAAGP,MAAM,CAACQ,GAAP,CAAW,CAACC,MAAD,EAASC,KAAT,KAAmB;MAC3C,IAAIb,KAAK,KAAK,aAAd,EAA6B;QAC3B,OAAOV,kBAAkB,CAACD,KAAD,EAAQuB,MAAR,EAAgBL,WAAW,CAACM,KAAD,CAAX,IAAsBD,MAAtC,CAAzB;MACD;;MACD,MAAME,IAAI,GAAI,GAAEd,KAAM,IAAGY,MAAO,EAAhC;MACA,OAAOf,aAAa,CAACR,KAAD,EAAQyB,IAAR,EAAcP,WAAW,CAACM,KAAD,CAAX,IAAsBD,MAApC,CAApB;IACD,CANc,CAAf;;IAOA,OAAOR,KAAK,CAACC,OAAN,CAAcJ,KAAd,IAAuBS,MAAvB,GAAgCA,MAAM,CAAC,CAAD,CAA7C;EACD,CAVD;AAWD;;AAED,SAASR,QAAT,EAAmBf,SAAnB,EAA8BY,QAA9B"},"metadata":{},"sourceType":"module"}