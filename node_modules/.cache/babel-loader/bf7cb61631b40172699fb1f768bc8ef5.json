{"ast":null,"code":"'use client';\n\nimport _slicedToArray from \"/workspaces/200508238/develop/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useState } from 'react';\n\nfunction useInitialAnimationState(isChecked) {\n  var _useState = useState(isChecked),\n      _useState2 = _slicedToArray(_useState, 2),\n      previousIsChecked = _useState2[0],\n      setPreviousIsChecked = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      shouldAnimate = _useState4[0],\n      setShouldAnimate = _useState4[1];\n\n  if (isChecked !== previousIsChecked) {\n    setShouldAnimate(true);\n    setPreviousIsChecked(isChecked);\n  }\n\n  return shouldAnimate;\n}\n\nexport { useInitialAnimationState };","map":{"version":3,"names":["useState","useInitialAnimationState","isChecked","previousIsChecked","setPreviousIsChecked","shouldAnimate","setShouldAnimate"],"sources":["/workspaces/200508238/develop/node_modules/@chakra-ui/react/dist/esm/checkbox/use-initial-animation-state.mjs"],"sourcesContent":["'use client';\nimport { useState } from 'react';\n\nfunction useInitialAnimationState(isChecked) {\n  const [previousIsChecked, setPreviousIsChecked] = useState(isChecked);\n  const [shouldAnimate, setShouldAnimate] = useState(false);\n  if (isChecked !== previousIsChecked) {\n    setShouldAnimate(true);\n    setPreviousIsChecked(isChecked);\n  }\n  return shouldAnimate;\n}\n\nexport { useInitialAnimationState };\n"],"mappings":"AAAA;;;AACA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,SAASC,wBAAT,CAAkCC,SAAlC,EAA6C;EAC3C,gBAAkDF,QAAQ,CAACE,SAAD,CAA1D;EAAA;EAAA,IAAOC,iBAAP;EAAA,IAA0BC,oBAA1B;;EACA,iBAA0CJ,QAAQ,CAAC,KAAD,CAAlD;EAAA;EAAA,IAAOK,aAAP;EAAA,IAAsBC,gBAAtB;;EACA,IAAIJ,SAAS,KAAKC,iBAAlB,EAAqC;IACnCG,gBAAgB,CAAC,IAAD,CAAhB;IACAF,oBAAoB,CAACF,SAAD,CAApB;EACD;;EACD,OAAOG,aAAP;AACD;;AAED,SAASJ,wBAAT"},"metadata":{},"sourceType":"module"}