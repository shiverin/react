{"ast":null,"code":"import { walkObject } from '@chakra-ui/utils';\nimport { pseudoPropNames } from '../pseudos.mjs';\nimport { extractTokens, extractSemanticTokens } from './theme-tokens.mjs';\n\nfunction flattenTokens(theme) {\n  var tokens = extractTokens(theme);\n  var semanticTokens = extractSemanticTokens(theme);\n\n  var isSemanticCondition = function isSemanticCondition(key) {\n    return (// @ts-ignore\n      pseudoPropNames.includes(key) || \"default\" === key\n    );\n  };\n\n  var result = {};\n  walkObject(tokens, function (value, path) {\n    if (value == null) return;\n    result[path.join(\".\")] = {\n      isSemantic: false,\n      value: value\n    };\n  });\n  walkObject(semanticTokens, function (value, path) {\n    if (value == null) return;\n    result[path.join(\".\")] = {\n      isSemantic: true,\n      value: value\n    };\n  }, {\n    stop: function stop(value) {\n      return Object.keys(value).every(isSemanticCondition);\n    }\n  });\n  return result;\n}\n\nexport { flattenTokens };","map":{"version":3,"names":["walkObject","pseudoPropNames","extractTokens","extractSemanticTokens","flattenTokens","theme","tokens","semanticTokens","isSemanticCondition","key","includes","result","value","path","join","isSemantic","stop","Object","keys","every"],"sources":["/workspaces/200508238/develop/node_modules/@chakra-ui/react/node_modules/@chakra-ui/styled-system/dist/esm/create-theme-vars/flatten-tokens.mjs"],"sourcesContent":["import { walkObject } from '@chakra-ui/utils';\nimport { pseudoPropNames } from '../pseudos.mjs';\nimport { extractTokens, extractSemanticTokens } from './theme-tokens.mjs';\n\nfunction flattenTokens(theme) {\n  const tokens = extractTokens(theme);\n  const semanticTokens = extractSemanticTokens(theme);\n  const isSemanticCondition = (key) => (\n    // @ts-ignore\n    pseudoPropNames.includes(key) || \"default\" === key\n  );\n  const result = {};\n  walkObject(tokens, (value, path) => {\n    if (value == null)\n      return;\n    result[path.join(\".\")] = { isSemantic: false, value };\n  });\n  walkObject(\n    semanticTokens,\n    (value, path) => {\n      if (value == null)\n        return;\n      result[path.join(\".\")] = { isSemantic: true, value };\n    },\n    {\n      stop: (value) => Object.keys(value).every(isSemanticCondition)\n    }\n  );\n  return result;\n}\n\nexport { flattenTokens };\n"],"mappings":"AAAA,SAASA,UAAT,QAA2B,kBAA3B;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,SAASC,aAAT,EAAwBC,qBAAxB,QAAqD,oBAArD;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;EAC5B,IAAMC,MAAM,GAAGJ,aAAa,CAACG,KAAD,CAA5B;EACA,IAAME,cAAc,GAAGJ,qBAAqB,CAACE,KAAD,CAA5C;;EACA,IAAMG,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,GAAD;IAAA,OAC1B;MACAR,eAAe,CAACS,QAAhB,CAAyBD,GAAzB,KAAiC,cAAcA;IAFrB;EAAA,CAA5B;;EAIA,IAAME,MAAM,GAAG,EAAf;EACAX,UAAU,CAACM,MAAD,EAAS,UAACM,KAAD,EAAQC,IAAR,EAAiB;IAClC,IAAID,KAAK,IAAI,IAAb,EACE;IACFD,MAAM,CAACE,IAAI,CAACC,IAAL,CAAU,GAAV,CAAD,CAAN,GAAyB;MAAEC,UAAU,EAAE,KAAd;MAAqBH,KAAK,EAALA;IAArB,CAAzB;EACD,CAJS,CAAV;EAKAZ,UAAU,CACRO,cADQ,EAER,UAACK,KAAD,EAAQC,IAAR,EAAiB;IACf,IAAID,KAAK,IAAI,IAAb,EACE;IACFD,MAAM,CAACE,IAAI,CAACC,IAAL,CAAU,GAAV,CAAD,CAAN,GAAyB;MAAEC,UAAU,EAAE,IAAd;MAAoBH,KAAK,EAALA;IAApB,CAAzB;EACD,CANO,EAOR;IACEI,IAAI,EAAE,cAACJ,KAAD;MAAA,OAAWK,MAAM,CAACC,IAAP,CAAYN,KAAZ,EAAmBO,KAAnB,CAAyBX,mBAAzB,CAAX;IAAA;EADR,CAPQ,CAAV;EAWA,OAAOG,MAAP;AACD;;AAED,SAASP,aAAT"},"metadata":{},"sourceType":"module"}