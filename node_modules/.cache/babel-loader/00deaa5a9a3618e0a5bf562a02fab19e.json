{"ast":null,"code":"'use client';\n\nimport { useDisclosure, useAnimationState, useFocusOnPointerDown, useFocusOnHide, useFocusOnShow, useOutsideClick, mergeRefs } from '@chakra-ui/hooks';\nimport { isFocusable, lazyDisclosure, callAllHandlers } from '@chakra-ui/utils';\nimport { useState, useEffect, useRef, useId, useCallback } from 'react';\nimport { usePopper } from '../popper/use-popper.mjs';\nimport { cssVars } from '../popper/utils.mjs';\nconst TRIGGER = {\n  click: \"click\",\n  hover: \"hover\"\n};\n\nfunction usePopover() {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    closeOnBlur = true,\n    closeOnEsc = true,\n    initialFocusRef,\n    id,\n    returnFocusOnClose = true,\n    autoFocus = true,\n    arrowSize,\n    arrowShadowColor,\n    trigger = TRIGGER.click,\n    openDelay = 200,\n    closeDelay = 200,\n    isLazy,\n    lazyBehavior = \"unmount\",\n    computePositionOnMount,\n    ...popperProps\n  } = props;\n  const {\n    isOpen,\n    onClose,\n    onOpen,\n    onToggle\n  } = useDisclosure(props);\n  const [restoreFocus, setRestoreFocus] = useState(returnFocusOnClose);\n  useEffect(() => setRestoreFocus(returnFocusOnClose), [returnFocusOnClose]);\n  const anchorRef = useRef(null);\n  const triggerRef = useRef(null);\n  const popoverRef = useRef(null);\n  const isHoveringRef = useRef(false);\n  const hasBeenOpened = useRef(false);\n\n  if (isOpen) {\n    hasBeenOpened.current = true;\n  }\n\n  const [hasHeader, setHasHeader] = useState(false);\n  const [hasBody, setHasBody] = useState(false);\n  const uuid = useId();\n  const uid = id ?? uuid;\n  const [triggerId, popoverId, headerId, bodyId] = [\"popover-trigger\", \"popover-content\", \"popover-header\", \"popover-body\"].map(id2 => `${id2}-${uid}`);\n  const {\n    referenceRef,\n    getArrowProps,\n    getPopperProps,\n    getArrowInnerProps,\n    forceUpdate\n  } = usePopper({ ...popperProps,\n    enabled: isOpen || !!computePositionOnMount\n  });\n  const animated = useAnimationState({\n    isOpen,\n    ref: popoverRef\n  });\n  useFocusOnPointerDown({\n    enabled: isOpen,\n    ref: triggerRef\n  });\n  useFocusOnHide(popoverRef, {\n    focusRef: triggerRef,\n    visible: isOpen,\n    shouldFocus: restoreFocus && trigger === TRIGGER.click\n  });\n  useFocusOnShow(popoverRef, {\n    focusRef: initialFocusRef,\n    visible: isOpen,\n    shouldFocus: autoFocus && trigger === TRIGGER.click\n  });\n  useOutsideClick({\n    enabled: isOpen && closeOnBlur,\n    ref: popoverRef,\n\n    handler(event) {\n      const relatedTarget = event.composedPath?.()[0] ?? [event.target];\n      if (contains(triggerRef.current, relatedTarget)) return;\n\n      if (relatedTarget) {\n        setRestoreFocus(!isFocusable(relatedTarget));\n      }\n\n      onClose();\n    }\n\n  });\n  const shouldRenderChildren = lazyDisclosure({\n    wasSelected: hasBeenOpened.current,\n    enabled: isLazy,\n    mode: lazyBehavior,\n    isSelected: animated.present\n  });\n  const getPopoverProps = useCallback(function () {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    let _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    const popoverProps = { ...props2,\n      style: { ...props2.style,\n        transformOrigin: cssVars.transformOrigin.varRef,\n        [cssVars.arrowSize.var]: arrowSize ? `${arrowSize}px` : void 0,\n        [cssVars.arrowShadowColor.var]: arrowShadowColor\n      },\n      ref: mergeRefs(popoverRef, _ref),\n      children: shouldRenderChildren ? props2.children : null,\n      id: popoverId,\n      tabIndex: -1,\n      role: \"dialog\",\n      onKeyDown: callAllHandlers(props2.onKeyDown, event => {\n        if (event.nativeEvent.isComposing) return;\n\n        if (closeOnEsc && event.key === \"Escape\") {\n          event.preventDefault();\n          event.stopPropagation();\n          onClose();\n        }\n      }),\n      onBlur: callAllHandlers(props2.onBlur, event => {\n        const relatedTarget = getRelatedTarget(event);\n        const targetIsPopover = contains(popoverRef.current, relatedTarget);\n        const targetIsTrigger = contains(triggerRef.current, relatedTarget);\n        const isValidBlur = !targetIsPopover && !targetIsTrigger;\n\n        if (relatedTarget) {\n          setRestoreFocus(!isFocusable(relatedTarget));\n        }\n\n        if (isOpen && closeOnBlur && isValidBlur) {\n          onClose();\n        }\n      }),\n      \"aria-labelledby\": hasHeader ? headerId : void 0,\n      \"aria-describedby\": hasBody ? bodyId : void 0\n    };\n\n    if (trigger === TRIGGER.hover) {\n      popoverProps.role = \"tooltip\";\n      popoverProps.onMouseEnter = callAllHandlers(props2.onMouseEnter, () => {\n        isHoveringRef.current = true;\n      });\n      popoverProps.onMouseLeave = callAllHandlers(props2.onMouseLeave, event => {\n        if (event.nativeEvent.relatedTarget === null) {\n          return;\n        }\n\n        isHoveringRef.current = false;\n        setTimeout(() => onClose(), closeDelay);\n      });\n    }\n\n    return popoverProps;\n  }, [shouldRenderChildren, popoverId, hasHeader, headerId, hasBody, bodyId, trigger, closeOnEsc, onClose, isOpen, closeOnBlur, closeDelay, arrowShadowColor, arrowSize]);\n  const getPopoverPositionerProps = useCallback(function () {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let forwardedRef = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return getPopperProps({ ...props2,\n      style: {\n        visibility: isOpen ? \"visible\" : \"hidden\",\n        ...props2.style\n      }\n    }, forwardedRef);\n  }, [isOpen, getPopperProps]);\n  const getAnchorProps = useCallback(function (props2) {\n    let _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    return { ...props2,\n      // If anchor is rendered, it is used as reference.\n      ref: mergeRefs(_ref, anchorRef, referenceRef)\n    };\n  }, [anchorRef, referenceRef]);\n  const openTimeout = useRef(void 0);\n  const closeTimeout = useRef(void 0);\n  const maybeReferenceRef = useCallback(node => {\n    if (anchorRef.current == null) {\n      referenceRef(node);\n    }\n  }, [referenceRef]);\n  const getTriggerProps = useCallback(function () {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    let _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    const triggerProps = { ...props2,\n      ref: mergeRefs(triggerRef, _ref, maybeReferenceRef),\n      id: triggerId,\n      \"aria-haspopup\": \"dialog\",\n      \"aria-expanded\": isOpen,\n      \"aria-controls\": popoverId\n    };\n\n    if (trigger === TRIGGER.click) {\n      triggerProps.onClick = callAllHandlers(props2.onClick, onToggle);\n    }\n\n    if (trigger === TRIGGER.hover) {\n      triggerProps.onFocus = callAllHandlers(props2.onFocus, () => {\n        if (openTimeout.current === void 0) {\n          onOpen();\n        }\n      });\n      triggerProps.onBlur = callAllHandlers(props2.onBlur, event => {\n        const relatedTarget = getRelatedTarget(event);\n        const isValidBlur = !contains(popoverRef.current, relatedTarget);\n\n        if (isOpen && closeOnBlur && isValidBlur) {\n          onClose();\n        }\n      });\n      triggerProps.onKeyDown = callAllHandlers(props2.onKeyDown, event => {\n        if (event.key === \"Escape\") {\n          onClose();\n        }\n      });\n      triggerProps.onMouseEnter = callAllHandlers(props2.onMouseEnter, () => {\n        isHoveringRef.current = true;\n        openTimeout.current = window.setTimeout(() => onOpen(), openDelay);\n      });\n      triggerProps.onMouseLeave = callAllHandlers(props2.onMouseLeave, () => {\n        isHoveringRef.current = false;\n\n        if (openTimeout.current) {\n          clearTimeout(openTimeout.current);\n          openTimeout.current = void 0;\n        }\n\n        closeTimeout.current = window.setTimeout(() => {\n          if (isHoveringRef.current === false) {\n            onClose();\n          }\n        }, closeDelay);\n      });\n    }\n\n    return triggerProps;\n  }, [triggerId, isOpen, popoverId, trigger, maybeReferenceRef, onToggle, onOpen, closeOnBlur, onClose, openDelay, closeDelay]);\n  useEffect(() => {\n    return () => {\n      if (openTimeout.current) {\n        clearTimeout(openTimeout.current);\n      }\n\n      if (closeTimeout.current) {\n        clearTimeout(closeTimeout.current);\n      }\n    };\n  }, []);\n  const getHeaderProps = useCallback(function () {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return { ...props2,\n      id: headerId,\n      ref: mergeRefs(ref, node => {\n        setHasHeader(!!node);\n      })\n    };\n  }, [headerId]);\n  const getBodyProps = useCallback(function () {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return { ...props2,\n      id: bodyId,\n      ref: mergeRefs(ref, node => {\n        setHasBody(!!node);\n      })\n    };\n  }, [bodyId]);\n  return {\n    forceUpdate,\n    isOpen,\n    onAnimationComplete: animated.onComplete,\n    onClose,\n    getAnchorProps,\n    getArrowProps,\n    getArrowInnerProps,\n    getPopoverPositionerProps,\n    getPopoverProps,\n    getTriggerProps,\n    getHeaderProps,\n    getBodyProps\n  };\n}\n\nfunction contains(parent, child) {\n  return parent === child || parent?.contains(child);\n}\n\nfunction getRelatedTarget(event) {\n  const activeEl = event.currentTarget.ownerDocument.activeElement;\n  return event.relatedTarget ?? activeEl;\n}\n\nexport { usePopover };","map":{"version":3,"names":["useDisclosure","useAnimationState","useFocusOnPointerDown","useFocusOnHide","useFocusOnShow","useOutsideClick","mergeRefs","isFocusable","lazyDisclosure","callAllHandlers","useState","useEffect","useRef","useId","useCallback","usePopper","cssVars","TRIGGER","click","hover","usePopover","props","closeOnBlur","closeOnEsc","initialFocusRef","id","returnFocusOnClose","autoFocus","arrowSize","arrowShadowColor","trigger","openDelay","closeDelay","isLazy","lazyBehavior","computePositionOnMount","popperProps","isOpen","onClose","onOpen","onToggle","restoreFocus","setRestoreFocus","anchorRef","triggerRef","popoverRef","isHoveringRef","hasBeenOpened","current","hasHeader","setHasHeader","hasBody","setHasBody","uuid","uid","triggerId","popoverId","headerId","bodyId","map","id2","referenceRef","getArrowProps","getPopperProps","getArrowInnerProps","forceUpdate","enabled","animated","ref","focusRef","visible","shouldFocus","handler","event","relatedTarget","composedPath","target","contains","shouldRenderChildren","wasSelected","mode","isSelected","present","getPopoverProps","props2","_ref","popoverProps","style","transformOrigin","varRef","var","children","tabIndex","role","onKeyDown","nativeEvent","isComposing","key","preventDefault","stopPropagation","onBlur","getRelatedTarget","targetIsPopover","targetIsTrigger","isValidBlur","onMouseEnter","onMouseLeave","setTimeout","getPopoverPositionerProps","forwardedRef","visibility","getAnchorProps","openTimeout","closeTimeout","maybeReferenceRef","node","getTriggerProps","triggerProps","onClick","onFocus","window","clearTimeout","getHeaderProps","getBodyProps","onAnimationComplete","onComplete","parent","child","activeEl","currentTarget","ownerDocument","activeElement"],"sources":["/workspaces/200508238/develop/node_modules/@chakra-ui/react/dist/esm/popover/use-popover.mjs"],"sourcesContent":["'use client';\nimport { useDisclosure, useAnimationState, useFocusOnPointerDown, useFocusOnHide, useFocusOnShow, useOutsideClick, mergeRefs } from '@chakra-ui/hooks';\nimport { isFocusable, lazyDisclosure, callAllHandlers } from '@chakra-ui/utils';\nimport { useState, useEffect, useRef, useId, useCallback } from 'react';\nimport { usePopper } from '../popper/use-popper.mjs';\nimport { cssVars } from '../popper/utils.mjs';\n\nconst TRIGGER = {\n  click: \"click\",\n  hover: \"hover\"\n};\nfunction usePopover(props = {}) {\n  const {\n    closeOnBlur = true,\n    closeOnEsc = true,\n    initialFocusRef,\n    id,\n    returnFocusOnClose = true,\n    autoFocus = true,\n    arrowSize,\n    arrowShadowColor,\n    trigger = TRIGGER.click,\n    openDelay = 200,\n    closeDelay = 200,\n    isLazy,\n    lazyBehavior = \"unmount\",\n    computePositionOnMount,\n    ...popperProps\n  } = props;\n  const { isOpen, onClose, onOpen, onToggle } = useDisclosure(props);\n  const [restoreFocus, setRestoreFocus] = useState(returnFocusOnClose);\n  useEffect(() => setRestoreFocus(returnFocusOnClose), [returnFocusOnClose]);\n  const anchorRef = useRef(null);\n  const triggerRef = useRef(null);\n  const popoverRef = useRef(null);\n  const isHoveringRef = useRef(false);\n  const hasBeenOpened = useRef(false);\n  if (isOpen) {\n    hasBeenOpened.current = true;\n  }\n  const [hasHeader, setHasHeader] = useState(false);\n  const [hasBody, setHasBody] = useState(false);\n  const uuid = useId();\n  const uid = id ?? uuid;\n  const [triggerId, popoverId, headerId, bodyId] = [\n    \"popover-trigger\",\n    \"popover-content\",\n    \"popover-header\",\n    \"popover-body\"\n  ].map((id2) => `${id2}-${uid}`);\n  const {\n    referenceRef,\n    getArrowProps,\n    getPopperProps,\n    getArrowInnerProps,\n    forceUpdate\n  } = usePopper({\n    ...popperProps,\n    enabled: isOpen || !!computePositionOnMount\n  });\n  const animated = useAnimationState({ isOpen, ref: popoverRef });\n  useFocusOnPointerDown({\n    enabled: isOpen,\n    ref: triggerRef\n  });\n  useFocusOnHide(popoverRef, {\n    focusRef: triggerRef,\n    visible: isOpen,\n    shouldFocus: restoreFocus && trigger === TRIGGER.click\n  });\n  useFocusOnShow(popoverRef, {\n    focusRef: initialFocusRef,\n    visible: isOpen,\n    shouldFocus: autoFocus && trigger === TRIGGER.click\n  });\n  useOutsideClick({\n    enabled: isOpen && closeOnBlur,\n    ref: popoverRef,\n    handler(event) {\n      const relatedTarget = event.composedPath?.()[0] ?? [\n        event.target\n      ];\n      if (contains(triggerRef.current, relatedTarget))\n        return;\n      if (relatedTarget) {\n        setRestoreFocus(!isFocusable(relatedTarget));\n      }\n      onClose();\n    }\n  });\n  const shouldRenderChildren = lazyDisclosure({\n    wasSelected: hasBeenOpened.current,\n    enabled: isLazy,\n    mode: lazyBehavior,\n    isSelected: animated.present\n  });\n  const getPopoverProps = useCallback(\n    (props2 = {}, _ref = null) => {\n      const popoverProps = {\n        ...props2,\n        style: {\n          ...props2.style,\n          transformOrigin: cssVars.transformOrigin.varRef,\n          [cssVars.arrowSize.var]: arrowSize ? `${arrowSize}px` : void 0,\n          [cssVars.arrowShadowColor.var]: arrowShadowColor\n        },\n        ref: mergeRefs(popoverRef, _ref),\n        children: shouldRenderChildren ? props2.children : null,\n        id: popoverId,\n        tabIndex: -1,\n        role: \"dialog\",\n        onKeyDown: callAllHandlers(props2.onKeyDown, (event) => {\n          if (event.nativeEvent.isComposing)\n            return;\n          if (closeOnEsc && event.key === \"Escape\") {\n            event.preventDefault();\n            event.stopPropagation();\n            onClose();\n          }\n        }),\n        onBlur: callAllHandlers(props2.onBlur, (event) => {\n          const relatedTarget = getRelatedTarget(event);\n          const targetIsPopover = contains(popoverRef.current, relatedTarget);\n          const targetIsTrigger = contains(triggerRef.current, relatedTarget);\n          const isValidBlur = !targetIsPopover && !targetIsTrigger;\n          if (relatedTarget) {\n            setRestoreFocus(!isFocusable(relatedTarget));\n          }\n          if (isOpen && closeOnBlur && isValidBlur) {\n            onClose();\n          }\n        }),\n        \"aria-labelledby\": hasHeader ? headerId : void 0,\n        \"aria-describedby\": hasBody ? bodyId : void 0\n      };\n      if (trigger === TRIGGER.hover) {\n        popoverProps.role = \"tooltip\";\n        popoverProps.onMouseEnter = callAllHandlers(props2.onMouseEnter, () => {\n          isHoveringRef.current = true;\n        });\n        popoverProps.onMouseLeave = callAllHandlers(\n          props2.onMouseLeave,\n          (event) => {\n            if (event.nativeEvent.relatedTarget === null) {\n              return;\n            }\n            isHoveringRef.current = false;\n            setTimeout(() => onClose(), closeDelay);\n          }\n        );\n      }\n      return popoverProps;\n    },\n    [\n      shouldRenderChildren,\n      popoverId,\n      hasHeader,\n      headerId,\n      hasBody,\n      bodyId,\n      trigger,\n      closeOnEsc,\n      onClose,\n      isOpen,\n      closeOnBlur,\n      closeDelay,\n      arrowShadowColor,\n      arrowSize\n    ]\n  );\n  const getPopoverPositionerProps = useCallback(\n    (props2 = {}, forwardedRef = null) => getPopperProps(\n      {\n        ...props2,\n        style: {\n          visibility: isOpen ? \"visible\" : \"hidden\",\n          ...props2.style\n        }\n      },\n      forwardedRef\n    ),\n    [isOpen, getPopperProps]\n  );\n  const getAnchorProps = useCallback(\n    (props2, _ref = null) => {\n      return {\n        ...props2,\n        // If anchor is rendered, it is used as reference.\n        ref: mergeRefs(_ref, anchorRef, referenceRef)\n      };\n    },\n    [anchorRef, referenceRef]\n  );\n  const openTimeout = useRef(void 0);\n  const closeTimeout = useRef(void 0);\n  const maybeReferenceRef = useCallback(\n    (node) => {\n      if (anchorRef.current == null) {\n        referenceRef(node);\n      }\n    },\n    [referenceRef]\n  );\n  const getTriggerProps = useCallback(\n    (props2 = {}, _ref = null) => {\n      const triggerProps = {\n        ...props2,\n        ref: mergeRefs(triggerRef, _ref, maybeReferenceRef),\n        id: triggerId,\n        \"aria-haspopup\": \"dialog\",\n        \"aria-expanded\": isOpen,\n        \"aria-controls\": popoverId\n      };\n      if (trigger === TRIGGER.click) {\n        triggerProps.onClick = callAllHandlers(props2.onClick, onToggle);\n      }\n      if (trigger === TRIGGER.hover) {\n        triggerProps.onFocus = callAllHandlers(props2.onFocus, () => {\n          if (openTimeout.current === void 0) {\n            onOpen();\n          }\n        });\n        triggerProps.onBlur = callAllHandlers(props2.onBlur, (event) => {\n          const relatedTarget = getRelatedTarget(event);\n          const isValidBlur = !contains(popoverRef.current, relatedTarget);\n          if (isOpen && closeOnBlur && isValidBlur) {\n            onClose();\n          }\n        });\n        triggerProps.onKeyDown = callAllHandlers(props2.onKeyDown, (event) => {\n          if (event.key === \"Escape\") {\n            onClose();\n          }\n        });\n        triggerProps.onMouseEnter = callAllHandlers(props2.onMouseEnter, () => {\n          isHoveringRef.current = true;\n          openTimeout.current = window.setTimeout(() => onOpen(), openDelay);\n        });\n        triggerProps.onMouseLeave = callAllHandlers(props2.onMouseLeave, () => {\n          isHoveringRef.current = false;\n          if (openTimeout.current) {\n            clearTimeout(openTimeout.current);\n            openTimeout.current = void 0;\n          }\n          closeTimeout.current = window.setTimeout(() => {\n            if (isHoveringRef.current === false) {\n              onClose();\n            }\n          }, closeDelay);\n        });\n      }\n      return triggerProps;\n    },\n    [\n      triggerId,\n      isOpen,\n      popoverId,\n      trigger,\n      maybeReferenceRef,\n      onToggle,\n      onOpen,\n      closeOnBlur,\n      onClose,\n      openDelay,\n      closeDelay\n    ]\n  );\n  useEffect(() => {\n    return () => {\n      if (openTimeout.current) {\n        clearTimeout(openTimeout.current);\n      }\n      if (closeTimeout.current) {\n        clearTimeout(closeTimeout.current);\n      }\n    };\n  }, []);\n  const getHeaderProps = useCallback(\n    (props2 = {}, ref = null) => ({\n      ...props2,\n      id: headerId,\n      ref: mergeRefs(ref, (node) => {\n        setHasHeader(!!node);\n      })\n    }),\n    [headerId]\n  );\n  const getBodyProps = useCallback(\n    (props2 = {}, ref = null) => ({\n      ...props2,\n      id: bodyId,\n      ref: mergeRefs(ref, (node) => {\n        setHasBody(!!node);\n      })\n    }),\n    [bodyId]\n  );\n  return {\n    forceUpdate,\n    isOpen,\n    onAnimationComplete: animated.onComplete,\n    onClose,\n    getAnchorProps,\n    getArrowProps,\n    getArrowInnerProps,\n    getPopoverPositionerProps,\n    getPopoverProps,\n    getTriggerProps,\n    getHeaderProps,\n    getBodyProps\n  };\n}\nfunction contains(parent, child) {\n  return parent === child || parent?.contains(child);\n}\nfunction getRelatedTarget(event) {\n  const activeEl = event.currentTarget.ownerDocument.activeElement;\n  return event.relatedTarget ?? activeEl;\n}\n\nexport { usePopover };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}