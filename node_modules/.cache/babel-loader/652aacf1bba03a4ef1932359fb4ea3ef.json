{"ast":null,"code":"'use client';\n\nimport { createContext } from '@chakra-ui/utils';\nimport { InfoIcon, WarningIcon, CheckIcon } from './alert-icons.mjs';\nimport { Spinner } from '../spinner/spinner.mjs';\nconst [AlertProvider, useAlertContext] = createContext({\n  name: \"AlertContext\",\n  hookName: \"useAlertContext\",\n  providerName: \"<Alert />\"\n});\nconst [AlertStylesProvider, useAlertStyles] = createContext({\n  name: `AlertStylesContext`,\n  hookName: `useAlertStyles`,\n  providerName: \"<Alert />\"\n});\nconst STATUSES = {\n  info: {\n    icon: InfoIcon,\n    colorScheme: \"blue\"\n  },\n  warning: {\n    icon: WarningIcon,\n    colorScheme: \"orange\"\n  },\n  success: {\n    icon: CheckIcon,\n    colorScheme: \"green\"\n  },\n  error: {\n    icon: WarningIcon,\n    colorScheme: \"red\"\n  },\n  loading: {\n    icon: Spinner,\n    colorScheme: \"blue\"\n  }\n};\n\nfunction getStatusColorScheme(status) {\n  return STATUSES[status].colorScheme;\n}\n\nfunction getStatusIcon(status) {\n  return STATUSES[status].icon;\n}\n\nexport { AlertProvider, AlertStylesProvider, getStatusColorScheme, getStatusIcon, useAlertContext, useAlertStyles };","map":{"version":3,"names":["createContext","InfoIcon","WarningIcon","CheckIcon","Spinner","AlertProvider","useAlertContext","name","hookName","providerName","AlertStylesProvider","useAlertStyles","STATUSES","info","icon","colorScheme","warning","success","error","loading","getStatusColorScheme","status","getStatusIcon"],"sources":["/workspaces/200508238/develop/node_modules/@chakra-ui/react/dist/esm/alert/alert-context.mjs"],"sourcesContent":["'use client';\nimport { createContext } from '@chakra-ui/utils';\nimport { InfoIcon, WarningIcon, CheckIcon } from './alert-icons.mjs';\nimport { Spinner } from '../spinner/spinner.mjs';\n\nconst [AlertProvider, useAlertContext] = createContext({\n  name: \"AlertContext\",\n  hookName: \"useAlertContext\",\n  providerName: \"<Alert />\"\n});\nconst [AlertStylesProvider, useAlertStyles] = createContext({\n  name: `AlertStylesContext`,\n  hookName: `useAlertStyles`,\n  providerName: \"<Alert />\"\n});\nconst STATUSES = {\n  info: { icon: InfoIcon, colorScheme: \"blue\" },\n  warning: { icon: WarningIcon, colorScheme: \"orange\" },\n  success: { icon: CheckIcon, colorScheme: \"green\" },\n  error: { icon: WarningIcon, colorScheme: \"red\" },\n  loading: { icon: Spinner, colorScheme: \"blue\" }\n};\nfunction getStatusColorScheme(status) {\n  return STATUSES[status].colorScheme;\n}\nfunction getStatusIcon(status) {\n  return STATUSES[status].icon;\n}\n\nexport { AlertProvider, AlertStylesProvider, getStatusColorScheme, getStatusIcon, useAlertContext, useAlertStyles };\n"],"mappings":"AAAA;;AACA,SAASA,aAAT,QAA8B,kBAA9B;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,SAAhC,QAAiD,mBAAjD;AACA,SAASC,OAAT,QAAwB,wBAAxB;AAEA,MAAM,CAACC,aAAD,EAAgBC,eAAhB,IAAmCN,aAAa,CAAC;EACrDO,IAAI,EAAE,cAD+C;EAErDC,QAAQ,EAAE,iBAF2C;EAGrDC,YAAY,EAAE;AAHuC,CAAD,CAAtD;AAKA,MAAM,CAACC,mBAAD,EAAsBC,cAAtB,IAAwCX,aAAa,CAAC;EAC1DO,IAAI,EAAG,oBADmD;EAE1DC,QAAQ,EAAG,gBAF+C;EAG1DC,YAAY,EAAE;AAH4C,CAAD,CAA3D;AAKA,MAAMG,QAAQ,GAAG;EACfC,IAAI,EAAE;IAAEC,IAAI,EAAEb,QAAR;IAAkBc,WAAW,EAAE;EAA/B,CADS;EAEfC,OAAO,EAAE;IAAEF,IAAI,EAAEZ,WAAR;IAAqBa,WAAW,EAAE;EAAlC,CAFM;EAGfE,OAAO,EAAE;IAAEH,IAAI,EAAEX,SAAR;IAAmBY,WAAW,EAAE;EAAhC,CAHM;EAIfG,KAAK,EAAE;IAAEJ,IAAI,EAAEZ,WAAR;IAAqBa,WAAW,EAAE;EAAlC,CAJQ;EAKfI,OAAO,EAAE;IAAEL,IAAI,EAAEV,OAAR;IAAiBW,WAAW,EAAE;EAA9B;AALM,CAAjB;;AAOA,SAASK,oBAAT,CAA8BC,MAA9B,EAAsC;EACpC,OAAOT,QAAQ,CAACS,MAAD,CAAR,CAAiBN,WAAxB;AACD;;AACD,SAASO,aAAT,CAAuBD,MAAvB,EAA+B;EAC7B,OAAOT,QAAQ,CAACS,MAAD,CAAR,CAAiBP,IAAxB;AACD;;AAED,SAAST,aAAT,EAAwBK,mBAAxB,EAA6CU,oBAA7C,EAAmEE,aAAnE,EAAkFhB,eAAlF,EAAmGK,cAAnG"},"metadata":{},"sourceType":"module"}