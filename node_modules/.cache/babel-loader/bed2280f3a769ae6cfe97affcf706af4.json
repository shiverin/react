{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/workspaces/200508238/develop/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/workspaces/200508238/develop/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"noOfLines\", \"spacing\", \"skeletonHeight\", \"className\", \"startColor\", \"endColor\", \"isLoaded\", \"fadeDuration\", \"speed\", \"variant\", \"size\", \"colorScheme\", \"children\"];\nimport { jsx } from 'react/jsx-runtime';\nimport { cx } from '@chakra-ui/utils';\nimport { Skeleton } from './skeleton.mjs';\nimport { useBreakpointValue } from '../media-query/use-breakpoint-value.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nfunction range(count) {\n  return Array(count).fill(1).map(function (_, index) {\n    return index + 1;\n  });\n}\n\nvar defaultNoOfLines = 3;\n\nvar SkeletonText = function SkeletonText(props) {\n  var _props$noOfLines = props.noOfLines,\n      noOfLines = _props$noOfLines === void 0 ? defaultNoOfLines : _props$noOfLines,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? \"0.5rem\" : _props$spacing,\n      _props$skeletonHeight = props.skeletonHeight,\n      skeletonHeight = _props$skeletonHeight === void 0 ? \"0.5rem\" : _props$skeletonHeight,\n      className = props.className,\n      startColor = props.startColor,\n      endColor = props.endColor,\n      isLoaded = props.isLoaded,\n      fadeDuration = props.fadeDuration,\n      speed = props.speed,\n      variant = props.variant,\n      size = props.size,\n      colorScheme = props.colorScheme,\n      children = props.children,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  var noOfLinesValue = useBreakpointValue(typeof noOfLines === \"number\" ? [noOfLines] : noOfLines) || defaultNoOfLines;\n  var numbers = range(noOfLinesValue);\n\n  var getWidth = function getWidth(index) {\n    if (noOfLinesValue > 1) {\n      return index === numbers.length ? \"80%\" : \"100%\";\n    }\n\n    return \"100%\";\n  };\n\n  var _className = cx(\"chakra-skeleton__group\", className);\n\n  return /* @__PURE__ */jsx(chakra.div, _objectSpread(_objectSpread({\n    className: _className\n  }, rest), {}, {\n    children: numbers.map(function (number, index) {\n      if (isLoaded && index > 0) {\n        return null;\n      }\n\n      var sizeProps = isLoaded ? null : {\n        mb: number === numbers.length ? \"0\" : spacing,\n        width: getWidth(number),\n        height: skeletonHeight\n      };\n      return /* @__PURE__ */jsx(Skeleton, _objectSpread(_objectSpread({\n        startColor: startColor,\n        endColor: endColor,\n        isLoaded: isLoaded,\n        fadeDuration: fadeDuration,\n        speed: speed,\n        variant: variant,\n        size: size,\n        colorScheme: colorScheme\n      }, sizeProps), {}, {\n        // allows animating the children\n        children: index === 0 ? children : void 0\n      }), numbers.length.toString() + number);\n    })\n  }));\n};\n\nSkeletonText.displayName = \"SkeletonText\";\nexport { SkeletonText };","map":{"version":3,"names":["jsx","cx","Skeleton","useBreakpointValue","chakra","range","count","Array","fill","map","_","index","defaultNoOfLines","SkeletonText","props","noOfLines","spacing","skeletonHeight","className","startColor","endColor","isLoaded","fadeDuration","speed","variant","size","colorScheme","children","rest","noOfLinesValue","numbers","getWidth","length","_className","div","number","sizeProps","mb","width","height","toString","displayName"],"sources":["/workspaces/200508238/develop/node_modules/@chakra-ui/react/dist/esm/skeleton/skeleton-text.mjs"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { cx } from '@chakra-ui/utils';\nimport { Skeleton } from './skeleton.mjs';\nimport { useBreakpointValue } from '../media-query/use-breakpoint-value.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nfunction range(count) {\n  return Array(count).fill(1).map((_, index) => index + 1);\n}\nconst defaultNoOfLines = 3;\nconst SkeletonText = (props) => {\n  const {\n    noOfLines = defaultNoOfLines,\n    spacing = \"0.5rem\",\n    skeletonHeight = \"0.5rem\",\n    className,\n    startColor,\n    endColor,\n    isLoaded,\n    fadeDuration,\n    speed,\n    variant,\n    size,\n    colorScheme,\n    children,\n    ...rest\n  } = props;\n  const noOfLinesValue = useBreakpointValue(\n    typeof noOfLines === \"number\" ? [noOfLines] : noOfLines\n  ) || defaultNoOfLines;\n  const numbers = range(noOfLinesValue);\n  const getWidth = (index) => {\n    if (noOfLinesValue > 1) {\n      return index === numbers.length ? \"80%\" : \"100%\";\n    }\n    return \"100%\";\n  };\n  const _className = cx(\"chakra-skeleton__group\", className);\n  return /* @__PURE__ */ jsx(chakra.div, { className: _className, ...rest, children: numbers.map((number, index) => {\n    if (isLoaded && index > 0) {\n      return null;\n    }\n    const sizeProps = isLoaded ? null : {\n      mb: number === numbers.length ? \"0\" : spacing,\n      width: getWidth(number),\n      height: skeletonHeight\n    };\n    return /* @__PURE__ */ jsx(\n      Skeleton,\n      {\n        startColor,\n        endColor,\n        isLoaded,\n        fadeDuration,\n        speed,\n        variant,\n        size,\n        colorScheme,\n        ...sizeProps,\n        // allows animating the children\n        children: index === 0 ? children : void 0\n      },\n      numbers.length.toString() + number\n    );\n  }) });\n};\nSkeletonText.displayName = \"SkeletonText\";\n\nexport { SkeletonText };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}