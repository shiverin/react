{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { cx } from '@chakra-ui/utils';\nimport { Skeleton } from './skeleton.mjs';\nimport { useBreakpointValue } from '../media-query/use-breakpoint-value.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nfunction range(count) {\n  return Array(count).fill(1).map((_, index) => index + 1);\n}\n\nconst defaultNoOfLines = 3;\n\nconst SkeletonText = props => {\n  const {\n    noOfLines = defaultNoOfLines,\n    spacing = \"0.5rem\",\n    skeletonHeight = \"0.5rem\",\n    className,\n    startColor,\n    endColor,\n    isLoaded,\n    fadeDuration,\n    speed,\n    variant,\n    size,\n    colorScheme,\n    children,\n    ...rest\n  } = props;\n  const noOfLinesValue = useBreakpointValue(typeof noOfLines === \"number\" ? [noOfLines] : noOfLines) || defaultNoOfLines;\n  const numbers = range(noOfLinesValue);\n\n  const getWidth = index => {\n    if (noOfLinesValue > 1) {\n      return index === numbers.length ? \"80%\" : \"100%\";\n    }\n\n    return \"100%\";\n  };\n\n  const _className = cx(\"chakra-skeleton__group\", className);\n\n  return /* @__PURE__ */jsx(chakra.div, {\n    className: _className,\n    ...rest,\n    children: numbers.map((number, index) => {\n      if (isLoaded && index > 0) {\n        return null;\n      }\n\n      const sizeProps = isLoaded ? null : {\n        mb: number === numbers.length ? \"0\" : spacing,\n        width: getWidth(number),\n        height: skeletonHeight\n      };\n      return /* @__PURE__ */jsx(Skeleton, {\n        startColor,\n        endColor,\n        isLoaded,\n        fadeDuration,\n        speed,\n        variant,\n        size,\n        colorScheme,\n        ...sizeProps,\n        // allows animating the children\n        children: index === 0 ? children : void 0\n      }, numbers.length.toString() + number);\n    })\n  });\n};\n\nSkeletonText.displayName = \"SkeletonText\";\nexport { SkeletonText };","map":{"version":3,"names":["jsx","cx","Skeleton","useBreakpointValue","chakra","range","count","Array","fill","map","_","index","defaultNoOfLines","SkeletonText","props","noOfLines","spacing","skeletonHeight","className","startColor","endColor","isLoaded","fadeDuration","speed","variant","size","colorScheme","children","rest","noOfLinesValue","numbers","getWidth","length","_className","div","number","sizeProps","mb","width","height","toString","displayName"],"sources":["/workspaces/200508238/develop/node_modules/@chakra-ui/react/dist/esm/skeleton/skeleton-text.mjs"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { cx } from '@chakra-ui/utils';\nimport { Skeleton } from './skeleton.mjs';\nimport { useBreakpointValue } from '../media-query/use-breakpoint-value.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nfunction range(count) {\n  return Array(count).fill(1).map((_, index) => index + 1);\n}\nconst defaultNoOfLines = 3;\nconst SkeletonText = (props) => {\n  const {\n    noOfLines = defaultNoOfLines,\n    spacing = \"0.5rem\",\n    skeletonHeight = \"0.5rem\",\n    className,\n    startColor,\n    endColor,\n    isLoaded,\n    fadeDuration,\n    speed,\n    variant,\n    size,\n    colorScheme,\n    children,\n    ...rest\n  } = props;\n  const noOfLinesValue = useBreakpointValue(\n    typeof noOfLines === \"number\" ? [noOfLines] : noOfLines\n  ) || defaultNoOfLines;\n  const numbers = range(noOfLinesValue);\n  const getWidth = (index) => {\n    if (noOfLinesValue > 1) {\n      return index === numbers.length ? \"80%\" : \"100%\";\n    }\n    return \"100%\";\n  };\n  const _className = cx(\"chakra-skeleton__group\", className);\n  return /* @__PURE__ */ jsx(chakra.div, { className: _className, ...rest, children: numbers.map((number, index) => {\n    if (isLoaded && index > 0) {\n      return null;\n    }\n    const sizeProps = isLoaded ? null : {\n      mb: number === numbers.length ? \"0\" : spacing,\n      width: getWidth(number),\n      height: skeletonHeight\n    };\n    return /* @__PURE__ */ jsx(\n      Skeleton,\n      {\n        startColor,\n        endColor,\n        isLoaded,\n        fadeDuration,\n        speed,\n        variant,\n        size,\n        colorScheme,\n        ...sizeProps,\n        // allows animating the children\n        children: index === 0 ? children : void 0\n      },\n      numbers.length.toString() + number\n    );\n  }) });\n};\nSkeletonText.displayName = \"SkeletonText\";\n\nexport { SkeletonText };\n"],"mappings":"AAAA;;AACA,SAASA,GAAT,QAAoB,mBAApB;AACA,SAASC,EAAT,QAAmB,kBAAnB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,kBAAT,QAAmC,yCAAnC;AACA,SAASC,MAAT,QAAuB,uBAAvB;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;EACpB,OAAOC,KAAK,CAACD,KAAD,CAAL,CAAaE,IAAb,CAAkB,CAAlB,EAAqBC,GAArB,CAAyB,CAACC,CAAD,EAAIC,KAAJ,KAAcA,KAAK,GAAG,CAA/C,CAAP;AACD;;AACD,MAAMC,gBAAgB,GAAG,CAAzB;;AACA,MAAMC,YAAY,GAAIC,KAAD,IAAW;EAC9B,MAAM;IACJC,SAAS,GAAGH,gBADR;IAEJI,OAAO,GAAG,QAFN;IAGJC,cAAc,GAAG,QAHb;IAIJC,SAJI;IAKJC,UALI;IAMJC,QANI;IAOJC,QAPI;IAQJC,YARI;IASJC,KATI;IAUJC,OAVI;IAWJC,IAXI;IAYJC,WAZI;IAaJC,QAbI;IAcJ,GAAGC;EAdC,IAeFd,KAfJ;EAgBA,MAAMe,cAAc,GAAG1B,kBAAkB,CACvC,OAAOY,SAAP,KAAqB,QAArB,GAAgC,CAACA,SAAD,CAAhC,GAA8CA,SADP,CAAlB,IAElBH,gBAFL;EAGA,MAAMkB,OAAO,GAAGzB,KAAK,CAACwB,cAAD,CAArB;;EACA,MAAME,QAAQ,GAAIpB,KAAD,IAAW;IAC1B,IAAIkB,cAAc,GAAG,CAArB,EAAwB;MACtB,OAAOlB,KAAK,KAAKmB,OAAO,CAACE,MAAlB,GAA2B,KAA3B,GAAmC,MAA1C;IACD;;IACD,OAAO,MAAP;EACD,CALD;;EAMA,MAAMC,UAAU,GAAGhC,EAAE,CAAC,wBAAD,EAA2BiB,SAA3B,CAArB;;EACA,OAAO,eAAgBlB,GAAG,CAACI,MAAM,CAAC8B,GAAR,EAAa;IAAEhB,SAAS,EAAEe,UAAb;IAAyB,GAAGL,IAA5B;IAAkCD,QAAQ,EAAEG,OAAO,CAACrB,GAAR,CAAY,CAAC0B,MAAD,EAASxB,KAAT,KAAmB;MAChH,IAAIU,QAAQ,IAAIV,KAAK,GAAG,CAAxB,EAA2B;QACzB,OAAO,IAAP;MACD;;MACD,MAAMyB,SAAS,GAAGf,QAAQ,GAAG,IAAH,GAAU;QAClCgB,EAAE,EAAEF,MAAM,KAAKL,OAAO,CAACE,MAAnB,GAA4B,GAA5B,GAAkChB,OADJ;QAElCsB,KAAK,EAAEP,QAAQ,CAACI,MAAD,CAFmB;QAGlCI,MAAM,EAAEtB;MAH0B,CAApC;MAKA,OAAO,eAAgBjB,GAAG,CACxBE,QADwB,EAExB;QACEiB,UADF;QAEEC,QAFF;QAGEC,QAHF;QAIEC,YAJF;QAKEC,KALF;QAMEC,OANF;QAOEC,IAPF;QAQEC,WARF;QASE,GAAGU,SATL;QAUE;QACAT,QAAQ,EAAEhB,KAAK,KAAK,CAAV,GAAcgB,QAAd,GAAyB,KAAK;MAX1C,CAFwB,EAexBG,OAAO,CAACE,MAAR,CAAeQ,QAAf,KAA4BL,MAfJ,CAA1B;IAiBD,CA1BkF;EAA5C,CAAb,CAA1B;AA2BD,CAvDD;;AAwDAtB,YAAY,CAAC4B,WAAb,GAA2B,cAA3B;AAEA,SAAS5B,YAAT"},"metadata":{},"sourceType":"module"}