{"ast":null,"code":"'use client';\n\nimport { getAllFocusable, getActiveElement, isTabbable } from '@chakra-ui/utils';\nimport { useRef, useCallback } from 'react';\nimport { useEventListener } from './use-event-listener.mjs';\nimport { useSafeLayoutEffect } from './use-safe-layout-effect.mjs';\nimport { useUpdateEffect } from './use-update-effect.mjs';\n\nfunction preventReturnFocus(containerRef) {\n  const el = containerRef.current;\n  if (!el) return false;\n  const activeElement = getActiveElement(el);\n  if (!activeElement) return false;\n  if (el.contains(activeElement)) return false;\n  if (isTabbable(activeElement)) return true;\n  return false;\n}\n\nfunction useFocusOnHide(containerRef, options) {\n  const {\n    shouldFocus: shouldFocusProp,\n    visible,\n    focusRef\n  } = options;\n  const shouldFocus = shouldFocusProp && !visible;\n  useUpdateEffect(() => {\n    if (!shouldFocus) return;\n\n    if (preventReturnFocus(containerRef)) {\n      return;\n    }\n\n    const el = (focusRef === null || focusRef === void 0 ? void 0 : focusRef.current) || containerRef.current;\n    let rafId;\n\n    if (el) {\n      rafId = requestAnimationFrame(() => {\n        el.focus({\n          preventScroll: true\n        });\n      });\n      return () => {\n        cancelAnimationFrame(rafId);\n      };\n    }\n  }, [shouldFocus, containerRef, focusRef]);\n}\n\nconst defaultOptions = {\n  preventScroll: true,\n  shouldFocus: false\n};\n\nfunction useFocusOnShow(target) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultOptions;\n  const {\n    focusRef,\n    preventScroll,\n    shouldFocus,\n    visible\n  } = options;\n  const element = isRefObject(target) ? target.current : target;\n  const autoFocusValue = shouldFocus && visible;\n  const autoFocusRef = useRef(autoFocusValue);\n  const lastVisibleRef = useRef(visible);\n  useSafeLayoutEffect(() => {\n    if (!lastVisibleRef.current && visible) {\n      autoFocusRef.current = autoFocusValue;\n    }\n\n    lastVisibleRef.current = visible;\n  }, [visible, autoFocusValue]);\n  const onFocus = useCallback(() => {\n    if (!visible || !element || !autoFocusRef.current) return;\n    autoFocusRef.current = false;\n    if (element.contains(document.activeElement)) return;\n\n    if (focusRef !== null && focusRef !== void 0 && focusRef.current) {\n      requestAnimationFrame(() => {\n        var _focusRef$current;\n\n        (_focusRef$current = focusRef.current) === null || _focusRef$current === void 0 ? void 0 : _focusRef$current.focus({\n          preventScroll\n        });\n      });\n    } else {\n      const tabbableEls = getAllFocusable(element);\n\n      if (tabbableEls.length > 0) {\n        requestAnimationFrame(() => {\n          tabbableEls[0].focus({\n            preventScroll\n          });\n        });\n      }\n    }\n  }, [visible, preventScroll, element, focusRef]);\n  useUpdateEffect(() => {\n    onFocus();\n  }, [onFocus]);\n  useEventListener(element, \"transitionend\", onFocus);\n}\n\nfunction isRefObject(val) {\n  return \"current\" in val;\n}\n\nexport { useFocusOnHide, useFocusOnShow };","map":{"version":3,"names":["getAllFocusable","getActiveElement","isTabbable","useRef","useCallback","useEventListener","useSafeLayoutEffect","useUpdateEffect","preventReturnFocus","containerRef","el","current","activeElement","contains","useFocusOnHide","options","shouldFocus","shouldFocusProp","visible","focusRef","rafId","requestAnimationFrame","focus","preventScroll","cancelAnimationFrame","defaultOptions","useFocusOnShow","target","element","isRefObject","autoFocusValue","autoFocusRef","lastVisibleRef","onFocus","document","tabbableEls","length","val"],"sources":["/workspaces/200508238/develop/node_modules/@chakra-ui/react/node_modules/@chakra-ui/hooks/dist/esm/use-focus-effect.mjs"],"sourcesContent":["'use client';\nimport { getAllFocusable, getActiveElement, isTabbable } from '@chakra-ui/utils';\nimport { useRef, useCallback } from 'react';\nimport { useEventListener } from './use-event-listener.mjs';\nimport { useSafeLayoutEffect } from './use-safe-layout-effect.mjs';\nimport { useUpdateEffect } from './use-update-effect.mjs';\n\nfunction preventReturnFocus(containerRef) {\n  const el = containerRef.current;\n  if (!el)\n    return false;\n  const activeElement = getActiveElement(el);\n  if (!activeElement)\n    return false;\n  if (el.contains(activeElement))\n    return false;\n  if (isTabbable(activeElement))\n    return true;\n  return false;\n}\nfunction useFocusOnHide(containerRef, options) {\n  const { shouldFocus: shouldFocusProp, visible, focusRef } = options;\n  const shouldFocus = shouldFocusProp && !visible;\n  useUpdateEffect(() => {\n    if (!shouldFocus)\n      return;\n    if (preventReturnFocus(containerRef)) {\n      return;\n    }\n    const el = focusRef?.current || containerRef.current;\n    let rafId;\n    if (el) {\n      rafId = requestAnimationFrame(() => {\n        el.focus({ preventScroll: true });\n      });\n      return () => {\n        cancelAnimationFrame(rafId);\n      };\n    }\n  }, [shouldFocus, containerRef, focusRef]);\n}\nconst defaultOptions = {\n  preventScroll: true,\n  shouldFocus: false\n};\nfunction useFocusOnShow(target, options = defaultOptions) {\n  const { focusRef, preventScroll, shouldFocus, visible } = options;\n  const element = isRefObject(target) ? target.current : target;\n  const autoFocusValue = shouldFocus && visible;\n  const autoFocusRef = useRef(autoFocusValue);\n  const lastVisibleRef = useRef(visible);\n  useSafeLayoutEffect(() => {\n    if (!lastVisibleRef.current && visible) {\n      autoFocusRef.current = autoFocusValue;\n    }\n    lastVisibleRef.current = visible;\n  }, [visible, autoFocusValue]);\n  const onFocus = useCallback(() => {\n    if (!visible || !element || !autoFocusRef.current)\n      return;\n    autoFocusRef.current = false;\n    if (element.contains(document.activeElement))\n      return;\n    if (focusRef?.current) {\n      requestAnimationFrame(() => {\n        focusRef.current?.focus({ preventScroll });\n      });\n    } else {\n      const tabbableEls = getAllFocusable(element);\n      if (tabbableEls.length > 0) {\n        requestAnimationFrame(() => {\n          tabbableEls[0].focus({ preventScroll });\n        });\n      }\n    }\n  }, [visible, preventScroll, element, focusRef]);\n  useUpdateEffect(() => {\n    onFocus();\n  }, [onFocus]);\n  useEventListener(element, \"transitionend\", onFocus);\n}\nfunction isRefObject(val) {\n  return \"current\" in val;\n}\n\nexport { useFocusOnHide, useFocusOnShow };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}