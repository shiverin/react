{"ast":null,"code":"import { analyzeBreakpoints } from '@chakra-ui/utils';\nimport { createThemeVars } from './create-theme-vars.mjs';\nimport { omitVars } from './theme-tokens.mjs';\n\nfunction toCSSVar(rawTheme) {\n  const theme = omitVars(rawTheme);\n  const {\n    /**\n     * This is more like a dictionary of tokens users will type `green.500`,\n     * and their equivalent css variable.\n     */\n    cssMap,\n\n    /**\n     * The extracted css variables will be stored here, and used in\n     * the emotion's <Global/> component to attach variables to `:root`\n     */\n    cssVars\n  } = createThemeVars(theme);\n  const defaultCssVars = {\n    \"--chakra-ring-inset\": \"var(--chakra-empty,/*!*/ /*!*/)\",\n    \"--chakra-ring-offset-width\": \"0px\",\n    \"--chakra-ring-offset-color\": \"#fff\",\n    \"--chakra-ring-color\": \"rgba(66, 153, 225, 0.6)\",\n    \"--chakra-ring-offset-shadow\": \"0 0 #0000\",\n    \"--chakra-ring-shadow\": \"0 0 #0000\",\n    \"--chakra-space-x-reverse\": \"0\",\n    \"--chakra-space-y-reverse\": \"0\"\n  };\n  Object.assign(theme, {\n    __cssVars: { ...defaultCssVars,\n      ...cssVars\n    },\n    __cssMap: cssMap,\n    __breakpoints: analyzeBreakpoints(theme.breakpoints)\n  });\n  return theme;\n}\n\nexport { toCSSVar };","map":{"version":3,"names":["analyzeBreakpoints","createThemeVars","omitVars","toCSSVar","rawTheme","theme","cssMap","cssVars","defaultCssVars","Object","assign","__cssVars","__cssMap","__breakpoints","breakpoints"],"sources":["/workspaces/200508238/develop/node_modules/@chakra-ui/react/node_modules/@chakra-ui/styled-system/dist/esm/create-theme-vars/to-css-var.mjs"],"sourcesContent":["import { analyzeBreakpoints } from '@chakra-ui/utils';\nimport { createThemeVars } from './create-theme-vars.mjs';\nimport { omitVars } from './theme-tokens.mjs';\n\nfunction toCSSVar(rawTheme) {\n  const theme = omitVars(rawTheme);\n  const {\n    /**\n     * This is more like a dictionary of tokens users will type `green.500`,\n     * and their equivalent css variable.\n     */\n    cssMap,\n    /**\n     * The extracted css variables will be stored here, and used in\n     * the emotion's <Global/> component to attach variables to `:root`\n     */\n    cssVars\n  } = createThemeVars(theme);\n  const defaultCssVars = {\n    \"--chakra-ring-inset\": \"var(--chakra-empty,/*!*/ /*!*/)\",\n    \"--chakra-ring-offset-width\": \"0px\",\n    \"--chakra-ring-offset-color\": \"#fff\",\n    \"--chakra-ring-color\": \"rgba(66, 153, 225, 0.6)\",\n    \"--chakra-ring-offset-shadow\": \"0 0 #0000\",\n    \"--chakra-ring-shadow\": \"0 0 #0000\",\n    \"--chakra-space-x-reverse\": \"0\",\n    \"--chakra-space-y-reverse\": \"0\"\n  };\n  Object.assign(theme, {\n    __cssVars: { ...defaultCssVars, ...cssVars },\n    __cssMap: cssMap,\n    __breakpoints: analyzeBreakpoints(theme.breakpoints)\n  });\n  return theme;\n}\n\nexport { toCSSVar };\n"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,kBAAnC;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SAASC,QAAT,QAAyB,oBAAzB;;AAEA,SAASC,QAAT,CAAkBC,QAAlB,EAA4B;EAC1B,MAAMC,KAAK,GAAGH,QAAQ,CAACE,QAAD,CAAtB;EACA,MAAM;IACJ;AACJ;AACA;AACA;IACIE,MALI;;IAMJ;AACJ;AACA;AACA;IACIC;EAVI,IAWFN,eAAe,CAACI,KAAD,CAXnB;EAYA,MAAMG,cAAc,GAAG;IACrB,uBAAuB,iCADF;IAErB,8BAA8B,KAFT;IAGrB,8BAA8B,MAHT;IAIrB,uBAAuB,yBAJF;IAKrB,+BAA+B,WALV;IAMrB,wBAAwB,WANH;IAOrB,4BAA4B,GAPP;IAQrB,4BAA4B;EARP,CAAvB;EAUAC,MAAM,CAACC,MAAP,CAAcL,KAAd,EAAqB;IACnBM,SAAS,EAAE,EAAE,GAAGH,cAAL;MAAqB,GAAGD;IAAxB,CADQ;IAEnBK,QAAQ,EAAEN,MAFS;IAGnBO,aAAa,EAAEb,kBAAkB,CAACK,KAAK,CAACS,WAAP;EAHd,CAArB;EAKA,OAAOT,KAAP;AACD;;AAED,SAASF,QAAT"},"metadata":{},"sourceType":"module"}