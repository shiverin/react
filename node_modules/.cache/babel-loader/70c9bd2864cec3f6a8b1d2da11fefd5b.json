{"ast":null,"code":"import { isObject } from '@chakra-ui/utils';\n\nfunction toRef(operand) {\n  if (isObject(operand) && operand.reference) {\n    return operand.reference;\n  }\n\n  return String(operand);\n}\n\nvar toExpr = function toExpr(operator) {\n  for (var _len = arguments.length, operands = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    operands[_key - 1] = arguments[_key];\n  }\n\n  return operands.map(toRef).join(\" \".concat(operator, \" \")).replace(/calc/g, \"\");\n};\n\nvar _add = function add() {\n  for (var _len2 = arguments.length, operands = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    operands[_key2] = arguments[_key2];\n  }\n\n  return \"calc(\".concat(toExpr.apply(void 0, [\"+\"].concat(operands)), \")\");\n};\n\nvar _subtract = function subtract() {\n  for (var _len3 = arguments.length, operands = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    operands[_key3] = arguments[_key3];\n  }\n\n  return \"calc(\".concat(toExpr.apply(void 0, [\"-\"].concat(operands)), \")\");\n};\n\nvar _multiply = function multiply() {\n  for (var _len4 = arguments.length, operands = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    operands[_key4] = arguments[_key4];\n  }\n\n  return \"calc(\".concat(toExpr.apply(void 0, [\"*\"].concat(operands)), \")\");\n};\n\nvar _divide = function divide() {\n  for (var _len5 = arguments.length, operands = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n    operands[_key5] = arguments[_key5];\n  }\n\n  return \"calc(\".concat(toExpr.apply(void 0, [\"/\"].concat(operands)), \")\");\n};\n\nvar _negate = function negate(x) {\n  var value = toRef(x);\n\n  if (value != null && !Number.isNaN(parseFloat(value))) {\n    return String(value).startsWith(\"-\") ? String(value).slice(1) : \"-\".concat(value);\n  }\n\n  return _multiply(value, -1);\n};\n\nvar calc = Object.assign(function (x) {\n  return {\n    add: function add() {\n      for (var _len6 = arguments.length, operands = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        operands[_key6] = arguments[_key6];\n      }\n\n      return calc(_add.apply(void 0, [x].concat(operands)));\n    },\n    subtract: function subtract() {\n      for (var _len7 = arguments.length, operands = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        operands[_key7] = arguments[_key7];\n      }\n\n      return calc(_subtract.apply(void 0, [x].concat(operands)));\n    },\n    multiply: function multiply() {\n      for (var _len8 = arguments.length, operands = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        operands[_key8] = arguments[_key8];\n      }\n\n      return calc(_multiply.apply(void 0, [x].concat(operands)));\n    },\n    divide: function divide() {\n      for (var _len9 = arguments.length, operands = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        operands[_key9] = arguments[_key9];\n      }\n\n      return calc(_divide.apply(void 0, [x].concat(operands)));\n    },\n    negate: function negate() {\n      return calc(_negate(x));\n    },\n    toString: function toString() {\n      return x.toString();\n    }\n  };\n}, {\n  add: _add,\n  subtract: _subtract,\n  multiply: _multiply,\n  divide: _divide,\n  negate: _negate\n});\nexport { calc };","map":{"version":3,"names":["isObject","toRef","operand","reference","String","toExpr","operator","operands","map","join","replace","add","subtract","multiply","divide","negate","x","value","Number","isNaN","parseFloat","startsWith","slice","calc","Object","assign","toString"],"sources":["/workspaces/200508238/develop/node_modules/@chakra-ui/react/node_modules/@chakra-ui/theme-tools/dist/esm/css-calc.mjs"],"sourcesContent":["import { isObject } from '@chakra-ui/utils';\n\nfunction toRef(operand) {\n  if (isObject(operand) && operand.reference) {\n    return operand.reference;\n  }\n  return String(operand);\n}\nconst toExpr = (operator, ...operands) => operands.map(toRef).join(` ${operator} `).replace(/calc/g, \"\");\nconst add = (...operands) => `calc(${toExpr(\"+\", ...operands)})`;\nconst subtract = (...operands) => `calc(${toExpr(\"-\", ...operands)})`;\nconst multiply = (...operands) => `calc(${toExpr(\"*\", ...operands)})`;\nconst divide = (...operands) => `calc(${toExpr(\"/\", ...operands)})`;\nconst negate = (x) => {\n  const value = toRef(x);\n  if (value != null && !Number.isNaN(parseFloat(value))) {\n    return String(value).startsWith(\"-\") ? String(value).slice(1) : `-${value}`;\n  }\n  return multiply(value, -1);\n};\nconst calc = Object.assign(\n  (x) => ({\n    add: (...operands) => calc(add(x, ...operands)),\n    subtract: (...operands) => calc(subtract(x, ...operands)),\n    multiply: (...operands) => calc(multiply(x, ...operands)),\n    divide: (...operands) => calc(divide(x, ...operands)),\n    negate: () => calc(negate(x)),\n    toString: () => x.toString()\n  }),\n  {\n    add,\n    subtract,\n    multiply,\n    divide,\n    negate\n  }\n);\n\nexport { calc };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}