{"ast":null,"code":"'use client';\n\nimport { jsx, jsxs } from 'react/jsx-runtime';\nimport { defineStyle, omitThemingProps } from '@chakra-ui/styled-system';\nimport { cx, dataAttr, callAllHandlers } from '@chakra-ui/utils';\nimport { useState } from 'react';\nimport { AvatarStylesProvider } from './avatar-context.mjs';\nimport { AvatarImage } from './avatar-image.mjs';\nimport { initials } from './avatar-name.mjs';\nimport { GenericAvatarIcon } from './generic-avatar-icon.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useMultiStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\nconst baseStyle = defineStyle({\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  textAlign: \"center\",\n  textTransform: \"uppercase\",\n  fontWeight: \"medium\",\n  position: \"relative\",\n  flexShrink: 0\n});\nconst Avatar = forwardRef((props, ref) => {\n  const styles = useMultiStyleConfig(\"Avatar\", props);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const {\n    src,\n    srcSet,\n    name,\n    showBorder,\n    borderRadius = \"full\",\n    onError,\n    onLoad: onLoadProp,\n    getInitials = initials,\n    icon = /* @__PURE__ */jsx(GenericAvatarIcon, {}),\n    iconLabel = \" avatar\",\n    loading,\n    children,\n    borderColor,\n    ignoreFallback,\n    crossOrigin,\n    referrerPolicy,\n    ...rest\n  } = omitThemingProps(props);\n  const avatarStyles = {\n    borderRadius,\n    borderWidth: showBorder ? \"2px\" : void 0,\n    ...baseStyle,\n    ...styles.container\n  };\n\n  if (borderColor) {\n    avatarStyles.borderColor = borderColor;\n  }\n\n  return /* @__PURE__ */jsx(chakra.span, {\n    ref,\n    ...rest,\n    className: cx(\"chakra-avatar\", props.className),\n    \"data-loaded\": dataAttr(isLoaded),\n    __css: avatarStyles,\n    children: /* @__PURE__ */jsxs(AvatarStylesProvider, {\n      value: styles,\n      children: [/* @__PURE__ */jsx(AvatarImage, {\n        src,\n        srcSet,\n        loading,\n        onLoad: callAllHandlers(onLoadProp, () => {\n          setIsLoaded(true);\n        }),\n        onError,\n        getInitials,\n        name,\n        borderRadius,\n        icon,\n        iconLabel,\n        ignoreFallback,\n        crossOrigin,\n        referrerPolicy\n      }), children]\n    })\n  });\n});\nAvatar.displayName = \"Avatar\";\nexport { Avatar, baseStyle };","map":{"version":3,"names":["jsx","jsxs","defineStyle","omitThemingProps","cx","dataAttr","callAllHandlers","useState","AvatarStylesProvider","AvatarImage","initials","GenericAvatarIcon","forwardRef","useMultiStyleConfig","chakra","baseStyle","display","alignItems","justifyContent","textAlign","textTransform","fontWeight","position","flexShrink","Avatar","props","ref","styles","isLoaded","setIsLoaded","src","srcSet","name","showBorder","borderRadius","onError","onLoad","onLoadProp","getInitials","icon","iconLabel","loading","children","borderColor","ignoreFallback","crossOrigin","referrerPolicy","rest","avatarStyles","borderWidth","container","span","className","__css","value","displayName"],"sources":["/workspaces/200508238/develop/node_modules/@chakra-ui/react/dist/esm/avatar/avatar.mjs"],"sourcesContent":["'use client';\nimport { jsx, jsxs } from 'react/jsx-runtime';\nimport { defineStyle, omitThemingProps } from '@chakra-ui/styled-system';\nimport { cx, dataAttr, callAllHandlers } from '@chakra-ui/utils';\nimport { useState } from 'react';\nimport { AvatarStylesProvider } from './avatar-context.mjs';\nimport { AvatarImage } from './avatar-image.mjs';\nimport { initials } from './avatar-name.mjs';\nimport { GenericAvatarIcon } from './generic-avatar-icon.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useMultiStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst baseStyle = defineStyle({\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  textAlign: \"center\",\n  textTransform: \"uppercase\",\n  fontWeight: \"medium\",\n  position: \"relative\",\n  flexShrink: 0\n});\nconst Avatar = forwardRef((props, ref) => {\n  const styles = useMultiStyleConfig(\"Avatar\", props);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const {\n    src,\n    srcSet,\n    name,\n    showBorder,\n    borderRadius = \"full\",\n    onError,\n    onLoad: onLoadProp,\n    getInitials = initials,\n    icon = /* @__PURE__ */ jsx(GenericAvatarIcon, {}),\n    iconLabel = \" avatar\",\n    loading,\n    children,\n    borderColor,\n    ignoreFallback,\n    crossOrigin,\n    referrerPolicy,\n    ...rest\n  } = omitThemingProps(props);\n  const avatarStyles = {\n    borderRadius,\n    borderWidth: showBorder ? \"2px\" : void 0,\n    ...baseStyle,\n    ...styles.container\n  };\n  if (borderColor) {\n    avatarStyles.borderColor = borderColor;\n  }\n  return /* @__PURE__ */ jsx(\n    chakra.span,\n    {\n      ref,\n      ...rest,\n      className: cx(\"chakra-avatar\", props.className),\n      \"data-loaded\": dataAttr(isLoaded),\n      __css: avatarStyles,\n      children: /* @__PURE__ */ jsxs(AvatarStylesProvider, { value: styles, children: [\n        /* @__PURE__ */ jsx(\n          AvatarImage,\n          {\n            src,\n            srcSet,\n            loading,\n            onLoad: callAllHandlers(onLoadProp, () => {\n              setIsLoaded(true);\n            }),\n            onError,\n            getInitials,\n            name,\n            borderRadius,\n            icon,\n            iconLabel,\n            ignoreFallback,\n            crossOrigin,\n            referrerPolicy\n          }\n        ),\n        children\n      ] })\n    }\n  );\n});\nAvatar.displayName = \"Avatar\";\n\nexport { Avatar, baseStyle };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}