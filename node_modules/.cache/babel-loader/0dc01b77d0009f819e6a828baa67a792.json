{"ast":null,"code":"'use client';\n\nimport { useState, useMemo } from 'react';\n\nfunction useBoolean() {\n  let initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  const [value, setValue] = useState(initialState);\n  const callbacks = useMemo(() => ({\n    on: () => setValue(true),\n    off: () => setValue(false),\n    toggle: () => setValue(prev => !prev)\n  }), []);\n  return [value, callbacks];\n}\n\nexport { useBoolean };","map":{"version":3,"names":["useState","useMemo","useBoolean","initialState","value","setValue","callbacks","on","off","toggle","prev"],"sources":["/workspaces/200508238/develop/node_modules/@chakra-ui/react/node_modules/@chakra-ui/hooks/dist/esm/use-boolean.mjs"],"sourcesContent":["'use client';\nimport { useState, useMemo } from 'react';\n\nfunction useBoolean(initialState = false) {\n  const [value, setValue] = useState(initialState);\n  const callbacks = useMemo(\n    () => ({\n      on: () => setValue(true),\n      off: () => setValue(false),\n      toggle: () => setValue((prev) => !prev)\n    }),\n    []\n  );\n  return [value, callbacks];\n}\n\nexport { useBoolean };\n"],"mappings":"AAAA;;AACA,SAASA,QAAT,EAAmBC,OAAnB,QAAkC,OAAlC;;AAEA,SAASC,UAAT,GAA0C;EAAA,IAAtBC,YAAsB,uEAAP,KAAO;EACxC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAACG,YAAD,CAAlC;EACA,MAAMG,SAAS,GAAGL,OAAO,CACvB,OAAO;IACLM,EAAE,EAAE,MAAMF,QAAQ,CAAC,IAAD,CADb;IAELG,GAAG,EAAE,MAAMH,QAAQ,CAAC,KAAD,CAFd;IAGLI,MAAM,EAAE,MAAMJ,QAAQ,CAAEK,IAAD,IAAU,CAACA,IAAZ;EAHjB,CAAP,CADuB,EAMvB,EANuB,CAAzB;EAQA,OAAO,CAACN,KAAD,EAAQE,SAAR,CAAP;AACD;;AAED,SAASJ,UAAT"},"metadata":{},"sourceType":"module"}