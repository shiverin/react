{"ast":null,"code":"import { isObject } from './is.mjs';\n\nfunction getLastItem(array) {\n  const length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : void 0;\n}\n\nfunction analyzeCSSValue(value) {\n  const num = parseFloat(value.toString());\n  const unit = value.toString().replace(String(num), \"\");\n  return {\n    unitless: !unit,\n    value: num,\n    unit\n  };\n}\n\nfunction px(value) {\n  if (value == null) return value;\n  const {\n    unitless\n  } = analyzeCSSValue(value);\n  return unitless || typeof value === \"number\" ? `${value}px` : value;\n}\n\nconst sortByBreakpointValue = (a, b) => parseInt(a[1], 10) > parseInt(b[1], 10) ? 1 : -1;\n\nconst sortBps = breakpoints => Object.fromEntries(Object.entries(breakpoints).sort(sortByBreakpointValue));\n\nfunction normalize(breakpoints) {\n  const sorted = sortBps(breakpoints);\n  return Object.assign(Object.values(sorted), sorted);\n}\n\nfunction keys(breakpoints) {\n  const value = Object.keys(sortBps(breakpoints));\n  return new Set(value);\n}\n\nfunction subtract(value) {\n  if (!value) return value;\n  value = px(value) ?? value;\n  const OFFSET = -0.02;\n  return typeof value === \"number\" ? `${value + OFFSET}` : value.replace(/(\\d+\\.?\\d*)/u, m => `${parseFloat(m) + OFFSET}`);\n}\n\nfunction toMediaQueryString(min, max) {\n  const query = [\"@media screen\"];\n  if (min) query.push(\"and\", `(min-width: ${px(min)})`);\n  if (max) query.push(\"and\", `(max-width: ${px(max)})`);\n  return query.join(\" \");\n}\n\nfunction analyzeBreakpoints(breakpoints) {\n  if (!breakpoints) return null;\n  breakpoints.base = breakpoints.base ?? \"0px\";\n  const normalized = normalize(breakpoints);\n  const queries = Object.entries(breakpoints).sort(sortByBreakpointValue).map((_ref, index, entry) => {\n    let [breakpoint, minW] = _ref;\n    let [, maxW] = entry[index + 1] ?? [];\n    maxW = parseFloat(maxW) > 0 ? subtract(maxW) : void 0;\n    return {\n      _minW: subtract(minW),\n      breakpoint,\n      minW,\n      maxW,\n      maxWQuery: toMediaQueryString(null, maxW),\n      minWQuery: toMediaQueryString(minW),\n      minMaxQuery: toMediaQueryString(minW, maxW)\n    };\n  });\n\n  const _keys = keys(breakpoints);\n\n  const _keysArr = Array.from(_keys.values());\n\n  return {\n    keys: _keys,\n    normalized,\n\n    isResponsive(test) {\n      const keys2 = Object.keys(test);\n      return keys2.length > 0 && keys2.every(key => _keys.has(key));\n    },\n\n    asObject: sortBps(breakpoints),\n    asArray: normalize(breakpoints),\n    details: queries,\n\n    get(key) {\n      return queries.find(q => q.breakpoint === key);\n    },\n\n    media: [null, ...normalized.map(minW => toMediaQueryString(minW)).slice(1)],\n\n    /**\n     * Converts the object responsive syntax to array syntax\n     *\n     * @example\n     * toArrayValue({ base: 1, sm: 2, md: 3 }) // => [1, 2, 3]\n     */\n    toArrayValue(test) {\n      if (!isObject(test)) {\n        throw new Error(\"toArrayValue: value must be an object\");\n      }\n\n      const result = _keysArr.map(bp => test[bp] ?? null);\n\n      while (getLastItem(result) === null) {\n        result.pop();\n      }\n\n      return result;\n    },\n\n    /**\n     * Converts the array responsive syntax to object syntax\n     *\n     * @example\n     * toObjectValue([1, 2, 3]) // => { base: 1, sm: 2, md: 3 }\n     */\n    toObjectValue(test) {\n      if (!Array.isArray(test)) {\n        throw new Error(\"toObjectValue: value must be an array\");\n      }\n\n      return test.reduce((acc, value, index) => {\n        const key = _keysArr[index];\n        if (key != null && value != null) acc[key] = value;\n        return acc;\n      }, {});\n    }\n\n  };\n}\n\nexport { analyzeBreakpoints, px, toMediaQueryString };","map":{"version":3,"names":["isObject","getLastItem","array","length","analyzeCSSValue","value","num","parseFloat","toString","unit","replace","String","unitless","px","sortByBreakpointValue","a","b","parseInt","sortBps","breakpoints","Object","fromEntries","entries","sort","normalize","sorted","assign","values","keys","Set","subtract","OFFSET","m","toMediaQueryString","min","max","query","push","join","analyzeBreakpoints","base","normalized","queries","map","index","entry","breakpoint","minW","maxW","_minW","maxWQuery","minWQuery","minMaxQuery","_keys","_keysArr","Array","from","isResponsive","test","keys2","every","key","has","asObject","asArray","details","get","find","q","media","slice","toArrayValue","Error","result","bp","pop","toObjectValue","isArray","reduce","acc"],"sources":["/workspaces/200508238/develop/node_modules/@chakra-ui/react/node_modules/@chakra-ui/utils/dist/esm/breakpoint.mjs"],"sourcesContent":["import { isObject } from './is.mjs';\n\nfunction getLastItem(array) {\n  const length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : void 0;\n}\nfunction analyzeCSSValue(value) {\n  const num = parseFloat(value.toString());\n  const unit = value.toString().replace(String(num), \"\");\n  return { unitless: !unit, value: num, unit };\n}\nfunction px(value) {\n  if (value == null)\n    return value;\n  const { unitless } = analyzeCSSValue(value);\n  return unitless || typeof value === \"number\" ? `${value}px` : value;\n}\nconst sortByBreakpointValue = (a, b) => parseInt(a[1], 10) > parseInt(b[1], 10) ? 1 : -1;\nconst sortBps = (breakpoints) => Object.fromEntries(Object.entries(breakpoints).sort(sortByBreakpointValue));\nfunction normalize(breakpoints) {\n  const sorted = sortBps(breakpoints);\n  return Object.assign(Object.values(sorted), sorted);\n}\nfunction keys(breakpoints) {\n  const value = Object.keys(sortBps(breakpoints));\n  return new Set(value);\n}\nfunction subtract(value) {\n  if (!value)\n    return value;\n  value = px(value) ?? value;\n  const OFFSET = -0.02;\n  return typeof value === \"number\" ? `${value + OFFSET}` : value.replace(/(\\d+\\.?\\d*)/u, (m) => `${parseFloat(m) + OFFSET}`);\n}\nfunction toMediaQueryString(min, max) {\n  const query = [\"@media screen\"];\n  if (min)\n    query.push(\"and\", `(min-width: ${px(min)})`);\n  if (max)\n    query.push(\"and\", `(max-width: ${px(max)})`);\n  return query.join(\" \");\n}\nfunction analyzeBreakpoints(breakpoints) {\n  if (!breakpoints)\n    return null;\n  breakpoints.base = breakpoints.base ?? \"0px\";\n  const normalized = normalize(breakpoints);\n  const queries = Object.entries(breakpoints).sort(sortByBreakpointValue).map(([breakpoint, minW], index, entry) => {\n    let [, maxW] = entry[index + 1] ?? [];\n    maxW = parseFloat(maxW) > 0 ? subtract(maxW) : void 0;\n    return {\n      _minW: subtract(minW),\n      breakpoint,\n      minW,\n      maxW,\n      maxWQuery: toMediaQueryString(null, maxW),\n      minWQuery: toMediaQueryString(minW),\n      minMaxQuery: toMediaQueryString(minW, maxW)\n    };\n  });\n  const _keys = keys(breakpoints);\n  const _keysArr = Array.from(_keys.values());\n  return {\n    keys: _keys,\n    normalized,\n    isResponsive(test) {\n      const keys2 = Object.keys(test);\n      return keys2.length > 0 && keys2.every((key) => _keys.has(key));\n    },\n    asObject: sortBps(breakpoints),\n    asArray: normalize(breakpoints),\n    details: queries,\n    get(key) {\n      return queries.find((q) => q.breakpoint === key);\n    },\n    media: [\n      null,\n      ...normalized.map((minW) => toMediaQueryString(minW)).slice(1)\n    ],\n    /**\n     * Converts the object responsive syntax to array syntax\n     *\n     * @example\n     * toArrayValue({ base: 1, sm: 2, md: 3 }) // => [1, 2, 3]\n     */\n    toArrayValue(test) {\n      if (!isObject(test)) {\n        throw new Error(\"toArrayValue: value must be an object\");\n      }\n      const result = _keysArr.map((bp) => test[bp] ?? null);\n      while (getLastItem(result) === null) {\n        result.pop();\n      }\n      return result;\n    },\n    /**\n     * Converts the array responsive syntax to object syntax\n     *\n     * @example\n     * toObjectValue([1, 2, 3]) // => { base: 1, sm: 2, md: 3 }\n     */\n    toObjectValue(test) {\n      if (!Array.isArray(test)) {\n        throw new Error(\"toObjectValue: value must be an array\");\n      }\n      return test.reduce(\n        (acc, value, index) => {\n          const key = _keysArr[index];\n          if (key != null && value != null)\n            acc[key] = value;\n          return acc;\n        },\n        {}\n      );\n    }\n  };\n}\n\nexport { analyzeBreakpoints, px, toMediaQueryString };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}