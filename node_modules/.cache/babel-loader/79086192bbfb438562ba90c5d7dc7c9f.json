{"ast":null,"code":"import { runIfFn, isObject } from '@chakra-ui/utils';\n\nvar expandResponsive = function expandResponsive(styles) {\n  return function (theme) {\n    if (!theme.__breakpoints) return styles;\n    var _theme$__breakpoints = theme.__breakpoints,\n        isResponsive = _theme$__breakpoints.isResponsive,\n        toArrayValue = _theme$__breakpoints.toArrayValue,\n        medias = _theme$__breakpoints.media;\n    var computedStyles = {};\n\n    for (var key in styles) {\n      var value = runIfFn(styles[key], theme);\n      if (value == null) continue;\n      value = isObject(value) && isResponsive(value) ? toArrayValue(value) : value;\n\n      if (!Array.isArray(value)) {\n        computedStyles[key] = value;\n        continue;\n      }\n\n      var queries = value.slice(0, medias.length).length;\n\n      for (var index = 0; index < queries; index += 1) {\n        var media = medias === null || medias === void 0 ? void 0 : medias[index];\n\n        if (!media) {\n          computedStyles[key] = value[index];\n          continue;\n        }\n\n        computedStyles[media] = computedStyles[media] || {};\n\n        if (value[index] == null) {\n          continue;\n        }\n\n        computedStyles[media][key] = value[index];\n      }\n    }\n\n    return computedStyles;\n  };\n};\n\nexport { expandResponsive };","map":{"version":3,"names":["runIfFn","isObject","expandResponsive","styles","theme","__breakpoints","isResponsive","toArrayValue","medias","media","computedStyles","key","value","Array","isArray","queries","slice","length","index"],"sources":["/workspaces/200508238/develop/node_modules/@chakra-ui/react/node_modules/@chakra-ui/styled-system/dist/esm/utils/expand-responsive.mjs"],"sourcesContent":["import { runIfFn, isObject } from '@chakra-ui/utils';\n\nconst expandResponsive = (styles) => (theme) => {\n  if (!theme.__breakpoints)\n    return styles;\n  const { isResponsive, toArrayValue, media: medias } = theme.__breakpoints;\n  const computedStyles = {};\n  for (const key in styles) {\n    let value = runIfFn(styles[key], theme);\n    if (value == null)\n      continue;\n    value = isObject(value) && isResponsive(value) ? toArrayValue(value) : value;\n    if (!Array.isArray(value)) {\n      computedStyles[key] = value;\n      continue;\n    }\n    const queries = value.slice(0, medias.length).length;\n    for (let index = 0; index < queries; index += 1) {\n      const media = medias?.[index];\n      if (!media) {\n        computedStyles[key] = value[index];\n        continue;\n      }\n      computedStyles[media] = computedStyles[media] || {};\n      if (value[index] == null) {\n        continue;\n      }\n      computedStyles[media][key] = value[index];\n    }\n  }\n  return computedStyles;\n};\n\nexport { expandResponsive };\n"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,QAAlB,QAAkC,kBAAlC;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,MAAD;EAAA,OAAY,UAACC,KAAD,EAAW;IAC9C,IAAI,CAACA,KAAK,CAACC,aAAX,EACE,OAAOF,MAAP;IACF,2BAAsDC,KAAK,CAACC,aAA5D;IAAA,IAAQC,YAAR,wBAAQA,YAAR;IAAA,IAAsBC,YAAtB,wBAAsBA,YAAtB;IAAA,IAA2CC,MAA3C,wBAAoCC,KAApC;IACA,IAAMC,cAAc,GAAG,EAAvB;;IACA,KAAK,IAAMC,GAAX,IAAkBR,MAAlB,EAA0B;MACxB,IAAIS,KAAK,GAAGZ,OAAO,CAACG,MAAM,CAACQ,GAAD,CAAP,EAAcP,KAAd,CAAnB;MACA,IAAIQ,KAAK,IAAI,IAAb,EACE;MACFA,KAAK,GAAGX,QAAQ,CAACW,KAAD,CAAR,IAAmBN,YAAY,CAACM,KAAD,CAA/B,GAAyCL,YAAY,CAACK,KAAD,CAArD,GAA+DA,KAAvE;;MACA,IAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAL,EAA2B;QACzBF,cAAc,CAACC,GAAD,CAAd,GAAsBC,KAAtB;QACA;MACD;;MACD,IAAMG,OAAO,GAAGH,KAAK,CAACI,KAAN,CAAY,CAAZ,EAAeR,MAAM,CAACS,MAAtB,EAA8BA,MAA9C;;MACA,KAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGH,OAA5B,EAAqCG,KAAK,IAAI,CAA9C,EAAiD;QAC/C,IAAMT,KAAK,GAAGD,MAAH,aAAGA,MAAH,uBAAGA,MAAM,CAAGU,KAAH,CAApB;;QACA,IAAI,CAACT,KAAL,EAAY;UACVC,cAAc,CAACC,GAAD,CAAd,GAAsBC,KAAK,CAACM,KAAD,CAA3B;UACA;QACD;;QACDR,cAAc,CAACD,KAAD,CAAd,GAAwBC,cAAc,CAACD,KAAD,CAAd,IAAyB,EAAjD;;QACA,IAAIG,KAAK,CAACM,KAAD,CAAL,IAAgB,IAApB,EAA0B;UACxB;QACD;;QACDR,cAAc,CAACD,KAAD,CAAd,CAAsBE,GAAtB,IAA6BC,KAAK,CAACM,KAAD,CAAlC;MACD;IACF;;IACD,OAAOR,cAAP;EACD,CA7BwB;AAAA,CAAzB;;AA+BA,SAASR,gBAAT"},"metadata":{},"sourceType":"module"}