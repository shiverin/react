{"ast":null,"code":"'use client';\n\nimport _slicedToArray from \"/workspaces/200508238/develop/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useInterval } from '@chakra-ui/hooks';\nimport { useState, useRef, useCallback, useEffect } from 'react';\nvar CONTINUOUS_CHANGE_INTERVAL = 50;\nvar CONTINUOUS_CHANGE_DELAY = 300;\n\nfunction useSpinner(increment, decrement) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isSpinning = _useState2[0],\n      setIsSpinning = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      action = _useState4[0],\n      setAction = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      runOnce = _useState6[0],\n      setRunOnce = _useState6[1];\n\n  var timeoutRef = useRef(null);\n\n  var removeTimeout = function removeTimeout() {\n    return clearTimeout(timeoutRef.current);\n  };\n\n  useInterval(function () {\n    if (action === \"increment\") {\n      increment();\n    }\n\n    if (action === \"decrement\") {\n      decrement();\n    }\n  }, isSpinning ? CONTINUOUS_CHANGE_INTERVAL : null);\n  var up = useCallback(function () {\n    if (runOnce) {\n      increment();\n    }\n\n    timeoutRef.current = setTimeout(function () {\n      setRunOnce(false);\n      setIsSpinning(true);\n      setAction(\"increment\");\n    }, CONTINUOUS_CHANGE_DELAY);\n  }, [increment, runOnce]);\n  var down = useCallback(function () {\n    if (runOnce) {\n      decrement();\n    }\n\n    timeoutRef.current = setTimeout(function () {\n      setRunOnce(false);\n      setIsSpinning(true);\n      setAction(\"decrement\");\n    }, CONTINUOUS_CHANGE_DELAY);\n  }, [decrement, runOnce]);\n  var stop = useCallback(function () {\n    setRunOnce(true);\n    setIsSpinning(false);\n    removeTimeout();\n  }, []);\n  useEffect(function () {\n    return function () {\n      return removeTimeout();\n    };\n  }, []);\n  return {\n    up: up,\n    down: down,\n    stop: stop,\n    isSpinning: isSpinning\n  };\n}\n\nexport { useSpinner };","map":{"version":3,"names":["useInterval","useState","useRef","useCallback","useEffect","CONTINUOUS_CHANGE_INTERVAL","CONTINUOUS_CHANGE_DELAY","useSpinner","increment","decrement","isSpinning","setIsSpinning","action","setAction","runOnce","setRunOnce","timeoutRef","removeTimeout","clearTimeout","current","up","setTimeout","down","stop"],"sources":["/workspaces/200508238/develop/node_modules/@chakra-ui/react/dist/esm/number-input/use-spinner.mjs"],"sourcesContent":["'use client';\nimport { useInterval } from '@chakra-ui/hooks';\nimport { useState, useRef, useCallback, useEffect } from 'react';\n\nconst CONTINUOUS_CHANGE_INTERVAL = 50;\nconst CONTINUOUS_CHANGE_DELAY = 300;\nfunction useSpinner(increment, decrement) {\n  const [isSpinning, setIsSpinning] = useState(false);\n  const [action, setAction] = useState(null);\n  const [runOnce, setRunOnce] = useState(true);\n  const timeoutRef = useRef(null);\n  const removeTimeout = () => clearTimeout(timeoutRef.current);\n  useInterval(\n    () => {\n      if (action === \"increment\") {\n        increment();\n      }\n      if (action === \"decrement\") {\n        decrement();\n      }\n    },\n    isSpinning ? CONTINUOUS_CHANGE_INTERVAL : null\n  );\n  const up = useCallback(() => {\n    if (runOnce) {\n      increment();\n    }\n    timeoutRef.current = setTimeout(() => {\n      setRunOnce(false);\n      setIsSpinning(true);\n      setAction(\"increment\");\n    }, CONTINUOUS_CHANGE_DELAY);\n  }, [increment, runOnce]);\n  const down = useCallback(() => {\n    if (runOnce) {\n      decrement();\n    }\n    timeoutRef.current = setTimeout(() => {\n      setRunOnce(false);\n      setIsSpinning(true);\n      setAction(\"decrement\");\n    }, CONTINUOUS_CHANGE_DELAY);\n  }, [decrement, runOnce]);\n  const stop = useCallback(() => {\n    setRunOnce(true);\n    setIsSpinning(false);\n    removeTimeout();\n  }, []);\n  useEffect(() => {\n    return () => removeTimeout();\n  }, []);\n  return { up, down, stop, isSpinning };\n}\n\nexport { useSpinner };\n"],"mappings":"AAAA;;;AACA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,WAA3B,EAAwCC,SAAxC,QAAyD,OAAzD;AAEA,IAAMC,0BAA0B,GAAG,EAAnC;AACA,IAAMC,uBAAuB,GAAG,GAAhC;;AACA,SAASC,UAAT,CAAoBC,SAApB,EAA+BC,SAA/B,EAA0C;EACxC,gBAAoCR,QAAQ,CAAC,KAAD,CAA5C;EAAA;EAAA,IAAOS,UAAP;EAAA,IAAmBC,aAAnB;;EACA,iBAA4BV,QAAQ,CAAC,IAAD,CAApC;EAAA;EAAA,IAAOW,MAAP;EAAA,IAAeC,SAAf;;EACA,iBAA8BZ,QAAQ,CAAC,IAAD,CAAtC;EAAA;EAAA,IAAOa,OAAP;EAAA,IAAgBC,UAAhB;;EACA,IAAMC,UAAU,GAAGd,MAAM,CAAC,IAAD,CAAzB;;EACA,IAAMe,aAAa,GAAG,SAAhBA,aAAgB;IAAA,OAAMC,YAAY,CAACF,UAAU,CAACG,OAAZ,CAAlB;EAAA,CAAtB;;EACAnB,WAAW,CACT,YAAM;IACJ,IAAIY,MAAM,KAAK,WAAf,EAA4B;MAC1BJ,SAAS;IACV;;IACD,IAAII,MAAM,KAAK,WAAf,EAA4B;MAC1BH,SAAS;IACV;EACF,CARQ,EASTC,UAAU,GAAGL,0BAAH,GAAgC,IATjC,CAAX;EAWA,IAAMe,EAAE,GAAGjB,WAAW,CAAC,YAAM;IAC3B,IAAIW,OAAJ,EAAa;MACXN,SAAS;IACV;;IACDQ,UAAU,CAACG,OAAX,GAAqBE,UAAU,CAAC,YAAM;MACpCN,UAAU,CAAC,KAAD,CAAV;MACAJ,aAAa,CAAC,IAAD,CAAb;MACAE,SAAS,CAAC,WAAD,CAAT;IACD,CAJ8B,EAI5BP,uBAJ4B,CAA/B;EAKD,CATqB,EASnB,CAACE,SAAD,EAAYM,OAAZ,CATmB,CAAtB;EAUA,IAAMQ,IAAI,GAAGnB,WAAW,CAAC,YAAM;IAC7B,IAAIW,OAAJ,EAAa;MACXL,SAAS;IACV;;IACDO,UAAU,CAACG,OAAX,GAAqBE,UAAU,CAAC,YAAM;MACpCN,UAAU,CAAC,KAAD,CAAV;MACAJ,aAAa,CAAC,IAAD,CAAb;MACAE,SAAS,CAAC,WAAD,CAAT;IACD,CAJ8B,EAI5BP,uBAJ4B,CAA/B;EAKD,CATuB,EASrB,CAACG,SAAD,EAAYK,OAAZ,CATqB,CAAxB;EAUA,IAAMS,IAAI,GAAGpB,WAAW,CAAC,YAAM;IAC7BY,UAAU,CAAC,IAAD,CAAV;IACAJ,aAAa,CAAC,KAAD,CAAb;IACAM,aAAa;EACd,CAJuB,EAIrB,EAJqB,CAAxB;EAKAb,SAAS,CAAC,YAAM;IACd,OAAO;MAAA,OAAMa,aAAa,EAAnB;IAAA,CAAP;EACD,CAFQ,EAEN,EAFM,CAAT;EAGA,OAAO;IAAEG,EAAE,EAAFA,EAAF;IAAME,IAAI,EAAJA,IAAN;IAAYC,IAAI,EAAJA,IAAZ;IAAkBb,UAAU,EAAVA;EAAlB,CAAP;AACD;;AAED,SAASH,UAAT"},"metadata":{},"sourceType":"module"}