{"ast":null,"code":"'use client';\n\nimport _slicedToArray from \"/workspaces/200508238/develop/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useState, useMemo } from 'react';\n\nfunction useBoolean() {\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n  var _useState = useState(initialState),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var callbacks = useMemo(function () {\n    return {\n      on: function on() {\n        return setValue(true);\n      },\n      off: function off() {\n        return setValue(false);\n      },\n      toggle: function toggle() {\n        return setValue(function (prev) {\n          return !prev;\n        });\n      }\n    };\n  }, []);\n  return [value, callbacks];\n}\n\nexport { useBoolean };","map":{"version":3,"names":["useState","useMemo","useBoolean","initialState","value","setValue","callbacks","on","off","toggle","prev"],"sources":["/workspaces/200508238/develop/node_modules/@chakra-ui/react/node_modules/@chakra-ui/hooks/dist/esm/use-boolean.mjs"],"sourcesContent":["'use client';\nimport { useState, useMemo } from 'react';\n\nfunction useBoolean(initialState = false) {\n  const [value, setValue] = useState(initialState);\n  const callbacks = useMemo(\n    () => ({\n      on: () => setValue(true),\n      off: () => setValue(false),\n      toggle: () => setValue((prev) => !prev)\n    }),\n    []\n  );\n  return [value, callbacks];\n}\n\nexport { useBoolean };\n"],"mappings":"AAAA;;;AACA,SAASA,QAAT,EAAmBC,OAAnB,QAAkC,OAAlC;;AAEA,SAASC,UAAT,GAA0C;EAAA,IAAtBC,YAAsB,uEAAP,KAAO;;EACxC,gBAA0BH,QAAQ,CAACG,YAAD,CAAlC;EAAA;EAAA,IAAOC,KAAP;EAAA,IAAcC,QAAd;;EACA,IAAMC,SAAS,GAAGL,OAAO,CACvB;IAAA,OAAO;MACLM,EAAE,EAAE;QAAA,OAAMF,QAAQ,CAAC,IAAD,CAAd;MAAA,CADC;MAELG,GAAG,EAAE;QAAA,OAAMH,QAAQ,CAAC,KAAD,CAAd;MAAA,CAFA;MAGLI,MAAM,EAAE;QAAA,OAAMJ,QAAQ,CAAC,UAACK,IAAD;UAAA,OAAU,CAACA,IAAX;QAAA,CAAD,CAAd;MAAA;IAHH,CAAP;EAAA,CADuB,EAMvB,EANuB,CAAzB;EAQA,OAAO,CAACN,KAAD,EAAQE,SAAR,CAAP;AACD;;AAED,SAASJ,UAAT"},"metadata":{},"sourceType":"module"}