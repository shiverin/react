{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeRefs } from '@chakra-ui/hooks';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { createContext, cx, dataAttr } from '@chakra-ui/utils';\nimport { useId, useState, useCallback } from 'react';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useMultiStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\nconst [FormControlStylesProvider, useFormControlStyles] = createContext({\n  name: `FormControlStylesContext`,\n  errorMessage: `useFormControlStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<FormControl />\" `\n});\nconst [FormControlProvider, useFormControlContext] = createContext({\n  strict: false,\n  name: \"FormControlContext\"\n});\n\nfunction useFormControlProvider(props) {\n  const {\n    id: idProp,\n    isRequired,\n    isInvalid,\n    isDisabled,\n    isReadOnly,\n    ...htmlProps\n  } = props;\n  const uuid = useId();\n  const id = idProp || `field-${uuid}`;\n  const labelId = `${id}-label`;\n  const feedbackId = `${id}-feedback`;\n  const helpTextId = `${id}-helptext`;\n  const [hasFeedbackText, setHasFeedbackText] = useState(false);\n  const [hasHelpText, setHasHelpText] = useState(false);\n  const [isFocused, setFocus] = useState(false);\n  const getHelpTextProps = useCallback(function () {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let forwardedRef = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return {\n      id: helpTextId,\n      ...props2,\n\n      /**\n       * Notify the field context when the help text is rendered on screen,\n       * so we can apply the correct `aria-describedby` to the field (e.g. input, textarea).\n       */\n      ref: mergeRefs(forwardedRef, node => {\n        if (!node) return;\n        setHasHelpText(true);\n      })\n    };\n  }, [helpTextId]);\n  const getLabelProps = useCallback(function () {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let forwardedRef = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return { ...props2,\n      ref: forwardedRef,\n      \"data-focus\": dataAttr(isFocused),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      id: props2.id !== void 0 ? props2.id : labelId,\n      htmlFor: props2.htmlFor !== void 0 ? props2.htmlFor : id\n    };\n  }, [id, isDisabled, isFocused, isInvalid, isReadOnly, labelId]);\n  const getErrorMessageProps = useCallback(function () {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let forwardedRef = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return {\n      id: feedbackId,\n      ...props2,\n\n      /**\n       * Notify the field context when the error message is rendered on screen,\n       * so we can apply the correct `aria-describedby` to the field (e.g. input, textarea).\n       */\n      ref: mergeRefs(forwardedRef, node => {\n        if (!node) return;\n        setHasFeedbackText(true);\n      }),\n      \"aria-live\": \"polite\"\n    };\n  }, [feedbackId]);\n  const getRootProps = useCallback(function () {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let forwardedRef = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return { ...props2,\n      ...htmlProps,\n      ref: forwardedRef,\n      role: \"group\",\n      \"data-focus\": dataAttr(isFocused),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly)\n    };\n  }, [htmlProps, isDisabled, isFocused, isInvalid, isReadOnly]);\n  const getRequiredIndicatorProps = useCallback(function () {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let forwardedRef = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return { ...props2,\n      ref: forwardedRef,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      children: props2.children || \"*\"\n    };\n  }, []);\n  return {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    isFocused: !!isFocused,\n    onFocus: () => setFocus(true),\n    onBlur: () => setFocus(false),\n    hasFeedbackText,\n    setHasFeedbackText,\n    hasHelpText,\n    setHasHelpText,\n    id,\n    labelId,\n    feedbackId,\n    helpTextId,\n    htmlProps,\n    getHelpTextProps,\n    getErrorMessageProps,\n    getRootProps,\n    getLabelProps,\n    getRequiredIndicatorProps\n  };\n}\n\nconst FormControl = forwardRef(function FormControl2(props, ref) {\n  const styles = useMultiStyleConfig(\"Form\", props);\n  const ownProps = omitThemingProps(props);\n  const {\n    getRootProps,\n    htmlProps: _,\n    ...context\n  } = useFormControlProvider(ownProps);\n  const className = cx(\"chakra-form-control\", props.className);\n  return /* @__PURE__ */jsx(FormControlProvider, {\n    value: context,\n    children: /* @__PURE__ */jsx(FormControlStylesProvider, {\n      value: styles,\n      children: /* @__PURE__ */jsx(chakra.div, { ...getRootProps({}, ref),\n        className,\n        __css: styles[\"container\"]\n      })\n    })\n  });\n});\nFormControl.displayName = \"FormControl\";\nconst FormHelperText = forwardRef(function FormHelperText2(props, ref) {\n  const field = useFormControlContext();\n  const styles = useFormControlStyles();\n  const className = cx(\"chakra-form__helper-text\", props.className);\n  return /* @__PURE__ */jsx(chakra.div, { ...field?.getHelpTextProps(props, ref),\n    __css: styles.helperText,\n    className\n  });\n});\nFormHelperText.displayName = \"FormHelperText\";\nexport { FormControl, FormHelperText, useFormControlContext, useFormControlStyles };","map":{"version":3,"names":["jsx","mergeRefs","omitThemingProps","createContext","cx","dataAttr","useId","useState","useCallback","forwardRef","useMultiStyleConfig","chakra","FormControlStylesProvider","useFormControlStyles","name","errorMessage","FormControlProvider","useFormControlContext","strict","useFormControlProvider","props","id","idProp","isRequired","isInvalid","isDisabled","isReadOnly","htmlProps","uuid","labelId","feedbackId","helpTextId","hasFeedbackText","setHasFeedbackText","hasHelpText","setHasHelpText","isFocused","setFocus","getHelpTextProps","props2","forwardedRef","ref","node","getLabelProps","htmlFor","getErrorMessageProps","getRootProps","role","getRequiredIndicatorProps","children","onFocus","onBlur","FormControl","FormControl2","styles","ownProps","_","context","className","value","div","__css","displayName","FormHelperText","FormHelperText2","field","helperText"],"sources":["/workspaces/200508238/develop/node_modules/@chakra-ui/react/dist/esm/form-control/form-control.mjs"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeRefs } from '@chakra-ui/hooks';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { createContext, cx, dataAttr } from '@chakra-ui/utils';\nimport { useId, useState, useCallback } from 'react';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useMultiStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst [FormControlStylesProvider, useFormControlStyles] = createContext({\n  name: `FormControlStylesContext`,\n  errorMessage: `useFormControlStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<FormControl />\" `\n});\nconst [FormControlProvider, useFormControlContext] = createContext({\n  strict: false,\n  name: \"FormControlContext\"\n});\nfunction useFormControlProvider(props) {\n  const {\n    id: idProp,\n    isRequired,\n    isInvalid,\n    isDisabled,\n    isReadOnly,\n    ...htmlProps\n  } = props;\n  const uuid = useId();\n  const id = idProp || `field-${uuid}`;\n  const labelId = `${id}-label`;\n  const feedbackId = `${id}-feedback`;\n  const helpTextId = `${id}-helptext`;\n  const [hasFeedbackText, setHasFeedbackText] = useState(false);\n  const [hasHelpText, setHasHelpText] = useState(false);\n  const [isFocused, setFocus] = useState(false);\n  const getHelpTextProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: helpTextId,\n      ...props2,\n      /**\n       * Notify the field context when the help text is rendered on screen,\n       * so we can apply the correct `aria-describedby` to the field (e.g. input, textarea).\n       */\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasHelpText(true);\n      })\n    }),\n    [helpTextId]\n  );\n  const getLabelProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      \"data-focus\": dataAttr(isFocused),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      id: props2.id !== void 0 ? props2.id : labelId,\n      htmlFor: props2.htmlFor !== void 0 ? props2.htmlFor : id\n    }),\n    [id, isDisabled, isFocused, isInvalid, isReadOnly, labelId]\n  );\n  const getErrorMessageProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: feedbackId,\n      ...props2,\n      /**\n       * Notify the field context when the error message is rendered on screen,\n       * so we can apply the correct `aria-describedby` to the field (e.g. input, textarea).\n       */\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasFeedbackText(true);\n      }),\n      \"aria-live\": \"polite\"\n    }),\n    [feedbackId]\n  );\n  const getRootProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ...htmlProps,\n      ref: forwardedRef,\n      role: \"group\",\n      \"data-focus\": dataAttr(isFocused),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly)\n    }),\n    [htmlProps, isDisabled, isFocused, isInvalid, isReadOnly]\n  );\n  const getRequiredIndicatorProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      children: props2.children || \"*\"\n    }),\n    []\n  );\n  return {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    isFocused: !!isFocused,\n    onFocus: () => setFocus(true),\n    onBlur: () => setFocus(false),\n    hasFeedbackText,\n    setHasFeedbackText,\n    hasHelpText,\n    setHasHelpText,\n    id,\n    labelId,\n    feedbackId,\n    helpTextId,\n    htmlProps,\n    getHelpTextProps,\n    getErrorMessageProps,\n    getRootProps,\n    getLabelProps,\n    getRequiredIndicatorProps\n  };\n}\nconst FormControl = forwardRef(\n  function FormControl2(props, ref) {\n    const styles = useMultiStyleConfig(\"Form\", props);\n    const ownProps = omitThemingProps(props);\n    const {\n      getRootProps,\n      htmlProps: _,\n      ...context\n    } = useFormControlProvider(ownProps);\n    const className = cx(\"chakra-form-control\", props.className);\n    return /* @__PURE__ */ jsx(FormControlProvider, { value: context, children: /* @__PURE__ */ jsx(FormControlStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...getRootProps({}, ref),\n        className,\n        __css: styles[\"container\"]\n      }\n    ) }) });\n  }\n);\nFormControl.displayName = \"FormControl\";\nconst FormHelperText = forwardRef(\n  function FormHelperText2(props, ref) {\n    const field = useFormControlContext();\n    const styles = useFormControlStyles();\n    const className = cx(\"chakra-form__helper-text\", props.className);\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...field?.getHelpTextProps(props, ref),\n        __css: styles.helperText,\n        className\n      }\n    );\n  }\n);\nFormHelperText.displayName = \"FormHelperText\";\n\nexport { FormControl, FormHelperText, useFormControlContext, useFormControlStyles };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}