{"ast":null,"code":"import _slicedToArray from \"/workspaces/200508238/develop/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nfunction split(object, keys) {\n  var picked = {};\n  var omitted = {};\n\n  for (var _i = 0, _Object$entries = Object.entries(object); _i < _Object$entries.length; _i++) {\n    var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n        key = _Object$entries$_i[0],\n        value = _Object$entries$_i[1];\n\n    if (keys.includes(key)) picked[key] = value;else omitted[key] = value;\n  }\n\n  return [picked, omitted];\n}\n\nexport { split };","map":{"version":3,"names":["split","object","keys","picked","omitted","Object","entries","key","value","includes"],"sources":["/workspaces/200508238/develop/node_modules/@chakra-ui/react/node_modules/@chakra-ui/utils/dist/esm/split.mjs"],"sourcesContent":["function split(object, keys) {\n  const picked = {};\n  const omitted = {};\n  for (const [key, value] of Object.entries(object)) {\n    if (keys.includes(key))\n      picked[key] = value;\n    else\n      omitted[key] = value;\n  }\n  return [picked, omitted];\n}\n\nexport { split };\n"],"mappings":";;AAAA,SAASA,KAAT,CAAeC,MAAf,EAAuBC,IAAvB,EAA6B;EAC3B,IAAMC,MAAM,GAAG,EAAf;EACA,IAAMC,OAAO,GAAG,EAAhB;;EACA,mCAA2BC,MAAM,CAACC,OAAP,CAAeL,MAAf,CAA3B,qCAAmD;IAA9C;IAAA,IAAOM,GAAP;IAAA,IAAYC,KAAZ;;IACH,IAAIN,IAAI,CAACO,QAAL,CAAcF,GAAd,CAAJ,EACEJ,MAAM,CAACI,GAAD,CAAN,GAAcC,KAAd,CADF,KAGEJ,OAAO,CAACG,GAAD,CAAP,GAAeC,KAAf;EACH;;EACD,OAAO,CAACL,MAAD,EAASC,OAAT,CAAP;AACD;;AAED,SAASJ,KAAT"},"metadata":{},"sourceType":"module"}