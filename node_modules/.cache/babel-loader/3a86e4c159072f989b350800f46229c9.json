{"ast":null,"code":"'use client';\n\nimport { useCallbackRef, useCounter, useUpdateEffect, useSafeLayoutEffect, useEventListener, mergeRefs } from '@chakra-ui/hooks';\nimport { callAllHandlers, ariaAttr } from '@chakra-ui/utils';\nimport { useState, useRef, useCallback, useMemo } from 'react';\nimport { useAttributeObserver } from './use-attr-observer.mjs';\nimport { useSpinner } from './use-spinner.mjs';\nconst FLOATING_POINT_REGEX = /^[Ee0-9+\\-.]$/;\n\nfunction isFloatingPointNumericCharacter(character) {\n  return FLOATING_POINT_REGEX.test(character);\n}\n\nfunction isValidNumericKeyboardEvent(event, isValid) {\n  if (event.key == null) return true;\n  const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;\n  const isSingleCharacterKey = event.key.length === 1;\n  if (!isSingleCharacterKey || isModifierKey) return true;\n  return isValid(event.key);\n}\n\nfunction useNumberInput() {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    focusInputOnChange = true,\n    clampValueOnBlur = true,\n    keepWithinRange = true,\n    min = Number.MIN_SAFE_INTEGER,\n    max = Number.MAX_SAFE_INTEGER,\n    step: stepProp = 1,\n    isReadOnly,\n    isDisabled,\n    isRequired,\n    isInvalid,\n    pattern = \"[0-9]*(.[0-9]+)?\",\n    inputMode = \"decimal\",\n    allowMouseWheel,\n    id,\n    onChange: _,\n    precision,\n    name,\n    \"aria-describedby\": ariaDescBy,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    onFocus: onFocusProp,\n    onBlur: onBlurProp,\n    onInvalid: onInvalidProp,\n    getAriaValueText: getAriaValueTextProp,\n    isValidCharacter: isValidCharacterProp,\n    format: formatValue,\n    parse: parseValue,\n    ...htmlProps\n  } = props;\n  const onFocus = useCallbackRef(onFocusProp);\n  const onBlur = useCallbackRef(onBlurProp);\n  const onInvalid = useCallbackRef(onInvalidProp);\n  const isValidCharacter = useCallbackRef(isValidCharacterProp ?? isFloatingPointNumericCharacter);\n  const getAriaValueText = useCallbackRef(getAriaValueTextProp);\n  const counter = useCounter(props);\n  const {\n    update: updateFn,\n    increment: incrementFn,\n    decrement: decrementFn\n  } = counter;\n  const [isFocused, setFocused] = useState(false);\n  const isInteractive = !(isReadOnly || isDisabled);\n  const inputRef = useRef(null);\n  const inputSelectionRef = useRef(null);\n  const incrementButtonRef = useRef(null);\n  const decrementButtonRef = useRef(null);\n  const sanitize = useCallback(value => value.split(\"\").filter(isValidCharacter).join(\"\"), [isValidCharacter]);\n  const parse = useCallback(value => parseValue?.(value) ?? value, [parseValue]);\n  const format = useCallback(value => (formatValue?.(value) ?? value).toString(), [formatValue]);\n  useUpdateEffect(() => {\n    if (counter.valueAsNumber > max) {\n      onInvalid?.(\"rangeOverflow\", format(counter.value), counter.valueAsNumber);\n    } else if (counter.valueAsNumber < min) {\n      onInvalid?.(\"rangeOverflow\", format(counter.value), counter.valueAsNumber);\n    }\n  }, [counter.valueAsNumber, counter.value, format, onInvalid]);\n  useSafeLayoutEffect(() => {\n    if (!inputRef.current) return;\n    const notInSync = inputRef.current.value != counter.value;\n\n    if (notInSync) {\n      const parsedInput = parse(inputRef.current.value);\n      counter.setValue(sanitize(parsedInput));\n    }\n  }, [parse, sanitize]);\n  const increment = useCallback(function () {\n    let step = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : stepProp;\n\n    if (isInteractive) {\n      incrementFn(step);\n    }\n  }, [incrementFn, isInteractive, stepProp]);\n  const decrement = useCallback(function () {\n    let step = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : stepProp;\n\n    if (isInteractive) {\n      decrementFn(step);\n    }\n  }, [decrementFn, isInteractive, stepProp]);\n  const spinner = useSpinner(increment, decrement);\n  useAttributeObserver(incrementButtonRef, \"disabled\", spinner.stop, spinner.isSpinning);\n  useAttributeObserver(decrementButtonRef, \"disabled\", spinner.stop, spinner.isSpinning);\n  const onChange = useCallback(event => {\n    const evt = event.nativeEvent;\n    if (evt.isComposing) return;\n    const parsedInput = parse(event.currentTarget.value);\n    updateFn(sanitize(parsedInput));\n    inputSelectionRef.current = {\n      start: event.currentTarget.selectionStart,\n      end: event.currentTarget.selectionEnd\n    };\n  }, [updateFn, sanitize, parse]);\n\n  const _onFocus = useCallback(event => {\n    onFocus?.(event);\n    if (!inputSelectionRef.current) return;\n    event.currentTarget.selectionStart = inputSelectionRef.current.start ?? event.currentTarget.value?.length;\n    event.currentTarget.selectionEnd = inputSelectionRef.current.end ?? event.currentTarget.selectionStart;\n  }, [onFocus]);\n\n  const onKeyDown = useCallback(e => {\n    if (e.nativeEvent.isComposing) return;\n\n    if (!isValidNumericKeyboardEvent(e, isValidCharacter)) {\n      e.preventDefault();\n    }\n\n    const stepFactor = getStepFactor(e) * stepProp;\n    const eventKey = e.key;\n    const keyMap = {\n      ArrowUp: () => increment(stepFactor),\n      ArrowDown: () => decrement(stepFactor),\n      Home: () => updateFn(min),\n      End: () => updateFn(max)\n    };\n    const action = keyMap[eventKey];\n\n    if (action) {\n      e.preventDefault();\n      action(e);\n    }\n  }, [isValidCharacter, stepProp, increment, decrement, updateFn, min, max]);\n\n  const getStepFactor = event => {\n    let ratio = 1;\n\n    if (event.metaKey || event.ctrlKey) {\n      ratio = 0.1;\n    }\n\n    if (event.shiftKey) {\n      ratio = 10;\n    }\n\n    return ratio;\n  };\n\n  const ariaValueText = useMemo(() => {\n    const text = getAriaValueText?.(counter.value);\n    if (text != null) return text;\n    const defaultText = counter.value.toString();\n    return !defaultText ? void 0 : defaultText;\n  }, [counter.value, getAriaValueText]);\n  const validateAndClamp = useCallback(() => {\n    let next = counter.value;\n    if (counter.value === \"\") return;\n    const valueStartsWithE = /^[eE]/.test(counter.value.toString());\n\n    if (valueStartsWithE) {\n      counter.setValue(\"\");\n    } else {\n      if (counter.valueAsNumber < min) {\n        next = min;\n      }\n\n      if (counter.valueAsNumber > max) {\n        next = max;\n      }\n\n      counter.cast(next);\n    }\n  }, [counter, max, min]);\n  const onInputBlur = useCallback(() => {\n    setFocused(false);\n\n    if (clampValueOnBlur) {\n      validateAndClamp();\n    }\n  }, [clampValueOnBlur, setFocused, validateAndClamp]);\n  const focusInput = useCallback(() => {\n    if (focusInputOnChange) {\n      requestAnimationFrame(() => {\n        inputRef.current?.focus();\n      });\n    }\n  }, [focusInputOnChange]);\n  const spinUp = useCallback(event => {\n    event.preventDefault();\n    spinner.up();\n    focusInput();\n  }, [focusInput, spinner]);\n  const spinDown = useCallback(event => {\n    event.preventDefault();\n    spinner.down();\n    focusInput();\n  }, [focusInput, spinner]);\n  useEventListener(() => inputRef.current, \"wheel\", event => {\n    const doc = inputRef.current?.ownerDocument ?? document;\n    const isInputFocused = doc.activeElement === inputRef.current;\n    if (!allowMouseWheel || !isInputFocused) return;\n    event.preventDefault();\n    const stepFactor = getStepFactor(event) * stepProp;\n    const direction = Math.sign(event.deltaY);\n\n    if (direction === -1) {\n      increment(stepFactor);\n    } else if (direction === 1) {\n      decrement(stepFactor);\n    }\n  }, {\n    passive: false\n  });\n  const getIncrementButtonProps = useCallback(function () {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    const disabled = isDisabled || keepWithinRange && counter.isAtMax;\n    return { ...props2,\n      ref: mergeRefs(ref, incrementButtonRef),\n      role: \"button\",\n      tabIndex: -1,\n      onPointerDown: callAllHandlers(props2.onPointerDown, event => {\n        if (event.button !== 0 || disabled) return;\n        spinUp(event);\n      }),\n      onPointerLeave: callAllHandlers(props2.onPointerLeave, spinner.stop),\n      onPointerUp: callAllHandlers(props2.onPointerUp, spinner.stop),\n      disabled,\n      \"aria-disabled\": ariaAttr(disabled)\n    };\n  }, [counter.isAtMax, keepWithinRange, spinUp, spinner.stop, isDisabled]);\n  const getDecrementButtonProps = useCallback(function () {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    const disabled = isDisabled || keepWithinRange && counter.isAtMin;\n    return { ...props2,\n      ref: mergeRefs(ref, decrementButtonRef),\n      role: \"button\",\n      tabIndex: -1,\n      onPointerDown: callAllHandlers(props2.onPointerDown, event => {\n        if (event.button !== 0 || disabled) return;\n        spinDown(event);\n      }),\n      onPointerLeave: callAllHandlers(props2.onPointerLeave, spinner.stop),\n      onPointerUp: callAllHandlers(props2.onPointerUp, spinner.stop),\n      disabled,\n      \"aria-disabled\": ariaAttr(disabled)\n    };\n  }, [counter.isAtMin, keepWithinRange, spinDown, spinner.stop, isDisabled]);\n  const getInputProps = useCallback(function () {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return {\n      name,\n      inputMode,\n      type: \"text\",\n      pattern,\n      \"aria-labelledby\": ariaLabelledBy,\n      \"aria-label\": ariaLabel,\n      \"aria-describedby\": ariaDescBy,\n      id,\n      disabled: isDisabled,\n      role: \"spinbutton\",\n      ...props2,\n      readOnly: props2.readOnly ?? isReadOnly,\n      \"aria-readonly\": props2.readOnly ?? isReadOnly,\n      \"aria-required\": props2.required ?? isRequired,\n      required: props2.required ?? isRequired,\n      ref: mergeRefs(inputRef, ref),\n      value: format(counter.value),\n      \"aria-valuemin\": min,\n      \"aria-valuemax\": max,\n      \"aria-valuenow\": Number.isNaN(counter.valueAsNumber) ? void 0 : counter.valueAsNumber,\n      \"aria-invalid\": ariaAttr(isInvalid ?? counter.isOutOfRange),\n      \"aria-valuetext\": ariaValueText,\n      autoComplete: \"off\",\n      autoCorrect: \"off\",\n      onChange: callAllHandlers(props2.onChange, onChange),\n      onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown),\n      onFocus: callAllHandlers(props2.onFocus, _onFocus, () => setFocused(true)),\n      onBlur: callAllHandlers(props2.onBlur, onBlur, onInputBlur)\n    };\n  }, [name, inputMode, pattern, ariaLabelledBy, ariaLabel, format, ariaDescBy, id, isDisabled, isRequired, isReadOnly, isInvalid, counter.value, counter.valueAsNumber, counter.isOutOfRange, min, max, ariaValueText, onChange, onKeyDown, _onFocus, onBlur, onInputBlur]);\n  return {\n    value: format(counter.value),\n    valueAsNumber: counter.valueAsNumber,\n    isFocused,\n    isDisabled,\n    isReadOnly,\n    getIncrementButtonProps,\n    getDecrementButtonProps,\n    getInputProps,\n    htmlProps\n  };\n}\n\nexport { useNumberInput };","map":{"version":3,"names":["useCallbackRef","useCounter","useUpdateEffect","useSafeLayoutEffect","useEventListener","mergeRefs","callAllHandlers","ariaAttr","useState","useRef","useCallback","useMemo","useAttributeObserver","useSpinner","FLOATING_POINT_REGEX","isFloatingPointNumericCharacter","character","test","isValidNumericKeyboardEvent","event","isValid","key","isModifierKey","ctrlKey","altKey","metaKey","isSingleCharacterKey","length","useNumberInput","props","focusInputOnChange","clampValueOnBlur","keepWithinRange","min","Number","MIN_SAFE_INTEGER","max","MAX_SAFE_INTEGER","step","stepProp","isReadOnly","isDisabled","isRequired","isInvalid","pattern","inputMode","allowMouseWheel","id","onChange","_","precision","name","ariaDescBy","ariaLabel","ariaLabelledBy","onFocus","onFocusProp","onBlur","onBlurProp","onInvalid","onInvalidProp","getAriaValueText","getAriaValueTextProp","isValidCharacter","isValidCharacterProp","format","formatValue","parse","parseValue","htmlProps","counter","update","updateFn","increment","incrementFn","decrement","decrementFn","isFocused","setFocused","isInteractive","inputRef","inputSelectionRef","incrementButtonRef","decrementButtonRef","sanitize","value","split","filter","join","toString","valueAsNumber","current","notInSync","parsedInput","setValue","spinner","stop","isSpinning","evt","nativeEvent","isComposing","currentTarget","start","selectionStart","end","selectionEnd","_onFocus","onKeyDown","e","preventDefault","stepFactor","getStepFactor","eventKey","keyMap","ArrowUp","ArrowDown","Home","End","action","ratio","shiftKey","ariaValueText","text","defaultText","validateAndClamp","next","valueStartsWithE","cast","onInputBlur","focusInput","requestAnimationFrame","focus","spinUp","up","spinDown","down","doc","ownerDocument","document","isInputFocused","activeElement","direction","Math","sign","deltaY","passive","getIncrementButtonProps","props2","ref","disabled","isAtMax","role","tabIndex","onPointerDown","button","onPointerLeave","onPointerUp","getDecrementButtonProps","isAtMin","getInputProps","type","readOnly","required","isNaN","isOutOfRange","autoComplete","autoCorrect"],"sources":["/workspaces/200508238/develop/node_modules/@chakra-ui/react/dist/esm/number-input/use-number-input.mjs"],"sourcesContent":["'use client';\nimport { useCallbackRef, useCounter, useUpdateEffect, useSafeLayoutEffect, useEventListener, mergeRefs } from '@chakra-ui/hooks';\nimport { callAllHandlers, ariaAttr } from '@chakra-ui/utils';\nimport { useState, useRef, useCallback, useMemo } from 'react';\nimport { useAttributeObserver } from './use-attr-observer.mjs';\nimport { useSpinner } from './use-spinner.mjs';\n\nconst FLOATING_POINT_REGEX = /^[Ee0-9+\\-.]$/;\nfunction isFloatingPointNumericCharacter(character) {\n  return FLOATING_POINT_REGEX.test(character);\n}\nfunction isValidNumericKeyboardEvent(event, isValid) {\n  if (event.key == null)\n    return true;\n  const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;\n  const isSingleCharacterKey = event.key.length === 1;\n  if (!isSingleCharacterKey || isModifierKey)\n    return true;\n  return isValid(event.key);\n}\nfunction useNumberInput(props = {}) {\n  const {\n    focusInputOnChange = true,\n    clampValueOnBlur = true,\n    keepWithinRange = true,\n    min = Number.MIN_SAFE_INTEGER,\n    max = Number.MAX_SAFE_INTEGER,\n    step: stepProp = 1,\n    isReadOnly,\n    isDisabled,\n    isRequired,\n    isInvalid,\n    pattern = \"[0-9]*(.[0-9]+)?\",\n    inputMode = \"decimal\",\n    allowMouseWheel,\n    id,\n    onChange: _,\n    precision,\n    name,\n    \"aria-describedby\": ariaDescBy,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    onFocus: onFocusProp,\n    onBlur: onBlurProp,\n    onInvalid: onInvalidProp,\n    getAriaValueText: getAriaValueTextProp,\n    isValidCharacter: isValidCharacterProp,\n    format: formatValue,\n    parse: parseValue,\n    ...htmlProps\n  } = props;\n  const onFocus = useCallbackRef(onFocusProp);\n  const onBlur = useCallbackRef(onBlurProp);\n  const onInvalid = useCallbackRef(onInvalidProp);\n  const isValidCharacter = useCallbackRef(\n    isValidCharacterProp ?? isFloatingPointNumericCharacter\n  );\n  const getAriaValueText = useCallbackRef(getAriaValueTextProp);\n  const counter = useCounter(props);\n  const {\n    update: updateFn,\n    increment: incrementFn,\n    decrement: decrementFn\n  } = counter;\n  const [isFocused, setFocused] = useState(false);\n  const isInteractive = !(isReadOnly || isDisabled);\n  const inputRef = useRef(null);\n  const inputSelectionRef = useRef(null);\n  const incrementButtonRef = useRef(null);\n  const decrementButtonRef = useRef(null);\n  const sanitize = useCallback(\n    (value) => value.split(\"\").filter(isValidCharacter).join(\"\"),\n    [isValidCharacter]\n  );\n  const parse = useCallback(\n    (value) => parseValue?.(value) ?? value,\n    [parseValue]\n  );\n  const format = useCallback(\n    (value) => (formatValue?.(value) ?? value).toString(),\n    [formatValue]\n  );\n  useUpdateEffect(() => {\n    if (counter.valueAsNumber > max) {\n      onInvalid?.(\"rangeOverflow\", format(counter.value), counter.valueAsNumber);\n    } else if (counter.valueAsNumber < min) {\n      onInvalid?.(\"rangeOverflow\", format(counter.value), counter.valueAsNumber);\n    }\n  }, [counter.valueAsNumber, counter.value, format, onInvalid]);\n  useSafeLayoutEffect(() => {\n    if (!inputRef.current)\n      return;\n    const notInSync = inputRef.current.value != counter.value;\n    if (notInSync) {\n      const parsedInput = parse(inputRef.current.value);\n      counter.setValue(sanitize(parsedInput));\n    }\n  }, [parse, sanitize]);\n  const increment = useCallback(\n    (step = stepProp) => {\n      if (isInteractive) {\n        incrementFn(step);\n      }\n    },\n    [incrementFn, isInteractive, stepProp]\n  );\n  const decrement = useCallback(\n    (step = stepProp) => {\n      if (isInteractive) {\n        decrementFn(step);\n      }\n    },\n    [decrementFn, isInteractive, stepProp]\n  );\n  const spinner = useSpinner(increment, decrement);\n  useAttributeObserver(\n    incrementButtonRef,\n    \"disabled\",\n    spinner.stop,\n    spinner.isSpinning\n  );\n  useAttributeObserver(\n    decrementButtonRef,\n    \"disabled\",\n    spinner.stop,\n    spinner.isSpinning\n  );\n  const onChange = useCallback(\n    (event) => {\n      const evt = event.nativeEvent;\n      if (evt.isComposing)\n        return;\n      const parsedInput = parse(event.currentTarget.value);\n      updateFn(sanitize(parsedInput));\n      inputSelectionRef.current = {\n        start: event.currentTarget.selectionStart,\n        end: event.currentTarget.selectionEnd\n      };\n    },\n    [updateFn, sanitize, parse]\n  );\n  const _onFocus = useCallback(\n    (event) => {\n      onFocus?.(event);\n      if (!inputSelectionRef.current)\n        return;\n      event.currentTarget.selectionStart = inputSelectionRef.current.start ?? event.currentTarget.value?.length;\n      event.currentTarget.selectionEnd = inputSelectionRef.current.end ?? event.currentTarget.selectionStart;\n    },\n    [onFocus]\n  );\n  const onKeyDown = useCallback(\n    (e) => {\n      if (e.nativeEvent.isComposing)\n        return;\n      if (!isValidNumericKeyboardEvent(e, isValidCharacter)) {\n        e.preventDefault();\n      }\n      const stepFactor = getStepFactor(e) * stepProp;\n      const eventKey = e.key;\n      const keyMap = {\n        ArrowUp: () => increment(stepFactor),\n        ArrowDown: () => decrement(stepFactor),\n        Home: () => updateFn(min),\n        End: () => updateFn(max)\n      };\n      const action = keyMap[eventKey];\n      if (action) {\n        e.preventDefault();\n        action(e);\n      }\n    },\n    [isValidCharacter, stepProp, increment, decrement, updateFn, min, max]\n  );\n  const getStepFactor = (event) => {\n    let ratio = 1;\n    if (event.metaKey || event.ctrlKey) {\n      ratio = 0.1;\n    }\n    if (event.shiftKey) {\n      ratio = 10;\n    }\n    return ratio;\n  };\n  const ariaValueText = useMemo(() => {\n    const text = getAriaValueText?.(counter.value);\n    if (text != null)\n      return text;\n    const defaultText = counter.value.toString();\n    return !defaultText ? void 0 : defaultText;\n  }, [counter.value, getAriaValueText]);\n  const validateAndClamp = useCallback(() => {\n    let next = counter.value;\n    if (counter.value === \"\")\n      return;\n    const valueStartsWithE = /^[eE]/.test(counter.value.toString());\n    if (valueStartsWithE) {\n      counter.setValue(\"\");\n    } else {\n      if (counter.valueAsNumber < min) {\n        next = min;\n      }\n      if (counter.valueAsNumber > max) {\n        next = max;\n      }\n      counter.cast(next);\n    }\n  }, [counter, max, min]);\n  const onInputBlur = useCallback(() => {\n    setFocused(false);\n    if (clampValueOnBlur) {\n      validateAndClamp();\n    }\n  }, [clampValueOnBlur, setFocused, validateAndClamp]);\n  const focusInput = useCallback(() => {\n    if (focusInputOnChange) {\n      requestAnimationFrame(() => {\n        inputRef.current?.focus();\n      });\n    }\n  }, [focusInputOnChange]);\n  const spinUp = useCallback(\n    (event) => {\n      event.preventDefault();\n      spinner.up();\n      focusInput();\n    },\n    [focusInput, spinner]\n  );\n  const spinDown = useCallback(\n    (event) => {\n      event.preventDefault();\n      spinner.down();\n      focusInput();\n    },\n    [focusInput, spinner]\n  );\n  useEventListener(\n    () => inputRef.current,\n    \"wheel\",\n    (event) => {\n      const doc = inputRef.current?.ownerDocument ?? document;\n      const isInputFocused = doc.activeElement === inputRef.current;\n      if (!allowMouseWheel || !isInputFocused)\n        return;\n      event.preventDefault();\n      const stepFactor = getStepFactor(event) * stepProp;\n      const direction = Math.sign(event.deltaY);\n      if (direction === -1) {\n        increment(stepFactor);\n      } else if (direction === 1) {\n        decrement(stepFactor);\n      }\n    },\n    { passive: false }\n  );\n  const getIncrementButtonProps = useCallback(\n    (props2 = {}, ref = null) => {\n      const disabled = isDisabled || keepWithinRange && counter.isAtMax;\n      return {\n        ...props2,\n        ref: mergeRefs(ref, incrementButtonRef),\n        role: \"button\",\n        tabIndex: -1,\n        onPointerDown: callAllHandlers(props2.onPointerDown, (event) => {\n          if (event.button !== 0 || disabled)\n            return;\n          spinUp(event);\n        }),\n        onPointerLeave: callAllHandlers(props2.onPointerLeave, spinner.stop),\n        onPointerUp: callAllHandlers(props2.onPointerUp, spinner.stop),\n        disabled,\n        \"aria-disabled\": ariaAttr(disabled)\n      };\n    },\n    [counter.isAtMax, keepWithinRange, spinUp, spinner.stop, isDisabled]\n  );\n  const getDecrementButtonProps = useCallback(\n    (props2 = {}, ref = null) => {\n      const disabled = isDisabled || keepWithinRange && counter.isAtMin;\n      return {\n        ...props2,\n        ref: mergeRefs(ref, decrementButtonRef),\n        role: \"button\",\n        tabIndex: -1,\n        onPointerDown: callAllHandlers(props2.onPointerDown, (event) => {\n          if (event.button !== 0 || disabled)\n            return;\n          spinDown(event);\n        }),\n        onPointerLeave: callAllHandlers(props2.onPointerLeave, spinner.stop),\n        onPointerUp: callAllHandlers(props2.onPointerUp, spinner.stop),\n        disabled,\n        \"aria-disabled\": ariaAttr(disabled)\n      };\n    },\n    [counter.isAtMin, keepWithinRange, spinDown, spinner.stop, isDisabled]\n  );\n  const getInputProps = useCallback(\n    (props2 = {}, ref = null) => ({\n      name,\n      inputMode,\n      type: \"text\",\n      pattern,\n      \"aria-labelledby\": ariaLabelledBy,\n      \"aria-label\": ariaLabel,\n      \"aria-describedby\": ariaDescBy,\n      id,\n      disabled: isDisabled,\n      role: \"spinbutton\",\n      ...props2,\n      readOnly: props2.readOnly ?? isReadOnly,\n      \"aria-readonly\": props2.readOnly ?? isReadOnly,\n      \"aria-required\": props2.required ?? isRequired,\n      required: props2.required ?? isRequired,\n      ref: mergeRefs(inputRef, ref),\n      value: format(counter.value),\n      \"aria-valuemin\": min,\n      \"aria-valuemax\": max,\n      \"aria-valuenow\": Number.isNaN(counter.valueAsNumber) ? void 0 : counter.valueAsNumber,\n      \"aria-invalid\": ariaAttr(isInvalid ?? counter.isOutOfRange),\n      \"aria-valuetext\": ariaValueText,\n      autoComplete: \"off\",\n      autoCorrect: \"off\",\n      onChange: callAllHandlers(props2.onChange, onChange),\n      onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown),\n      onFocus: callAllHandlers(\n        props2.onFocus,\n        _onFocus,\n        () => setFocused(true)\n      ),\n      onBlur: callAllHandlers(props2.onBlur, onBlur, onInputBlur)\n    }),\n    [\n      name,\n      inputMode,\n      pattern,\n      ariaLabelledBy,\n      ariaLabel,\n      format,\n      ariaDescBy,\n      id,\n      isDisabled,\n      isRequired,\n      isReadOnly,\n      isInvalid,\n      counter.value,\n      counter.valueAsNumber,\n      counter.isOutOfRange,\n      min,\n      max,\n      ariaValueText,\n      onChange,\n      onKeyDown,\n      _onFocus,\n      onBlur,\n      onInputBlur\n    ]\n  );\n  return {\n    value: format(counter.value),\n    valueAsNumber: counter.valueAsNumber,\n    isFocused,\n    isDisabled,\n    isReadOnly,\n    getIncrementButtonProps,\n    getDecrementButtonProps,\n    getInputProps,\n    htmlProps\n  };\n}\n\nexport { useNumberInput };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}