{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/workspaces/200508238/develop/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/workspaces/200508238/develop/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/workspaces/200508238/develop/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { isMultiTouchEvent, getEventPoint, addPointerEvent } from '@chakra-ui/utils';\nimport sync, { getFrameData, cancelSync } from 'framesync';\nvar __defProp = Object.defineProperty;\n\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\n\nvar __publicField = function __publicField(obj, key, value) {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n  return value;\n};\n\nvar PanEvent = /*#__PURE__*/function () {\n  function PanEvent(event, handlers, threshold) {\n    var _this = this,\n        _event$view;\n\n    _classCallCheck(this, PanEvent);\n\n    /**\n     * We use this to keep track of the `x` and `y` pan session history\n     * as the pan event happens. It helps to calculate the `offset` and `delta`\n     */\n    __publicField(this, \"history\", []); // The pointer event that started the pan session\n\n\n    __publicField(this, \"startEvent\", null); // The current pointer event for the pan session\n\n\n    __publicField(this, \"lastEvent\", null); // The current pointer event info for the pan session\n\n\n    __publicField(this, \"lastEventInfo\", null);\n\n    __publicField(this, \"handlers\", {});\n\n    __publicField(this, \"removeListeners\", function () {});\n    /**\n     * Minimal pan distance required before recognizing the pan.\n     * @default \"3px\"\n     */\n\n\n    __publicField(this, \"threshold\", 3);\n\n    __publicField(this, \"win\");\n\n    __publicField(this, \"updatePoint\", function () {\n      if (!(_this.lastEvent && _this.lastEventInfo)) return;\n      var info = getPanInfo(_this.lastEventInfo, _this.history);\n      var isPanStarted = _this.startEvent !== null;\n\n      var isDistancePastThreshold = distance(info.offset, {\n        x: 0,\n        y: 0\n      }) >= _this.threshold;\n\n      if (!isPanStarted && !isDistancePastThreshold) return;\n\n      var _getFrameData = getFrameData(),\n          timestamp = _getFrameData.timestamp;\n\n      _this.history.push(_objectSpread(_objectSpread({}, info.point), {}, {\n        timestamp: timestamp\n      }));\n\n      var _this$handlers = _this.handlers,\n          onStart = _this$handlers.onStart,\n          onMove = _this$handlers.onMove;\n\n      if (!isPanStarted) {\n        onStart === null || onStart === void 0 ? void 0 : onStart(_this.lastEvent, info);\n        _this.startEvent = _this.lastEvent;\n      }\n\n      onMove === null || onMove === void 0 ? void 0 : onMove(_this.lastEvent, info);\n    });\n\n    __publicField(this, \"onPointerMove\", function (event, info) {\n      _this.lastEvent = event;\n      _this.lastEventInfo = info;\n      sync.update(_this.updatePoint, true);\n    });\n\n    __publicField(this, \"onPointerUp\", function (event, info) {\n      var panInfo = getPanInfo(info, _this.history);\n      var _this$handlers2 = _this.handlers,\n          onEnd = _this$handlers2.onEnd,\n          onSessionEnd = _this$handlers2.onSessionEnd;\n      onSessionEnd === null || onSessionEnd === void 0 ? void 0 : onSessionEnd(event, panInfo);\n\n      _this.end();\n\n      if (!onEnd || !_this.startEvent) return;\n      onEnd === null || onEnd === void 0 ? void 0 : onEnd(event, panInfo);\n    });\n\n    this.win = (_event$view = event.view) !== null && _event$view !== void 0 ? _event$view : window;\n    if (isMultiTouchEvent(event)) return;\n    this.handlers = handlers;\n\n    if (threshold) {\n      this.threshold = threshold;\n    }\n\n    event.stopPropagation();\n    event.preventDefault();\n    var info = {\n      point: getEventPoint(event)\n    };\n\n    var _getFrameData2 = getFrameData(),\n        timestamp = _getFrameData2.timestamp;\n\n    this.history = [_objectSpread(_objectSpread({}, info.point), {}, {\n      timestamp: timestamp\n    })];\n    var onSessionStart = handlers.onSessionStart;\n    onSessionStart === null || onSessionStart === void 0 ? void 0 : onSessionStart(event, getPanInfo(info, this.history));\n    this.removeListeners = pipe(addPointerEvent(this.win, \"pointermove\", this.onPointerMove), addPointerEvent(this.win, \"pointerup\", this.onPointerUp), addPointerEvent(this.win, \"pointercancel\", this.onPointerUp));\n  }\n\n  _createClass(PanEvent, [{\n    key: \"updateHandlers\",\n    value: function updateHandlers(handlers) {\n      this.handlers = handlers;\n    }\n  }, {\n    key: \"end\",\n    value: function end() {\n      var _this$removeListeners;\n\n      (_this$removeListeners = this.removeListeners) === null || _this$removeListeners === void 0 ? void 0 : _this$removeListeners.call(this);\n      cancelSync.update(this.updatePoint);\n    }\n  }]);\n\n  return PanEvent;\n}();\n\nfunction subtract(a, b) {\n  return {\n    x: a.x - b.x,\n    y: a.y - b.y\n  };\n}\n\nfunction getPanInfo(info, history) {\n  return {\n    point: info.point,\n    delta: subtract(info.point, history[history.length - 1]),\n    offset: subtract(info.point, history[0]),\n    velocity: getVelocity(history, 0.1)\n  };\n}\n\nvar toMilliseconds = function toMilliseconds(v) {\n  return v * 1e3;\n};\n\nfunction getVelocity(history, timeDelta) {\n  if (history.length < 2) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n\n  var i = history.length - 1;\n  var timestampedPoint = null;\n  var lastPoint = history[history.length - 1];\n\n  while (i >= 0) {\n    timestampedPoint = history[i];\n\n    if (lastPoint.timestamp - timestampedPoint.timestamp > toMilliseconds(timeDelta)) {\n      break;\n    }\n\n    i--;\n  }\n\n  if (!timestampedPoint) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n\n  var time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1e3;\n\n  if (time === 0) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n\n  var currentVelocity = {\n    x: (lastPoint.x - timestampedPoint.x) / time,\n    y: (lastPoint.y - timestampedPoint.y) / time\n  };\n\n  if (currentVelocity.x === Infinity) {\n    currentVelocity.x = 0;\n  }\n\n  if (currentVelocity.y === Infinity) {\n    currentVelocity.y = 0;\n  }\n\n  return currentVelocity;\n}\n\nfunction pipe() {\n  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {\n    fns[_key] = arguments[_key];\n  }\n\n  return function (v) {\n    return fns.reduce(function (a, b) {\n      return b(a);\n    }, v);\n  };\n}\n\nfunction distance1D(a, b) {\n  return Math.abs(a - b);\n}\n\nfunction isPoint(point) {\n  return \"x\" in point && \"y\" in point;\n}\n\nfunction distance(a, b) {\n  if (typeof a === \"number\" && typeof b === \"number\") {\n    return distance1D(a, b);\n  }\n\n  if (isPoint(a) && isPoint(b)) {\n    var xDelta = distance1D(a.x, b.x);\n    var yDelta = distance1D(a.y, b.y);\n    return Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2));\n  }\n\n  return 0;\n}\n\nexport { PanEvent, distance };","map":{"version":3,"names":["isMultiTouchEvent","getEventPoint","addPointerEvent","sync","getFrameData","cancelSync","__defProp","Object","defineProperty","__defNormalProp","obj","key","value","enumerable","configurable","writable","__publicField","PanEvent","event","handlers","threshold","lastEvent","lastEventInfo","info","getPanInfo","history","isPanStarted","startEvent","isDistancePastThreshold","distance","offset","x","y","timestamp","push","point","onStart","onMove","update","updatePoint","panInfo","onEnd","onSessionEnd","end","win","view","window","stopPropagation","preventDefault","onSessionStart","removeListeners","pipe","onPointerMove","onPointerUp","subtract","a","b","delta","length","velocity","getVelocity","toMilliseconds","v","timeDelta","i","timestampedPoint","lastPoint","time","currentVelocity","Infinity","fns","reduce","distance1D","Math","abs","isPoint","xDelta","yDelta","sqrt"],"sources":["/workspaces/200508238/develop/node_modules/@chakra-ui/react/node_modules/@chakra-ui/hooks/dist/esm/use-pan-event/pan-event.mjs"],"sourcesContent":["'use client';\nimport { isMultiTouchEvent, getEventPoint, addPointerEvent } from '@chakra-ui/utils';\nimport sync, { getFrameData, cancelSync } from 'framesync';\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nclass PanEvent {\n  constructor(event, handlers, threshold) {\n    /**\n     * We use this to keep track of the `x` and `y` pan session history\n     * as the pan event happens. It helps to calculate the `offset` and `delta`\n     */\n    __publicField(this, \"history\", []);\n    // The pointer event that started the pan session\n    __publicField(this, \"startEvent\", null);\n    // The current pointer event for the pan session\n    __publicField(this, \"lastEvent\", null);\n    // The current pointer event info for the pan session\n    __publicField(this, \"lastEventInfo\", null);\n    __publicField(this, \"handlers\", {});\n    __publicField(this, \"removeListeners\", () => {\n    });\n    /**\n     * Minimal pan distance required before recognizing the pan.\n     * @default \"3px\"\n     */\n    __publicField(this, \"threshold\", 3);\n    __publicField(this, \"win\");\n    __publicField(this, \"updatePoint\", () => {\n      if (!(this.lastEvent && this.lastEventInfo))\n        return;\n      const info = getPanInfo(this.lastEventInfo, this.history);\n      const isPanStarted = this.startEvent !== null;\n      const isDistancePastThreshold = distance(info.offset, { x: 0, y: 0 }) >= this.threshold;\n      if (!isPanStarted && !isDistancePastThreshold)\n        return;\n      const { timestamp } = getFrameData();\n      this.history.push({ ...info.point, timestamp });\n      const { onStart, onMove } = this.handlers;\n      if (!isPanStarted) {\n        onStart?.(this.lastEvent, info);\n        this.startEvent = this.lastEvent;\n      }\n      onMove?.(this.lastEvent, info);\n    });\n    __publicField(this, \"onPointerMove\", (event, info) => {\n      this.lastEvent = event;\n      this.lastEventInfo = info;\n      sync.update(this.updatePoint, true);\n    });\n    __publicField(this, \"onPointerUp\", (event, info) => {\n      const panInfo = getPanInfo(info, this.history);\n      const { onEnd, onSessionEnd } = this.handlers;\n      onSessionEnd?.(event, panInfo);\n      this.end();\n      if (!onEnd || !this.startEvent)\n        return;\n      onEnd?.(event, panInfo);\n    });\n    this.win = event.view ?? window;\n    if (isMultiTouchEvent(event))\n      return;\n    this.handlers = handlers;\n    if (threshold) {\n      this.threshold = threshold;\n    }\n    event.stopPropagation();\n    event.preventDefault();\n    const info = { point: getEventPoint(event) };\n    const { timestamp } = getFrameData();\n    this.history = [{ ...info.point, timestamp }];\n    const { onSessionStart } = handlers;\n    onSessionStart?.(event, getPanInfo(info, this.history));\n    this.removeListeners = pipe(\n      addPointerEvent(this.win, \"pointermove\", this.onPointerMove),\n      addPointerEvent(this.win, \"pointerup\", this.onPointerUp),\n      addPointerEvent(this.win, \"pointercancel\", this.onPointerUp)\n    );\n  }\n  updateHandlers(handlers) {\n    this.handlers = handlers;\n  }\n  end() {\n    this.removeListeners?.();\n    cancelSync.update(this.updatePoint);\n  }\n}\nfunction subtract(a, b) {\n  return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo(info, history) {\n  return {\n    point: info.point,\n    delta: subtract(info.point, history[history.length - 1]),\n    offset: subtract(info.point, history[0]),\n    velocity: getVelocity(history, 0.1)\n  };\n}\nconst toMilliseconds = (v) => v * 1e3;\nfunction getVelocity(history, timeDelta) {\n  if (history.length < 2) {\n    return { x: 0, y: 0 };\n  }\n  let i = history.length - 1;\n  let timestampedPoint = null;\n  const lastPoint = history[history.length - 1];\n  while (i >= 0) {\n    timestampedPoint = history[i];\n    if (lastPoint.timestamp - timestampedPoint.timestamp > toMilliseconds(timeDelta)) {\n      break;\n    }\n    i--;\n  }\n  if (!timestampedPoint) {\n    return { x: 0, y: 0 };\n  }\n  const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1e3;\n  if (time === 0) {\n    return { x: 0, y: 0 };\n  }\n  const currentVelocity = {\n    x: (lastPoint.x - timestampedPoint.x) / time,\n    y: (lastPoint.y - timestampedPoint.y) / time\n  };\n  if (currentVelocity.x === Infinity) {\n    currentVelocity.x = 0;\n  }\n  if (currentVelocity.y === Infinity) {\n    currentVelocity.y = 0;\n  }\n  return currentVelocity;\n}\nfunction pipe(...fns) {\n  return (v) => fns.reduce((a, b) => b(a), v);\n}\nfunction distance1D(a, b) {\n  return Math.abs(a - b);\n}\nfunction isPoint(point) {\n  return \"x\" in point && \"y\" in point;\n}\nfunction distance(a, b) {\n  if (typeof a === \"number\" && typeof b === \"number\") {\n    return distance1D(a, b);\n  }\n  if (isPoint(a) && isPoint(b)) {\n    const xDelta = distance1D(a.x, b.x);\n    const yDelta = distance1D(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n  }\n  return 0;\n}\n\nexport { PanEvent, distance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}