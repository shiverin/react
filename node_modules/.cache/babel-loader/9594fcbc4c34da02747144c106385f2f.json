{"ast":null,"code":"import { walkObject } from '@chakra-ui/utils';\nimport { pseudoPropNames } from '../pseudos.mjs';\nimport { extractTokens, extractSemanticTokens } from './theme-tokens.mjs';\n\nfunction flattenTokens(theme) {\n  const tokens = extractTokens(theme);\n  const semanticTokens = extractSemanticTokens(theme);\n\n  const isSemanticCondition = key => // @ts-ignore\n  pseudoPropNames.includes(key) || \"default\" === key;\n\n  const result = {};\n  walkObject(tokens, (value, path) => {\n    if (value == null) return;\n    result[path.join(\".\")] = {\n      isSemantic: false,\n      value\n    };\n  });\n  walkObject(semanticTokens, (value, path) => {\n    if (value == null) return;\n    result[path.join(\".\")] = {\n      isSemantic: true,\n      value\n    };\n  }, {\n    stop: value => Object.keys(value).every(isSemanticCondition)\n  });\n  return result;\n}\n\nexport { flattenTokens };","map":{"version":3,"names":["walkObject","pseudoPropNames","extractTokens","extractSemanticTokens","flattenTokens","theme","tokens","semanticTokens","isSemanticCondition","key","includes","result","value","path","join","isSemantic","stop","Object","keys","every"],"sources":["/workspaces/200508238/develop/node_modules/@chakra-ui/react/node_modules/@chakra-ui/styled-system/dist/esm/create-theme-vars/flatten-tokens.mjs"],"sourcesContent":["import { walkObject } from '@chakra-ui/utils';\nimport { pseudoPropNames } from '../pseudos.mjs';\nimport { extractTokens, extractSemanticTokens } from './theme-tokens.mjs';\n\nfunction flattenTokens(theme) {\n  const tokens = extractTokens(theme);\n  const semanticTokens = extractSemanticTokens(theme);\n  const isSemanticCondition = (key) => (\n    // @ts-ignore\n    pseudoPropNames.includes(key) || \"default\" === key\n  );\n  const result = {};\n  walkObject(tokens, (value, path) => {\n    if (value == null)\n      return;\n    result[path.join(\".\")] = { isSemantic: false, value };\n  });\n  walkObject(\n    semanticTokens,\n    (value, path) => {\n      if (value == null)\n        return;\n      result[path.join(\".\")] = { isSemantic: true, value };\n    },\n    {\n      stop: (value) => Object.keys(value).every(isSemanticCondition)\n    }\n  );\n  return result;\n}\n\nexport { flattenTokens };\n"],"mappings":"AAAA,SAASA,UAAT,QAA2B,kBAA3B;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,SAASC,aAAT,EAAwBC,qBAAxB,QAAqD,oBAArD;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;EAC5B,MAAMC,MAAM,GAAGJ,aAAa,CAACG,KAAD,CAA5B;EACA,MAAME,cAAc,GAAGJ,qBAAqB,CAACE,KAAD,CAA5C;;EACA,MAAMG,mBAAmB,GAAIC,GAAD,IAC1B;EACAR,eAAe,CAACS,QAAhB,CAAyBD,GAAzB,KAAiC,cAAcA,GAFjD;;EAIA,MAAME,MAAM,GAAG,EAAf;EACAX,UAAU,CAACM,MAAD,EAAS,CAACM,KAAD,EAAQC,IAAR,KAAiB;IAClC,IAAID,KAAK,IAAI,IAAb,EACE;IACFD,MAAM,CAACE,IAAI,CAACC,IAAL,CAAU,GAAV,CAAD,CAAN,GAAyB;MAAEC,UAAU,EAAE,KAAd;MAAqBH;IAArB,CAAzB;EACD,CAJS,CAAV;EAKAZ,UAAU,CACRO,cADQ,EAER,CAACK,KAAD,EAAQC,IAAR,KAAiB;IACf,IAAID,KAAK,IAAI,IAAb,EACE;IACFD,MAAM,CAACE,IAAI,CAACC,IAAL,CAAU,GAAV,CAAD,CAAN,GAAyB;MAAEC,UAAU,EAAE,IAAd;MAAoBH;IAApB,CAAzB;EACD,CANO,EAOR;IACEI,IAAI,EAAGJ,KAAD,IAAWK,MAAM,CAACC,IAAP,CAAYN,KAAZ,EAAmBO,KAAnB,CAAyBX,mBAAzB;EADnB,CAPQ,CAAV;EAWA,OAAOG,MAAP;AACD;;AAED,SAASP,aAAT"},"metadata":{},"sourceType":"module"}