{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/workspaces/200508238/develop/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/workspaces/200508238/develop/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _slicedToArray from \"/workspaces/200508238/develop/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _excluded = [\"src\", \"srcSet\", \"name\", \"showBorder\", \"borderRadius\", \"onError\", \"onLoad\", \"getInitials\", \"icon\", \"iconLabel\", \"loading\", \"children\", \"borderColor\", \"ignoreFallback\", \"crossOrigin\", \"referrerPolicy\"];\nimport { jsx, jsxs } from 'react/jsx-runtime';\nimport { defineStyle, omitThemingProps } from '@chakra-ui/styled-system';\nimport { cx, dataAttr, callAllHandlers } from '@chakra-ui/utils';\nimport { useState } from 'react';\nimport { AvatarStylesProvider } from './avatar-context.mjs';\nimport { AvatarImage } from './avatar-image.mjs';\nimport { initials } from './avatar-name.mjs';\nimport { GenericAvatarIcon } from './generic-avatar-icon.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useMultiStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\nvar baseStyle = defineStyle({\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  textAlign: \"center\",\n  textTransform: \"uppercase\",\n  fontWeight: \"medium\",\n  position: \"relative\",\n  flexShrink: 0\n});\nvar Avatar = forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Avatar\", props);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoaded = _useState2[0],\n      setIsLoaded = _useState2[1];\n\n  var _omitThemingProps = omitThemingProps(props),\n      src = _omitThemingProps.src,\n      srcSet = _omitThemingProps.srcSet,\n      name = _omitThemingProps.name,\n      showBorder = _omitThemingProps.showBorder,\n      _omitThemingProps$bor = _omitThemingProps.borderRadius,\n      borderRadius = _omitThemingProps$bor === void 0 ? \"full\" : _omitThemingProps$bor,\n      onError = _omitThemingProps.onError,\n      onLoadProp = _omitThemingProps.onLoad,\n      _omitThemingProps$get = _omitThemingProps.getInitials,\n      getInitials = _omitThemingProps$get === void 0 ? initials : _omitThemingProps$get,\n      _omitThemingProps$ico = _omitThemingProps.icon,\n      icon = _omitThemingProps$ico === void 0 ? /* @__PURE__ */jsx(GenericAvatarIcon, {}) : _omitThemingProps$ico,\n      _omitThemingProps$ico2 = _omitThemingProps.iconLabel,\n      iconLabel = _omitThemingProps$ico2 === void 0 ? \" avatar\" : _omitThemingProps$ico2,\n      loading = _omitThemingProps.loading,\n      children = _omitThemingProps.children,\n      borderColor = _omitThemingProps.borderColor,\n      ignoreFallback = _omitThemingProps.ignoreFallback,\n      crossOrigin = _omitThemingProps.crossOrigin,\n      referrerPolicy = _omitThemingProps.referrerPolicy,\n      rest = _objectWithoutProperties(_omitThemingProps, _excluded);\n\n  var avatarStyles = _objectSpread(_objectSpread({\n    borderRadius: borderRadius,\n    borderWidth: showBorder ? \"2px\" : void 0\n  }, baseStyle), styles.container);\n\n  if (borderColor) {\n    avatarStyles.borderColor = borderColor;\n  }\n\n  return /* @__PURE__ */jsx(chakra.span, _objectSpread(_objectSpread({\n    ref: ref\n  }, rest), {}, {\n    className: cx(\"chakra-avatar\", props.className),\n    \"data-loaded\": dataAttr(isLoaded),\n    __css: avatarStyles,\n    children: /* @__PURE__ */jsxs(AvatarStylesProvider, {\n      value: styles,\n      children: [/* @__PURE__ */jsx(AvatarImage, {\n        src: src,\n        srcSet: srcSet,\n        loading: loading,\n        onLoad: callAllHandlers(onLoadProp, function () {\n          setIsLoaded(true);\n        }),\n        onError: onError,\n        getInitials: getInitials,\n        name: name,\n        borderRadius: borderRadius,\n        icon: icon,\n        iconLabel: iconLabel,\n        ignoreFallback: ignoreFallback,\n        crossOrigin: crossOrigin,\n        referrerPolicy: referrerPolicy\n      }), children]\n    })\n  }));\n});\nAvatar.displayName = \"Avatar\";\nexport { Avatar, baseStyle };","map":{"version":3,"names":["jsx","jsxs","defineStyle","omitThemingProps","cx","dataAttr","callAllHandlers","useState","AvatarStylesProvider","AvatarImage","initials","GenericAvatarIcon","forwardRef","useMultiStyleConfig","chakra","baseStyle","display","alignItems","justifyContent","textAlign","textTransform","fontWeight","position","flexShrink","Avatar","props","ref","styles","isLoaded","setIsLoaded","src","srcSet","name","showBorder","borderRadius","onError","onLoadProp","onLoad","getInitials","icon","iconLabel","loading","children","borderColor","ignoreFallback","crossOrigin","referrerPolicy","rest","avatarStyles","borderWidth","container","span","className","__css","value","displayName"],"sources":["/workspaces/200508238/develop/node_modules/@chakra-ui/react/dist/esm/avatar/avatar.mjs"],"sourcesContent":["'use client';\nimport { jsx, jsxs } from 'react/jsx-runtime';\nimport { defineStyle, omitThemingProps } from '@chakra-ui/styled-system';\nimport { cx, dataAttr, callAllHandlers } from '@chakra-ui/utils';\nimport { useState } from 'react';\nimport { AvatarStylesProvider } from './avatar-context.mjs';\nimport { AvatarImage } from './avatar-image.mjs';\nimport { initials } from './avatar-name.mjs';\nimport { GenericAvatarIcon } from './generic-avatar-icon.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useMultiStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst baseStyle = defineStyle({\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  textAlign: \"center\",\n  textTransform: \"uppercase\",\n  fontWeight: \"medium\",\n  position: \"relative\",\n  flexShrink: 0\n});\nconst Avatar = forwardRef((props, ref) => {\n  const styles = useMultiStyleConfig(\"Avatar\", props);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const {\n    src,\n    srcSet,\n    name,\n    showBorder,\n    borderRadius = \"full\",\n    onError,\n    onLoad: onLoadProp,\n    getInitials = initials,\n    icon = /* @__PURE__ */ jsx(GenericAvatarIcon, {}),\n    iconLabel = \" avatar\",\n    loading,\n    children,\n    borderColor,\n    ignoreFallback,\n    crossOrigin,\n    referrerPolicy,\n    ...rest\n  } = omitThemingProps(props);\n  const avatarStyles = {\n    borderRadius,\n    borderWidth: showBorder ? \"2px\" : void 0,\n    ...baseStyle,\n    ...styles.container\n  };\n  if (borderColor) {\n    avatarStyles.borderColor = borderColor;\n  }\n  return /* @__PURE__ */ jsx(\n    chakra.span,\n    {\n      ref,\n      ...rest,\n      className: cx(\"chakra-avatar\", props.className),\n      \"data-loaded\": dataAttr(isLoaded),\n      __css: avatarStyles,\n      children: /* @__PURE__ */ jsxs(AvatarStylesProvider, { value: styles, children: [\n        /* @__PURE__ */ jsx(\n          AvatarImage,\n          {\n            src,\n            srcSet,\n            loading,\n            onLoad: callAllHandlers(onLoadProp, () => {\n              setIsLoaded(true);\n            }),\n            onError,\n            getInitials,\n            name,\n            borderRadius,\n            icon,\n            iconLabel,\n            ignoreFallback,\n            crossOrigin,\n            referrerPolicy\n          }\n        ),\n        children\n      ] })\n    }\n  );\n});\nAvatar.displayName = \"Avatar\";\n\nexport { Avatar, baseStyle };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}