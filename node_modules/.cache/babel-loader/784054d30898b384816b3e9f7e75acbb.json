{"ast":null,"code":"var _jsxFileName = \"/workspaces/200508238/develop/src/components/Bounce.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Bounce = () => {\n  _s();\n\n  const canvasRef = useRef(null);\n  const animationRef = useRef();\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n\n    if (!ctx) {\n      console.error(\"Canvas context not available\");\n      return;\n    } // Set canvas size to match the window\n\n\n    const setCanvasSize = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n      console.log(\"Canvas resized:\", canvas.width, canvas.height);\n    };\n\n    setCanvasSize();\n    const friction = 0.9;\n    const maxSpeed = 10; // Limit the maximum speed\n\n    const gravity = 0.5; // Set constant gravity\n\n    class Ball {\n      constructor(x, y, dx, dy, radius, color) {\n        this.x = x;\n        this.y = y;\n        this.dx = dx;\n        this.dy = dy;\n        this.radius = radius;\n        this.color = color;\n        this.bounces = 0; // Track the number of bounces\n\n        this.opacity = 1; // Full opacity initially\n      }\n\n      draw() {\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\n        ctx.fillStyle = `rgba(${this.color}, ${this.opacity})`; // Applying opacity to color\n\n        ctx.fill();\n        ctx.closePath();\n      }\n\n      update() {\n        if (this.y + this.radius + this.dy > canvas.height) {\n          this.dy = -this.dy * friction;\n          this.bounces += 1; // Count bounces\n        } else {\n          this.dy += gravity; // Apply constant gravity\n        }\n\n        if (this.x + this.radius > canvas.width || this.x - this.radius < 0) {\n          this.dx = -this.dx;\n        } // Limit the speed to prevent uncontrollable motion\n\n\n        if (Math.abs(this.dx) > maxSpeed) {\n          this.dx = maxSpeed * Math.sign(this.dx); // Limit horizontal speed\n        }\n\n        if (Math.abs(this.dy) > maxSpeed) {\n          this.dy = maxSpeed * Math.sign(this.dy); // Limit vertical speed\n        }\n\n        this.x += this.dx;\n        this.y += this.dy; // If the ball has bounced 5 times, start the \"poof\" animation\n\n        if (this.bounces >= 5 && this.opacity > 0) {\n          this.radius -= 0.1; // Shrink the ball\n\n          this.opacity -= 0.02; // Fade it out\n        }\n\n        if (this.opacity > 0) {\n          this.draw();\n        }\n      }\n\n    }\n\n    let balls = [];\n\n    const init = () => {\n      balls = [];\n\n      for (let i = 0; i < 40; i++) {\n        const radius = Math.random() * 15 + 10;\n        const x = Math.random() * (canvas.width - radius * 2) + radius;\n        const y = Math.random() * (canvas.height - radius * 2);\n        const dx = (Math.random() - 0.5) * 4;\n        const dy = (Math.random() - 0.5) * 4; // Generate random color values (HSL to RGB)\n\n        const h = Math.random() * 360; // Random hue\n\n        const s = 70; // Saturation fixed at 70%\n\n        const l = 60; // Lightness fixed at 60%\n        // Convert HSL to RGB for the ball color\n\n        const rgb = hslToRgb(h, s, l);\n        const color = `${rgb.r}, ${rgb.g}, ${rgb.b}`; // RGB string format without alpha\n\n        balls.push(new Ball(x, y, dx, dy, radius, color));\n      }\n\n      console.log(\"Initialized balls:\", balls.length);\n    };\n\n    const animate = () => {\n      animationRef.current = requestAnimationFrame(animate);\n      ctx.clearRect(0, 0, canvas.width, canvas.height); // Update each ball and remove any that are completely faded\n\n      balls = balls.filter(ball => ball.opacity > 0);\n      balls.forEach(ball => ball.update());\n    };\n\n    const handleResize = () => {\n      setCanvasSize();\n      init();\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n\n    const handleScroll = () => {\n      if (window.scrollY === 0) {\n        // Reset the animation if the user scrolls to the top\n        console.log(\"Scrolled to the top, resetting the animation.\");\n        const friction = 0.9;\n        const maxSpeed = 10; // Limit the maximum speed\n\n        const gravity = 0.5; // Set constant gravity\n\n        init(); // Reinitialize the balls\n\n        animate(); // Restart animation\n      }\n    }; // Listen for the scroll event\n\n\n    window.addEventListener(\"scroll\", handleScroll);\n    init();\n    animate();\n    return () => {\n      cancelAnimationFrame(animationRef.current);\n      window.removeEventListener(\"resize\", handleResize);\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, []); // Helper function to convert HSL to RGB\n\n  const hslToRgb = (h, s, l) => {\n    s /= 100;\n    l /= 100;\n    const c = (1 - Math.abs(2 * l - 1)) * s;\n    const x = c * (1 - Math.abs(h / 60 % 2 - 1));\n    const m = l - c / 2;\n    let r = 0,\n        g = 0,\n        b = 0;\n\n    if (h >= 0 && h < 60) {\n      r = c;\n      g = x;\n      b = 0;\n    } else if (h >= 60 && h < 120) {\n      r = x;\n      g = c;\n      b = 0;\n    } else if (h >= 120 && h < 180) {\n      r = 0;\n      g = c;\n      b = x;\n    } else if (h >= 180 && h < 240) {\n      r = 0;\n      g = x;\n      b = c;\n    } else if (h >= 240 && h < 300) {\n      r = x;\n      g = 0;\n      b = c;\n    } else {\n      r = c;\n      g = 0;\n      b = x;\n    }\n\n    r = Math.round((r + m) * 255);\n    g = Math.round((g + m) * 255);\n    b = Math.round((b + m) * 255);\n    return {\n      r,\n      g,\n      b\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      zIndex: 0,\n      width: \"100vw\",\n      height: \"100vh\",\n      display: \"block\",\n      background: \"transparent\",\n      border: \"2px solid red\" // For debugging visibility\n\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Bounce, \"X5bd7Q1XXg1keIMflMhOltk4wyU=\");\n\n_c = Bounce;\nexport default Bounce;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bounce\");","map":{"version":3,"names":["useEffect","useRef","Bounce","canvasRef","animationRef","canvas","current","ctx","getContext","console","error","setCanvasSize","width","window","innerWidth","height","innerHeight","log","friction","maxSpeed","gravity","Ball","constructor","x","y","dx","dy","radius","color","bounces","opacity","draw","beginPath","arc","Math","PI","fillStyle","fill","closePath","update","abs","sign","balls","init","i","random","h","s","l","rgb","hslToRgb","r","g","b","push","length","animate","requestAnimationFrame","clearRect","filter","ball","forEach","handleResize","addEventListener","handleScroll","scrollY","cancelAnimationFrame","removeEventListener","c","m","round","position","top","left","zIndex","display","background","border"],"sources":["/workspaces/200508238/develop/src/components/Bounce.js"],"sourcesContent":["import { useEffect, useRef } from \"react\";\n\nconst Bounce = () => {\n  const canvasRef = useRef(null);\n  const animationRef = useRef();\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n\n    if (!ctx) {\n      console.error(\"Canvas context not available\");\n      return;\n    }\n\n    // Set canvas size to match the window\n    const setCanvasSize = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n      console.log(\"Canvas resized:\", canvas.width, canvas.height);\n    };\n\n    setCanvasSize();\n\n    const friction = 0.9;\n    const maxSpeed = 10; // Limit the maximum speed\n    const gravity = 0.5; // Set constant gravity\n\n    class Ball {\n      constructor(x, y, dx, dy, radius, color) {\n        this.x = x;\n        this.y = y;\n        this.dx = dx;\n        this.dy = dy;\n        this.radius = radius;\n        this.color = color;\n        this.bounces = 0; // Track the number of bounces\n        this.opacity = 1; // Full opacity initially\n      }\n\n      draw() {\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\n        ctx.fillStyle = `rgba(${this.color}, ${this.opacity})`; // Applying opacity to color\n        ctx.fill();\n        ctx.closePath();\n      }\n\n      update() {\n        if (this.y + this.radius + this.dy > canvas.height) {\n          this.dy = -this.dy * friction;\n          this.bounces += 1; // Count bounces\n        } else {\n          this.dy += gravity; // Apply constant gravity\n        }\n\n        if (this.x + this.radius > canvas.width || this.x - this.radius < 0) {\n          this.dx = -this.dx;\n        }\n\n        // Limit the speed to prevent uncontrollable motion\n        if (Math.abs(this.dx) > maxSpeed) {\n          this.dx = maxSpeed * Math.sign(this.dx); // Limit horizontal speed\n        }\n        if (Math.abs(this.dy) > maxSpeed) {\n          this.dy = maxSpeed * Math.sign(this.dy); // Limit vertical speed\n        }\n\n        this.x += this.dx;\n        this.y += this.dy;\n\n        // If the ball has bounced 5 times, start the \"poof\" animation\n        if (this.bounces >= 5 && this.opacity > 0) {\n          this.radius -= 0.1; // Shrink the ball\n          this.opacity -= 0.02; // Fade it out\n        }\n\n        if (this.opacity > 0) {\n          this.draw();\n        }\n      }\n    }\n\n    let balls = [];\n\n    const init = () => {\n      balls = [];\n      for (let i = 0; i < 40; i++) {\n        const radius = Math.random() * 15 + 10;\n        const x = Math.random() * (canvas.width - radius * 2) + radius;\n        const y = Math.random() * (canvas.height - radius * 2);\n        const dx = (Math.random() - 0.5) * 4;\n        const dy = (Math.random() - 0.5) * 4;\n\n        // Generate random color values (HSL to RGB)\n        const h = Math.random() * 360; // Random hue\n        const s = 70; // Saturation fixed at 70%\n        const l = 60; // Lightness fixed at 60%\n\n        // Convert HSL to RGB for the ball color\n        const rgb = hslToRgb(h, s, l);\n        const color = `${rgb.r}, ${rgb.g}, ${rgb.b}`; // RGB string format without alpha\n\n        balls.push(new Ball(x, y, dx, dy, radius, color));\n      }\n      console.log(\"Initialized balls:\", balls.length);\n    };\n\n    const animate = () => {\n      animationRef.current = requestAnimationFrame(animate);\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Update each ball and remove any that are completely faded\n      balls = balls.filter(ball => ball.opacity > 0);\n      balls.forEach(ball => ball.update());\n    };\n\n    const handleResize = () => {\n      setCanvasSize();\n      init();\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n\n    const handleScroll = () => {\n      if (window.scrollY === 0) {\n        // Reset the animation if the user scrolls to the top\n        console.log(\"Scrolled to the top, resetting the animation.\");\n        const friction = 0.9;\n        const maxSpeed = 10; // Limit the maximum speed\n        const gravity = 0.5; // Set constant gravity\n        init();  // Reinitialize the balls\n        animate(); // Restart animation\n      }\n    };\n\n    // Listen for the scroll event\n    window.addEventListener(\"scroll\", handleScroll);\n\n    init();\n    animate();\n\n    return () => {\n      cancelAnimationFrame(animationRef.current);\n      window.removeEventListener(\"resize\", handleResize);\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n\n  }, []);\n\n  // Helper function to convert HSL to RGB\n  const hslToRgb = (h, s, l) => {\n    s /= 100;\n    l /= 100;\n\n    const c = (1 - Math.abs(2 * l - 1)) * s;\n    const x = c * (1 - Math.abs(((h / 60) % 2) - 1));\n    const m = l - c / 2;\n\n    let r = 0, g = 0, b = 0;\n\n    if (h >= 0 && h < 60) {\n      r = c; g = x; b = 0;\n    } else if (h >= 60 && h < 120) {\n      r = x; g = c; b = 0;\n    } else if (h >= 120 && h < 180) {\n      r = 0; g = c; b = x;\n    } else if (h >= 180 && h < 240) {\n      r = 0; g = x; b = c;\n    } else if (h >= 240 && h < 300) {\n      r = x; g = 0; b = c;\n    } else {\n      r = c; g = 0; b = x;\n    }\n\n    r = Math.round((r + m) * 255);\n    g = Math.round((g + m) * 255);\n    b = Math.round((b + m) * 255);\n\n    return { r, g, b };\n  };\n\n  return (\n    <canvas\n      ref={canvasRef}\n      style={{\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        zIndex: 0,\n        width: \"100vw\",\n        height: \"100vh\",\n        display: \"block\",\n        background: \"transparent\",\n        border: \"2px solid red\", // For debugging visibility\n      }}\n    />\n  );\n};\n\nexport default Bounce;\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;;;AAEA,MAAMC,MAAM,GAAG,MAAM;EAAA;;EACnB,MAAMC,SAAS,GAAGF,MAAM,CAAC,IAAD,CAAxB;EACA,MAAMG,YAAY,GAAGH,MAAM,EAA3B;EAEAD,SAAS,CAAC,MAAM;IACd,MAAMK,MAAM,GAAGF,SAAS,CAACG,OAAzB;IACA,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAZ;;IAEA,IAAI,CAACD,GAAL,EAAU;MACRE,OAAO,CAACC,KAAR,CAAc,8BAAd;MACA;IACD,CAPa,CASd;;;IACA,MAAMC,aAAa,GAAG,MAAM;MAC1BN,MAAM,CAACO,KAAP,GAAeC,MAAM,CAACC,UAAtB;MACAT,MAAM,CAACU,MAAP,GAAgBF,MAAM,CAACG,WAAvB;MACAP,OAAO,CAACQ,GAAR,CAAY,iBAAZ,EAA+BZ,MAAM,CAACO,KAAtC,EAA6CP,MAAM,CAACU,MAApD;IACD,CAJD;;IAMAJ,aAAa;IAEb,MAAMO,QAAQ,GAAG,GAAjB;IACA,MAAMC,QAAQ,GAAG,EAAjB,CAnBc,CAmBO;;IACrB,MAAMC,OAAO,GAAG,GAAhB,CApBc,CAoBO;;IAErB,MAAMC,IAAN,CAAW;MACTC,WAAW,CAACC,CAAD,EAAIC,CAAJ,EAAOC,EAAP,EAAWC,EAAX,EAAeC,MAAf,EAAuBC,KAAvB,EAA8B;QACvC,KAAKL,CAAL,GAASA,CAAT;QACA,KAAKC,CAAL,GAASA,CAAT;QACA,KAAKC,EAAL,GAAUA,EAAV;QACA,KAAKC,EAAL,GAAUA,EAAV;QACA,KAAKC,MAAL,GAAcA,MAAd;QACA,KAAKC,KAAL,GAAaA,KAAb;QACA,KAAKC,OAAL,GAAe,CAAf,CAPuC,CAOrB;;QAClB,KAAKC,OAAL,GAAe,CAAf,CARuC,CAQrB;MACnB;;MAEDC,IAAI,GAAG;QACLxB,GAAG,CAACyB,SAAJ;QACAzB,GAAG,CAAC0B,GAAJ,CAAQ,KAAKV,CAAb,EAAgB,KAAKC,CAArB,EAAwB,KAAKG,MAA7B,EAAqC,CAArC,EAAwCO,IAAI,CAACC,EAAL,GAAU,CAAlD,EAAqD,KAArD;QACA5B,GAAG,CAAC6B,SAAJ,GAAiB,QAAO,KAAKR,KAAM,KAAI,KAAKE,OAAQ,GAApD,CAHK,CAGmD;;QACxDvB,GAAG,CAAC8B,IAAJ;QACA9B,GAAG,CAAC+B,SAAJ;MACD;;MAEDC,MAAM,GAAG;QACP,IAAI,KAAKf,CAAL,GAAS,KAAKG,MAAd,GAAuB,KAAKD,EAA5B,GAAiCrB,MAAM,CAACU,MAA5C,EAAoD;UAClD,KAAKW,EAAL,GAAU,CAAC,KAAKA,EAAN,GAAWR,QAArB;UACA,KAAKW,OAAL,IAAgB,CAAhB,CAFkD,CAE/B;QACpB,CAHD,MAGO;UACL,KAAKH,EAAL,IAAWN,OAAX,CADK,CACe;QACrB;;QAED,IAAI,KAAKG,CAAL,GAAS,KAAKI,MAAd,GAAuBtB,MAAM,CAACO,KAA9B,IAAuC,KAAKW,CAAL,GAAS,KAAKI,MAAd,GAAuB,CAAlE,EAAqE;UACnE,KAAKF,EAAL,GAAU,CAAC,KAAKA,EAAhB;QACD,CAVM,CAYP;;;QACA,IAAIS,IAAI,CAACM,GAAL,CAAS,KAAKf,EAAd,IAAoBN,QAAxB,EAAkC;UAChC,KAAKM,EAAL,GAAUN,QAAQ,GAAGe,IAAI,CAACO,IAAL,CAAU,KAAKhB,EAAf,CAArB,CADgC,CACS;QAC1C;;QACD,IAAIS,IAAI,CAACM,GAAL,CAAS,KAAKd,EAAd,IAAoBP,QAAxB,EAAkC;UAChC,KAAKO,EAAL,GAAUP,QAAQ,GAAGe,IAAI,CAACO,IAAL,CAAU,KAAKf,EAAf,CAArB,CADgC,CACS;QAC1C;;QAED,KAAKH,CAAL,IAAU,KAAKE,EAAf;QACA,KAAKD,CAAL,IAAU,KAAKE,EAAf,CArBO,CAuBP;;QACA,IAAI,KAAKG,OAAL,IAAgB,CAAhB,IAAqB,KAAKC,OAAL,GAAe,CAAxC,EAA2C;UACzC,KAAKH,MAAL,IAAe,GAAf,CADyC,CACrB;;UACpB,KAAKG,OAAL,IAAgB,IAAhB,CAFyC,CAEnB;QACvB;;QAED,IAAI,KAAKA,OAAL,GAAe,CAAnB,EAAsB;UACpB,KAAKC,IAAL;QACD;MACF;;IApDQ;;IAuDX,IAAIW,KAAK,GAAG,EAAZ;;IAEA,MAAMC,IAAI,GAAG,MAAM;MACjBD,KAAK,GAAG,EAAR;;MACA,KAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;QAC3B,MAAMjB,MAAM,GAAGO,IAAI,CAACW,MAAL,KAAgB,EAAhB,GAAqB,EAApC;QACA,MAAMtB,CAAC,GAAGW,IAAI,CAACW,MAAL,MAAiBxC,MAAM,CAACO,KAAP,GAAee,MAAM,GAAG,CAAzC,IAA8CA,MAAxD;QACA,MAAMH,CAAC,GAAGU,IAAI,CAACW,MAAL,MAAiBxC,MAAM,CAACU,MAAP,GAAgBY,MAAM,GAAG,CAA1C,CAAV;QACA,MAAMF,EAAE,GAAG,CAACS,IAAI,CAACW,MAAL,KAAgB,GAAjB,IAAwB,CAAnC;QACA,MAAMnB,EAAE,GAAG,CAACQ,IAAI,CAACW,MAAL,KAAgB,GAAjB,IAAwB,CAAnC,CAL2B,CAO3B;;QACA,MAAMC,CAAC,GAAGZ,IAAI,CAACW,MAAL,KAAgB,GAA1B,CAR2B,CAQI;;QAC/B,MAAME,CAAC,GAAG,EAAV,CAT2B,CASb;;QACd,MAAMC,CAAC,GAAG,EAAV,CAV2B,CAUb;QAEd;;QACA,MAAMC,GAAG,GAAGC,QAAQ,CAACJ,CAAD,EAAIC,CAAJ,EAAOC,CAAP,CAApB;QACA,MAAMpB,KAAK,GAAI,GAAEqB,GAAG,CAACE,CAAE,KAAIF,GAAG,CAACG,CAAE,KAAIH,GAAG,CAACI,CAAE,EAA3C,CAd2B,CAcmB;;QAE9CX,KAAK,CAACY,IAAN,CAAW,IAAIjC,IAAJ,CAASE,CAAT,EAAYC,CAAZ,EAAeC,EAAf,EAAmBC,EAAnB,EAAuBC,MAAvB,EAA+BC,KAA/B,CAAX;MACD;;MACDnB,OAAO,CAACQ,GAAR,CAAY,oBAAZ,EAAkCyB,KAAK,CAACa,MAAxC;IACD,CArBD;;IAuBA,MAAMC,OAAO,GAAG,MAAM;MACpBpD,YAAY,CAACE,OAAb,GAAuBmD,qBAAqB,CAACD,OAAD,CAA5C;MACAjD,GAAG,CAACmD,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoBrD,MAAM,CAACO,KAA3B,EAAkCP,MAAM,CAACU,MAAzC,EAFoB,CAIpB;;MACA2B,KAAK,GAAGA,KAAK,CAACiB,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAAC9B,OAAL,GAAe,CAApC,CAAR;MACAY,KAAK,CAACmB,OAAN,CAAcD,IAAI,IAAIA,IAAI,CAACrB,MAAL,EAAtB;IACD,CAPD;;IASA,MAAMuB,YAAY,GAAG,MAAM;MACzBnD,aAAa;MACbgC,IAAI;IACL,CAHD;;IAKA9B,MAAM,CAACkD,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC;;IAEA,MAAME,YAAY,GAAG,MAAM;MACzB,IAAInD,MAAM,CAACoD,OAAP,KAAmB,CAAvB,EAA0B;QACxB;QACAxD,OAAO,CAACQ,GAAR,CAAY,+CAAZ;QACA,MAAMC,QAAQ,GAAG,GAAjB;QACA,MAAMC,QAAQ,GAAG,EAAjB,CAJwB,CAIH;;QACrB,MAAMC,OAAO,GAAG,GAAhB,CALwB,CAKH;;QACrBuB,IAAI,GANoB,CAMf;;QACTa,OAAO,GAPiB,CAOb;MACZ;IACF,CAVD,CAtHc,CAkId;;;IACA3C,MAAM,CAACkD,gBAAP,CAAwB,QAAxB,EAAkCC,YAAlC;IAEArB,IAAI;IACJa,OAAO;IAEP,OAAO,MAAM;MACXU,oBAAoB,CAAC9D,YAAY,CAACE,OAAd,CAApB;MACAO,MAAM,CAACsD,mBAAP,CAA2B,QAA3B,EAAqCL,YAArC;MACAjD,MAAM,CAACsD,mBAAP,CAA2B,QAA3B,EAAqCH,YAArC;IACD,CAJD;EAMD,CA9IQ,EA8IN,EA9IM,CAAT,CAJmB,CAoJnB;;EACA,MAAMd,QAAQ,GAAG,CAACJ,CAAD,EAAIC,CAAJ,EAAOC,CAAP,KAAa;IAC5BD,CAAC,IAAI,GAAL;IACAC,CAAC,IAAI,GAAL;IAEA,MAAMoB,CAAC,GAAG,CAAC,IAAIlC,IAAI,CAACM,GAAL,CAAS,IAAIQ,CAAJ,GAAQ,CAAjB,CAAL,IAA4BD,CAAtC;IACA,MAAMxB,CAAC,GAAG6C,CAAC,IAAI,IAAIlC,IAAI,CAACM,GAAL,CAAWM,CAAC,GAAG,EAAL,GAAW,CAAZ,GAAiB,CAA1B,CAAR,CAAX;IACA,MAAMuB,CAAC,GAAGrB,CAAC,GAAGoB,CAAC,GAAG,CAAlB;IAEA,IAAIjB,CAAC,GAAG,CAAR;IAAA,IAAWC,CAAC,GAAG,CAAf;IAAA,IAAkBC,CAAC,GAAG,CAAtB;;IAEA,IAAIP,CAAC,IAAI,CAAL,IAAUA,CAAC,GAAG,EAAlB,EAAsB;MACpBK,CAAC,GAAGiB,CAAJ;MAAOhB,CAAC,GAAG7B,CAAJ;MAAO8B,CAAC,GAAG,CAAJ;IACf,CAFD,MAEO,IAAIP,CAAC,IAAI,EAAL,IAAWA,CAAC,GAAG,GAAnB,EAAwB;MAC7BK,CAAC,GAAG5B,CAAJ;MAAO6B,CAAC,GAAGgB,CAAJ;MAAOf,CAAC,GAAG,CAAJ;IACf,CAFM,MAEA,IAAIP,CAAC,IAAI,GAAL,IAAYA,CAAC,GAAG,GAApB,EAAyB;MAC9BK,CAAC,GAAG,CAAJ;MAAOC,CAAC,GAAGgB,CAAJ;MAAOf,CAAC,GAAG9B,CAAJ;IACf,CAFM,MAEA,IAAIuB,CAAC,IAAI,GAAL,IAAYA,CAAC,GAAG,GAApB,EAAyB;MAC9BK,CAAC,GAAG,CAAJ;MAAOC,CAAC,GAAG7B,CAAJ;MAAO8B,CAAC,GAAGe,CAAJ;IACf,CAFM,MAEA,IAAItB,CAAC,IAAI,GAAL,IAAYA,CAAC,GAAG,GAApB,EAAyB;MAC9BK,CAAC,GAAG5B,CAAJ;MAAO6B,CAAC,GAAG,CAAJ;MAAOC,CAAC,GAAGe,CAAJ;IACf,CAFM,MAEA;MACLjB,CAAC,GAAGiB,CAAJ;MAAOhB,CAAC,GAAG,CAAJ;MAAOC,CAAC,GAAG9B,CAAJ;IACf;;IAED4B,CAAC,GAAGjB,IAAI,CAACoC,KAAL,CAAW,CAACnB,CAAC,GAAGkB,CAAL,IAAU,GAArB,CAAJ;IACAjB,CAAC,GAAGlB,IAAI,CAACoC,KAAL,CAAW,CAAClB,CAAC,GAAGiB,CAAL,IAAU,GAArB,CAAJ;IACAhB,CAAC,GAAGnB,IAAI,CAACoC,KAAL,CAAW,CAACjB,CAAC,GAAGgB,CAAL,IAAU,GAArB,CAAJ;IAEA,OAAO;MAAElB,CAAF;MAAKC,CAAL;MAAQC;IAAR,CAAP;EACD,CA7BD;;EA+BA,oBACE;IACE,GAAG,EAAElD,SADP;IAEE,KAAK,EAAE;MACLoE,QAAQ,EAAE,UADL;MAELC,GAAG,EAAE,CAFA;MAGLC,IAAI,EAAE,CAHD;MAILC,MAAM,EAAE,CAJH;MAKL9D,KAAK,EAAE,OALF;MAMLG,MAAM,EAAE,OANH;MAOL4D,OAAO,EAAE,OAPJ;MAQLC,UAAU,EAAE,aARP;MASLC,MAAM,EAAE,eATH,CASoB;;IATpB;EAFT;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD,CApMD;;GAAM3E,M;;KAAAA,M;AAsMN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}