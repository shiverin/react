{"ast":null,"code":"import _slicedToArray from \"/workspaces/200508238/develop/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"/workspaces/200508238/develop/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\n\nfunction replaceWhiteSpace(value) {\n  var replaceValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"-\";\n  return value.replace(/\\s+/g, replaceValue);\n}\n\nfunction escape(value) {\n  var valueStr = replaceWhiteSpace(value.toString());\n  return escapeSymbol(escapeDot(valueStr));\n}\n\nfunction escapeDot(value) {\n  if (value.includes(\"\\\\.\")) return value;\n  var isDecimal = !Number.isInteger(parseFloat(value.toString()));\n  return isDecimal ? value.replace(\".\", \"\\\\.\") : value;\n}\n\nfunction escapeSymbol(value) {\n  return value.replace(/[!-,/:-@[-^`{-~]/g, \"\\\\$&\");\n}\n\nfunction addPrefix(value) {\n  var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  return [prefix, value].filter(Boolean).join(\"-\");\n}\n\nfunction toVarReference(name, fallback) {\n  return \"var(\".concat(name).concat(fallback ? \", \".concat(fallback) : \"\", \")\");\n}\n\nfunction toVarDefinition(value) {\n  var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  return escape(\"--\".concat(addPrefix(value, prefix)));\n}\n\nfunction cssVar(name, fallback, cssVarPrefix) {\n  var cssVariable = toVarDefinition(name, cssVarPrefix);\n  return {\n    variable: cssVariable,\n    reference: toVarReference(cssVariable, fallback)\n  };\n}\n\nfunction defineCssVars(scope, keys) {\n  var vars = {};\n\n  var _iterator = _createForOfIteratorHelper(keys),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var key = _step.value;\n\n      if (Array.isArray(key)) {\n        var _key = _slicedToArray(key, 2),\n            name = _key[0],\n            fallback = _key[1];\n\n        vars[name] = cssVar(\"\".concat(scope, \"-\").concat(name), fallback);\n        continue;\n      }\n\n      vars[key] = cssVar(\"\".concat(scope, \"-\").concat(key));\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return vars;\n}\n\nexport { addPrefix, cssVar, defineCssVars, toVarDefinition, toVarReference };","map":{"version":3,"names":["replaceWhiteSpace","value","replaceValue","replace","escape","valueStr","toString","escapeSymbol","escapeDot","includes","isDecimal","Number","isInteger","parseFloat","addPrefix","prefix","filter","Boolean","join","toVarReference","name","fallback","toVarDefinition","cssVar","cssVarPrefix","cssVariable","variable","reference","defineCssVars","scope","keys","vars","key","Array","isArray"],"sources":["/workspaces/200508238/develop/node_modules/@chakra-ui/react/node_modules/@chakra-ui/styled-system/dist/esm/create-theme-vars/css-var.mjs"],"sourcesContent":["function replaceWhiteSpace(value, replaceValue = \"-\") {\n  return value.replace(/\\s+/g, replaceValue);\n}\nfunction escape(value) {\n  const valueStr = replaceWhiteSpace(value.toString());\n  return escapeSymbol(escapeDot(valueStr));\n}\nfunction escapeDot(value) {\n  if (value.includes(\"\\\\.\"))\n    return value;\n  const isDecimal = !Number.isInteger(parseFloat(value.toString()));\n  return isDecimal ? value.replace(\".\", `\\\\.`) : value;\n}\nfunction escapeSymbol(value) {\n  return value.replace(/[!-,/:-@[-^`{-~]/g, \"\\\\$&\");\n}\nfunction addPrefix(value, prefix = \"\") {\n  return [prefix, value].filter(Boolean).join(\"-\");\n}\nfunction toVarReference(name, fallback) {\n  return `var(${name}${fallback ? `, ${fallback}` : \"\"})`;\n}\nfunction toVarDefinition(value, prefix = \"\") {\n  return escape(`--${addPrefix(value, prefix)}`);\n}\nfunction cssVar(name, fallback, cssVarPrefix) {\n  const cssVariable = toVarDefinition(name, cssVarPrefix);\n  return {\n    variable: cssVariable,\n    reference: toVarReference(cssVariable, fallback)\n  };\n}\nfunction defineCssVars(scope, keys) {\n  const vars = {};\n  for (const key of keys) {\n    if (Array.isArray(key)) {\n      const [name, fallback] = key;\n      vars[name] = cssVar(`${scope}-${name}`, fallback);\n      continue;\n    }\n    vars[key] = cssVar(`${scope}-${key}`);\n  }\n  return vars;\n}\n\nexport { addPrefix, cssVar, defineCssVars, toVarDefinition, toVarReference };\n"],"mappings":";;;AAAA,SAASA,iBAAT,CAA2BC,KAA3B,EAAsD;EAAA,IAApBC,YAAoB,uEAAL,GAAK;EACpD,OAAOD,KAAK,CAACE,OAAN,CAAc,MAAd,EAAsBD,YAAtB,CAAP;AACD;;AACD,SAASE,MAAT,CAAgBH,KAAhB,EAAuB;EACrB,IAAMI,QAAQ,GAAGL,iBAAiB,CAACC,KAAK,CAACK,QAAN,EAAD,CAAlC;EACA,OAAOC,YAAY,CAACC,SAAS,CAACH,QAAD,CAAV,CAAnB;AACD;;AACD,SAASG,SAAT,CAAmBP,KAAnB,EAA0B;EACxB,IAAIA,KAAK,CAACQ,QAAN,CAAe,KAAf,CAAJ,EACE,OAAOR,KAAP;EACF,IAAMS,SAAS,GAAG,CAACC,MAAM,CAACC,SAAP,CAAiBC,UAAU,CAACZ,KAAK,CAACK,QAAN,EAAD,CAA3B,CAAnB;EACA,OAAOI,SAAS,GAAGT,KAAK,CAACE,OAAN,CAAc,GAAd,QAAH,GAA+BF,KAA/C;AACD;;AACD,SAASM,YAAT,CAAsBN,KAAtB,EAA6B;EAC3B,OAAOA,KAAK,CAACE,OAAN,CAAc,mBAAd,EAAmC,MAAnC,CAAP;AACD;;AACD,SAASW,SAAT,CAAmBb,KAAnB,EAAuC;EAAA,IAAbc,MAAa,uEAAJ,EAAI;EACrC,OAAO,CAACA,MAAD,EAASd,KAAT,EAAgBe,MAAhB,CAAuBC,OAAvB,EAAgCC,IAAhC,CAAqC,GAArC,CAAP;AACD;;AACD,SAASC,cAAT,CAAwBC,IAAxB,EAA8BC,QAA9B,EAAwC;EACtC,qBAAcD,IAAd,SAAqBC,QAAQ,eAAQA,QAAR,IAAqB,EAAlD;AACD;;AACD,SAASC,eAAT,CAAyBrB,KAAzB,EAA6C;EAAA,IAAbc,MAAa,uEAAJ,EAAI;EAC3C,OAAOX,MAAM,aAAMU,SAAS,CAACb,KAAD,EAAQc,MAAR,CAAf,EAAb;AACD;;AACD,SAASQ,MAAT,CAAgBH,IAAhB,EAAsBC,QAAtB,EAAgCG,YAAhC,EAA8C;EAC5C,IAAMC,WAAW,GAAGH,eAAe,CAACF,IAAD,EAAOI,YAAP,CAAnC;EACA,OAAO;IACLE,QAAQ,EAAED,WADL;IAELE,SAAS,EAAER,cAAc,CAACM,WAAD,EAAcJ,QAAd;EAFpB,CAAP;AAID;;AACD,SAASO,aAAT,CAAuBC,KAAvB,EAA8BC,IAA9B,EAAoC;EAClC,IAAMC,IAAI,GAAG,EAAb;;EADkC,2CAEhBD,IAFgB;EAAA;;EAAA;IAElC,oDAAwB;MAAA,IAAbE,GAAa;;MACtB,IAAIC,KAAK,CAACC,OAAN,CAAcF,GAAd,CAAJ,EAAwB;QACtB,0BAAyBA,GAAzB;QAAA,IAAOZ,IAAP;QAAA,IAAaC,QAAb;;QACAU,IAAI,CAACX,IAAD,CAAJ,GAAaG,MAAM,WAAIM,KAAJ,cAAaT,IAAb,GAAqBC,QAArB,CAAnB;QACA;MACD;;MACDU,IAAI,CAACC,GAAD,CAAJ,GAAYT,MAAM,WAAIM,KAAJ,cAAaG,GAAb,EAAlB;IACD;EATiC;IAAA;EAAA;IAAA;EAAA;;EAUlC,OAAOD,IAAP;AACD;;AAED,SAASjB,SAAT,EAAoBS,MAApB,EAA4BK,aAA5B,EAA2CN,eAA3C,EAA4DH,cAA5D"},"metadata":{},"sourceType":"module"}