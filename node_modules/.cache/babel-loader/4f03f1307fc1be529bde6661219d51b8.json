{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { omit } from '@chakra-ui/utils';\nimport { NativeImage } from './native-image.mjs';\nimport { useImage, shouldShowFallbackImage } from './use-image.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\nconst Image = forwardRef(function Image2(props, ref) {\n  const {\n    fallbackSrc,\n    fallback,\n    src,\n    srcSet,\n    align,\n    fit,\n    loading,\n    ignoreFallback,\n    crossOrigin,\n    fallbackStrategy = \"beforeLoadOrError\",\n    referrerPolicy,\n    ...rest\n  } = props;\n  const providedFallback = fallbackSrc !== void 0 || fallback !== void 0;\n  const shouldIgnoreFallbackImage = loading != null || // use can opt out of fallback image\n  ignoreFallback || // if the user doesn't provide any kind of fallback we should ignore it\n  !providedFallback;\n  const status = useImage({ ...props,\n    crossOrigin,\n    ignoreFallback: shouldIgnoreFallbackImage\n  });\n  const showFallbackImage = shouldShowFallbackImage(status, fallbackStrategy);\n  const shared = {\n    ref,\n    objectFit: fit,\n    objectPosition: align,\n    ...(shouldIgnoreFallbackImage ? rest : omit(rest, [\"onError\", \"onLoad\"]))\n  };\n\n  if (showFallbackImage) {\n    if (fallback) return fallback;\n    return /* @__PURE__ */jsx(chakra.img, {\n      as: NativeImage,\n      className: \"chakra-image__placeholder\",\n      src: fallbackSrc,\n      ...shared\n    });\n  }\n\n  return /* @__PURE__ */jsx(chakra.img, {\n    as: NativeImage,\n    src,\n    srcSet,\n    crossOrigin,\n    loading,\n    referrerPolicy,\n    className: \"chakra-image\",\n    ...shared\n  });\n});\nImage.displayName = \"Image\";\nexport { Image };","map":{"version":3,"names":["jsx","omit","NativeImage","useImage","shouldShowFallbackImage","forwardRef","chakra","Image","Image2","props","ref","fallbackSrc","fallback","src","srcSet","align","fit","loading","ignoreFallback","crossOrigin","fallbackStrategy","referrerPolicy","rest","providedFallback","shouldIgnoreFallbackImage","status","showFallbackImage","shared","objectFit","objectPosition","img","as","className","displayName"],"sources":["/workspaces/200508238/develop/node_modules/@chakra-ui/react/dist/esm/image/image.mjs"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omit } from '@chakra-ui/utils';\nimport { NativeImage } from './native-image.mjs';\nimport { useImage, shouldShowFallbackImage } from './use-image.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Image = forwardRef(function Image2(props, ref) {\n  const {\n    fallbackSrc,\n    fallback,\n    src,\n    srcSet,\n    align,\n    fit,\n    loading,\n    ignoreFallback,\n    crossOrigin,\n    fallbackStrategy = \"beforeLoadOrError\",\n    referrerPolicy,\n    ...rest\n  } = props;\n  const providedFallback = fallbackSrc !== void 0 || fallback !== void 0;\n  const shouldIgnoreFallbackImage = loading != null || // use can opt out of fallback image\n  ignoreFallback || // if the user doesn't provide any kind of fallback we should ignore it\n  !providedFallback;\n  const status = useImage({\n    ...props,\n    crossOrigin,\n    ignoreFallback: shouldIgnoreFallbackImage\n  });\n  const showFallbackImage = shouldShowFallbackImage(status, fallbackStrategy);\n  const shared = {\n    ref,\n    objectFit: fit,\n    objectPosition: align,\n    ...shouldIgnoreFallbackImage ? rest : omit(rest, [\"onError\", \"onLoad\"])\n  };\n  if (showFallbackImage) {\n    if (fallback)\n      return fallback;\n    return /* @__PURE__ */ jsx(\n      chakra.img,\n      {\n        as: NativeImage,\n        className: \"chakra-image__placeholder\",\n        src: fallbackSrc,\n        ...shared\n      }\n    );\n  }\n  return /* @__PURE__ */ jsx(\n    chakra.img,\n    {\n      as: NativeImage,\n      src,\n      srcSet,\n      crossOrigin,\n      loading,\n      referrerPolicy,\n      className: \"chakra-image\",\n      ...shared\n    }\n  );\n});\nImage.displayName = \"Image\";\n\nexport { Image };\n"],"mappings":"AAAA;;AACA,SAASA,GAAT,QAAoB,mBAApB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,QAAT,EAAmBC,uBAAnB,QAAkD,iBAAlD;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,SAASC,MAAT,QAAuB,uBAAvB;AAEA,MAAMC,KAAK,GAAGF,UAAU,CAAC,SAASG,MAAT,CAAgBC,KAAhB,EAAuBC,GAAvB,EAA4B;EACnD,MAAM;IACJC,WADI;IAEJC,QAFI;IAGJC,GAHI;IAIJC,MAJI;IAKJC,KALI;IAMJC,GANI;IAOJC,OAPI;IAQJC,cARI;IASJC,WATI;IAUJC,gBAAgB,GAAG,mBAVf;IAWJC,cAXI;IAYJ,GAAGC;EAZC,IAaFb,KAbJ;EAcA,MAAMc,gBAAgB,GAAGZ,WAAW,KAAK,KAAK,CAArB,IAA0BC,QAAQ,KAAK,KAAK,CAArE;EACA,MAAMY,yBAAyB,GAAGP,OAAO,IAAI,IAAX,IAAmB;EACrDC,cADkC,IAChB;EAClB,CAACK,gBAFD;EAGA,MAAME,MAAM,GAAGtB,QAAQ,CAAC,EACtB,GAAGM,KADmB;IAEtBU,WAFsB;IAGtBD,cAAc,EAAEM;EAHM,CAAD,CAAvB;EAKA,MAAME,iBAAiB,GAAGtB,uBAAuB,CAACqB,MAAD,EAASL,gBAAT,CAAjD;EACA,MAAMO,MAAM,GAAG;IACbjB,GADa;IAEbkB,SAAS,EAAEZ,GAFE;IAGba,cAAc,EAAEd,KAHH;IAIb,IAAGS,yBAAyB,GAAGF,IAAH,GAAUrB,IAAI,CAACqB,IAAD,EAAO,CAAC,SAAD,EAAY,QAAZ,CAAP,CAA1C;EAJa,CAAf;;EAMA,IAAII,iBAAJ,EAAuB;IACrB,IAAId,QAAJ,EACE,OAAOA,QAAP;IACF,OAAO,eAAgBZ,GAAG,CACxBM,MAAM,CAACwB,GADiB,EAExB;MACEC,EAAE,EAAE7B,WADN;MAEE8B,SAAS,EAAE,2BAFb;MAGEnB,GAAG,EAAEF,WAHP;MAIE,GAAGgB;IAJL,CAFwB,CAA1B;EASD;;EACD,OAAO,eAAgB3B,GAAG,CACxBM,MAAM,CAACwB,GADiB,EAExB;IACEC,EAAE,EAAE7B,WADN;IAEEW,GAFF;IAGEC,MAHF;IAIEK,WAJF;IAKEF,OALF;IAMEI,cANF;IAOEW,SAAS,EAAE,cAPb;IAQE,GAAGL;EARL,CAFwB,CAA1B;AAaD,CAzDuB,CAAxB;AA0DApB,KAAK,CAAC0B,WAAN,GAAoB,OAApB;AAEA,SAAS1B,KAAT"},"metadata":{},"sourceType":"module"}