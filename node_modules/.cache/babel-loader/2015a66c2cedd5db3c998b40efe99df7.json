{"ast":null,"code":"import { isObject } from '@chakra-ui/utils';\n\nconst isImportant = value => /!(important)?$/.test(value);\n\nconst withoutImportant = value => typeof value === \"string\" ? value.replace(/!(important)?$/, \"\").trim() : value;\n\nconst tokenToCSSVar = (scale, value) => theme => {\n  const valueStr = String(value);\n  const important = isImportant(valueStr);\n  const valueWithoutImportant = withoutImportant(valueStr);\n  const key = scale ? `${scale}.${valueWithoutImportant}` : valueWithoutImportant;\n  let transformed = isObject(theme.__cssMap) && key in theme.__cssMap ? theme.__cssMap[key].varRef : value;\n  transformed = withoutImportant(transformed);\n  return important ? `${transformed} !important` : transformed;\n};\n\nfunction createTransform(options) {\n  const {\n    scale,\n    transform,\n    compose\n  } = options;\n\n  const fn = (value, theme) => {\n    const _value = tokenToCSSVar(scale, value)(theme);\n\n    let result = (transform === null || transform === void 0 ? void 0 : transform(_value, theme)) ?? _value;\n\n    if (compose) {\n      result = compose(result, theme);\n    }\n\n    return result;\n  };\n\n  return fn;\n}\n\nexport { createTransform, tokenToCSSVar };","map":{"version":3,"names":["isObject","isImportant","value","test","withoutImportant","replace","trim","tokenToCSSVar","scale","theme","valueStr","String","important","valueWithoutImportant","key","transformed","__cssMap","varRef","createTransform","options","transform","compose","fn","_value","result"],"sources":["/workspaces/200508238/develop/node_modules/@chakra-ui/react/node_modules/@chakra-ui/styled-system/dist/esm/utils/create-transform.mjs"],"sourcesContent":["import { isObject } from '@chakra-ui/utils';\n\nconst isImportant = (value) => /!(important)?$/.test(value);\nconst withoutImportant = (value) => typeof value === \"string\" ? value.replace(/!(important)?$/, \"\").trim() : value;\nconst tokenToCSSVar = (scale, value) => (theme) => {\n  const valueStr = String(value);\n  const important = isImportant(valueStr);\n  const valueWithoutImportant = withoutImportant(valueStr);\n  const key = scale ? `${scale}.${valueWithoutImportant}` : valueWithoutImportant;\n  let transformed = isObject(theme.__cssMap) && key in theme.__cssMap ? theme.__cssMap[key].varRef : value;\n  transformed = withoutImportant(transformed);\n  return important ? `${transformed} !important` : transformed;\n};\nfunction createTransform(options) {\n  const { scale, transform, compose } = options;\n  const fn = (value, theme) => {\n    const _value = tokenToCSSVar(scale, value)(theme);\n    let result = transform?.(_value, theme) ?? _value;\n    if (compose) {\n      result = compose(result, theme);\n    }\n    return result;\n  };\n  return fn;\n}\n\nexport { createTransform, tokenToCSSVar };\n"],"mappings":"AAAA,SAASA,QAAT,QAAyB,kBAAzB;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW,iBAAiBC,IAAjB,CAAsBD,KAAtB,CAA/B;;AACA,MAAME,gBAAgB,GAAIF,KAAD,IAAW,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAAK,CAACG,OAAN,CAAc,gBAAd,EAAgC,EAAhC,EAAoCC,IAApC,EAA5B,GAAyEJ,KAA7G;;AACA,MAAMK,aAAa,GAAG,CAACC,KAAD,EAAQN,KAAR,KAAmBO,KAAD,IAAW;EACjD,MAAMC,QAAQ,GAAGC,MAAM,CAACT,KAAD,CAAvB;EACA,MAAMU,SAAS,GAAGX,WAAW,CAACS,QAAD,CAA7B;EACA,MAAMG,qBAAqB,GAAGT,gBAAgB,CAACM,QAAD,CAA9C;EACA,MAAMI,GAAG,GAAGN,KAAK,GAAI,GAAEA,KAAM,IAAGK,qBAAsB,EAArC,GAAyCA,qBAA1D;EACA,IAAIE,WAAW,GAAGf,QAAQ,CAACS,KAAK,CAACO,QAAP,CAAR,IAA4BF,GAAG,IAAIL,KAAK,CAACO,QAAzC,GAAoDP,KAAK,CAACO,QAAN,CAAeF,GAAf,EAAoBG,MAAxE,GAAiFf,KAAnG;EACAa,WAAW,GAAGX,gBAAgB,CAACW,WAAD,CAA9B;EACA,OAAOH,SAAS,GAAI,GAAEG,WAAY,aAAlB,GAAiCA,WAAjD;AACD,CARD;;AASA,SAASG,eAAT,CAAyBC,OAAzB,EAAkC;EAChC,MAAM;IAAEX,KAAF;IAASY,SAAT;IAAoBC;EAApB,IAAgCF,OAAtC;;EACA,MAAMG,EAAE,GAAG,CAACpB,KAAD,EAAQO,KAAR,KAAkB;IAC3B,MAAMc,MAAM,GAAGhB,aAAa,CAACC,KAAD,EAAQN,KAAR,CAAb,CAA4BO,KAA5B,CAAf;;IACA,IAAIe,MAAM,GAAG,CAAAJ,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAGG,MAAH,EAAWd,KAAX,CAAT,KAA8Bc,MAA3C;;IACA,IAAIF,OAAJ,EAAa;MACXG,MAAM,GAAGH,OAAO,CAACG,MAAD,EAASf,KAAT,CAAhB;IACD;;IACD,OAAOe,MAAP;EACD,CAPD;;EAQA,OAAOF,EAAP;AACD;;AAED,SAASJ,eAAT,EAA0BX,aAA1B"},"metadata":{},"sourceType":"module"}