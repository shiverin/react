{"ast":null,"code":"import { avatarAnatomy } from '@chakra-ui/anatomy';\nimport { createMultiStyleConfigHelpers, cssVar, defineStyle } from '@chakra-ui/styled-system';\nimport { randomColor, isDark } from '@chakra-ui/theme-tools';\nimport sizes$1 from '../foundations/sizes.mjs';\nimport { runIfFn } from '../utils/run-if-fn.mjs';\nconst {\n  definePartsStyle,\n  defineMultiStyleConfig\n} = createMultiStyleConfigHelpers(avatarAnatomy.keys);\nconst $border = cssVar(\"avatar-border-color\");\nconst $bg = cssVar(\"avatar-bg\");\nconst $fs = cssVar(\"avatar-font-size\");\nconst $size = cssVar(\"avatar-size\");\nconst baseStyleBadge = defineStyle({\n  borderRadius: \"full\",\n  border: \"0.2em solid\",\n  borderColor: $border.reference,\n  [$border.variable]: \"white\",\n  _dark: {\n    [$border.variable]: \"colors.gray.800\"\n  }\n});\nconst baseStyleExcessLabel = defineStyle({\n  bg: $bg.reference,\n  fontSize: $fs.reference,\n  width: $size.reference,\n  height: $size.reference,\n  lineHeight: \"1\",\n  [$bg.variable]: \"colors.gray.200\",\n  _dark: {\n    [$bg.variable]: \"colors.whiteAlpha.400\"\n  }\n});\nconst baseStyleContainer = defineStyle(props => {\n  const {\n    name,\n    theme\n  } = props;\n  const bg = name ? randomColor({\n    string: name\n  }) : \"colors.gray.400\";\n  const isBgDark = isDark(bg)(theme);\n  let color = \"white\";\n  if (!isBgDark) color = \"gray.800\";\n  return {\n    bg: $bg.reference,\n    fontSize: $fs.reference,\n    color,\n    borderColor: $border.reference,\n    verticalAlign: \"top\",\n    width: $size.reference,\n    height: $size.reference,\n    \"&:not([data-loaded])\": {\n      [$bg.variable]: bg\n    },\n    [$border.variable]: \"colors.white\",\n    _dark: {\n      [$border.variable]: \"colors.gray.800\"\n    }\n  };\n});\nconst baseStyleLabel = defineStyle({\n  fontSize: $fs.reference,\n  lineHeight: \"1\"\n});\nconst baseStyle = definePartsStyle(props => ({\n  badge: runIfFn(baseStyleBadge, props),\n  excessLabel: runIfFn(baseStyleExcessLabel, props),\n  container: runIfFn(baseStyleContainer, props),\n  label: baseStyleLabel\n}));\n\nfunction getSize(size) {\n  const themeSize = size !== \"100%\" ? sizes$1[size] : void 0;\n  return definePartsStyle({\n    container: {\n      [$size.variable]: themeSize ?? size,\n      [$fs.variable]: `calc(${themeSize ?? size} / 2.5)`\n    },\n    excessLabel: {\n      [$size.variable]: themeSize ?? size,\n      [$fs.variable]: `calc(${themeSize ?? size} / 2.5)`\n    }\n  });\n}\n\nconst sizes = {\n  \"2xs\": getSize(4),\n  xs: getSize(6),\n  sm: getSize(8),\n  md: getSize(12),\n  lg: getSize(16),\n  xl: getSize(24),\n  \"2xl\": getSize(32),\n  full: getSize(\"100%\")\n};\nconst avatarTheme = defineMultiStyleConfig({\n  baseStyle,\n  sizes,\n  defaultProps: {\n    size: \"md\"\n  }\n});\nexport { avatarTheme };","map":{"version":3,"names":["avatarAnatomy","createMultiStyleConfigHelpers","cssVar","defineStyle","randomColor","isDark","sizes$1","runIfFn","definePartsStyle","defineMultiStyleConfig","keys","$border","$bg","$fs","$size","baseStyleBadge","borderRadius","border","borderColor","reference","variable","_dark","baseStyleExcessLabel","bg","fontSize","width","height","lineHeight","baseStyleContainer","props","name","theme","string","isBgDark","color","verticalAlign","baseStyleLabel","baseStyle","badge","excessLabel","container","label","getSize","size","themeSize","sizes","xs","sm","md","lg","xl","full","avatarTheme","defaultProps"],"sources":["/workspaces/200508238/develop/node_modules/@chakra-ui/react/node_modules/@chakra-ui/theme/dist/esm/components/avatar.mjs"],"sourcesContent":["import { avatarAnatomy } from '@chakra-ui/anatomy';\nimport { createMultiStyleConfigHelpers, cssVar, defineStyle } from '@chakra-ui/styled-system';\nimport { randomColor, isDark } from '@chakra-ui/theme-tools';\nimport sizes$1 from '../foundations/sizes.mjs';\nimport { runIfFn } from '../utils/run-if-fn.mjs';\n\nconst { definePartsStyle, defineMultiStyleConfig } = createMultiStyleConfigHelpers(avatarAnatomy.keys);\nconst $border = cssVar(\"avatar-border-color\");\nconst $bg = cssVar(\"avatar-bg\");\nconst $fs = cssVar(\"avatar-font-size\");\nconst $size = cssVar(\"avatar-size\");\nconst baseStyleBadge = defineStyle({\n  borderRadius: \"full\",\n  border: \"0.2em solid\",\n  borderColor: $border.reference,\n  [$border.variable]: \"white\",\n  _dark: {\n    [$border.variable]: \"colors.gray.800\"\n  }\n});\nconst baseStyleExcessLabel = defineStyle({\n  bg: $bg.reference,\n  fontSize: $fs.reference,\n  width: $size.reference,\n  height: $size.reference,\n  lineHeight: \"1\",\n  [$bg.variable]: \"colors.gray.200\",\n  _dark: {\n    [$bg.variable]: \"colors.whiteAlpha.400\"\n  }\n});\nconst baseStyleContainer = defineStyle((props) => {\n  const { name, theme } = props;\n  const bg = name ? randomColor({ string: name }) : \"colors.gray.400\";\n  const isBgDark = isDark(bg)(theme);\n  let color = \"white\";\n  if (!isBgDark)\n    color = \"gray.800\";\n  return {\n    bg: $bg.reference,\n    fontSize: $fs.reference,\n    color,\n    borderColor: $border.reference,\n    verticalAlign: \"top\",\n    width: $size.reference,\n    height: $size.reference,\n    \"&:not([data-loaded])\": {\n      [$bg.variable]: bg\n    },\n    [$border.variable]: \"colors.white\",\n    _dark: {\n      [$border.variable]: \"colors.gray.800\"\n    }\n  };\n});\nconst baseStyleLabel = defineStyle({\n  fontSize: $fs.reference,\n  lineHeight: \"1\"\n});\nconst baseStyle = definePartsStyle((props) => ({\n  badge: runIfFn(baseStyleBadge, props),\n  excessLabel: runIfFn(baseStyleExcessLabel, props),\n  container: runIfFn(baseStyleContainer, props),\n  label: baseStyleLabel\n}));\nfunction getSize(size) {\n  const themeSize = size !== \"100%\" ? sizes$1[size] : void 0;\n  return definePartsStyle({\n    container: {\n      [$size.variable]: themeSize ?? size,\n      [$fs.variable]: `calc(${themeSize ?? size} / 2.5)`\n    },\n    excessLabel: {\n      [$size.variable]: themeSize ?? size,\n      [$fs.variable]: `calc(${themeSize ?? size} / 2.5)`\n    }\n  });\n}\nconst sizes = {\n  \"2xs\": getSize(4),\n  xs: getSize(6),\n  sm: getSize(8),\n  md: getSize(12),\n  lg: getSize(16),\n  xl: getSize(24),\n  \"2xl\": getSize(32),\n  full: getSize(\"100%\")\n};\nconst avatarTheme = defineMultiStyleConfig({\n  baseStyle,\n  sizes,\n  defaultProps: {\n    size: \"md\"\n  }\n});\n\nexport { avatarTheme };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}