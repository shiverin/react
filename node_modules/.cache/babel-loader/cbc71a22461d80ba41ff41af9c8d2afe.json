{"ast":null,"code":"'use client';\n\nimport { isObject } from '@chakra-ui/utils';\nimport { useMediaQuery } from './use-media-query.mjs';\nimport { useTheme } from '../system/use-theme.mjs';\n\nfunction useBreakpoint(arg) {\n  var _breakpoints$index;\n\n  const opts = isObject(arg) ? arg : {\n    fallback: arg ?? \"base\"\n  };\n  const theme = useTheme();\n\n  const breakpoints = theme.__breakpoints.details.map(_ref => {\n    let {\n      minMaxQuery,\n      breakpoint\n    } = _ref;\n    return {\n      breakpoint,\n      query: minMaxQuery.replace(\"@media screen and \", \"\")\n    };\n  });\n\n  const fallback = breakpoints.map(bp => bp.breakpoint === opts.fallback);\n  const values = useMediaQuery(breakpoints.map(bp => bp.query), {\n    fallback,\n    ssr: opts.ssr\n  });\n  const index = values.findIndex(value => value == true);\n  return ((_breakpoints$index = breakpoints[index]) === null || _breakpoints$index === void 0 ? void 0 : _breakpoints$index.breakpoint) ?? opts.fallback;\n}\n\nexport { useBreakpoint };","map":{"version":3,"names":["isObject","useMediaQuery","useTheme","useBreakpoint","arg","opts","fallback","theme","breakpoints","__breakpoints","details","map","minMaxQuery","breakpoint","query","replace","bp","values","ssr","index","findIndex","value"],"sources":["/workspaces/200508238/develop/node_modules/@chakra-ui/react/dist/esm/media-query/use-breakpoint.mjs"],"sourcesContent":["'use client';\nimport { isObject } from '@chakra-ui/utils';\nimport { useMediaQuery } from './use-media-query.mjs';\nimport { useTheme } from '../system/use-theme.mjs';\n\nfunction useBreakpoint(arg) {\n  const opts = isObject(arg) ? arg : { fallback: arg ?? \"base\" };\n  const theme = useTheme();\n  const breakpoints = theme.__breakpoints.details.map(\n    ({ minMaxQuery, breakpoint }) => ({\n      breakpoint,\n      query: minMaxQuery.replace(\"@media screen and \", \"\")\n    })\n  );\n  const fallback = breakpoints.map((bp) => bp.breakpoint === opts.fallback);\n  const values = useMediaQuery(\n    breakpoints.map((bp) => bp.query),\n    { fallback, ssr: opts.ssr }\n  );\n  const index = values.findIndex((value) => value == true);\n  return breakpoints[index]?.breakpoint ?? opts.fallback;\n}\n\nexport { useBreakpoint };\n"],"mappings":"AAAA;;AACA,SAASA,QAAT,QAAyB,kBAAzB;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,QAAT,QAAyB,yBAAzB;;AAEA,SAASC,aAAT,CAAuBC,GAAvB,EAA4B;EAAA;;EAC1B,MAAMC,IAAI,GAAGL,QAAQ,CAACI,GAAD,CAAR,GAAgBA,GAAhB,GAAsB;IAAEE,QAAQ,EAAEF,GAAG,IAAI;EAAnB,CAAnC;EACA,MAAMG,KAAK,GAAGL,QAAQ,EAAtB;;EACA,MAAMM,WAAW,GAAGD,KAAK,CAACE,aAAN,CAAoBC,OAApB,CAA4BC,GAA5B,CAClB;IAAA,IAAC;MAAEC,WAAF;MAAeC;IAAf,CAAD;IAAA,OAAkC;MAChCA,UADgC;MAEhCC,KAAK,EAAEF,WAAW,CAACG,OAAZ,CAAoB,oBAApB,EAA0C,EAA1C;IAFyB,CAAlC;EAAA,CADkB,CAApB;;EAMA,MAAMT,QAAQ,GAAGE,WAAW,CAACG,GAAZ,CAAiBK,EAAD,IAAQA,EAAE,CAACH,UAAH,KAAkBR,IAAI,CAACC,QAA/C,CAAjB;EACA,MAAMW,MAAM,GAAGhB,aAAa,CAC1BO,WAAW,CAACG,GAAZ,CAAiBK,EAAD,IAAQA,EAAE,CAACF,KAA3B,CAD0B,EAE1B;IAAER,QAAF;IAAYY,GAAG,EAAEb,IAAI,CAACa;EAAtB,CAF0B,CAA5B;EAIA,MAAMC,KAAK,GAAGF,MAAM,CAACG,SAAP,CAAkBC,KAAD,IAAWA,KAAK,IAAI,IAArC,CAAd;EACA,OAAO,uBAAAb,WAAW,CAACW,KAAD,CAAX,0EAAoBN,UAApB,KAAkCR,IAAI,CAACC,QAA9C;AACD;;AAED,SAASH,aAAT"},"metadata":{},"sourceType":"module"}