{"ast":null,"code":"'use client';\n\nimport { useCallbackRef, useControllableState } from '@chakra-ui/hooks';\nimport { isObject } from '@chakra-ui/utils';\nimport { useCallback } from 'react';\n\nfunction isInputEvent(value) {\n  return value && isObject(value) && isObject(value.target);\n}\n\nfunction useCheckboxGroup() {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    defaultValue,\n    value: valueProp,\n    onChange,\n    isDisabled,\n    isNative\n  } = props;\n  const onChangeProp = useCallbackRef(onChange);\n  const [value, setValue] = useControllableState({\n    value: valueProp,\n    defaultValue: defaultValue || [],\n    onChange: onChangeProp\n  });\n  const handleChange = useCallback(eventOrValue => {\n    if (!value) return;\n    const isChecked = isInputEvent(eventOrValue) ? eventOrValue.target.checked : !value.includes(eventOrValue);\n    const selectedValue = isInputEvent(eventOrValue) ? eventOrValue.target.value : eventOrValue;\n    const nextValue = isChecked ? [...value, selectedValue] : value.filter(v => String(v) !== String(selectedValue));\n    setValue(nextValue);\n  }, [setValue, value]);\n  const getCheckboxProps = useCallback(function () {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const checkedKey = isNative ? \"checked\" : \"isChecked\";\n    return { ...props2,\n      [checkedKey]: value.some(val => String(props2.value) === String(val)),\n      onChange: handleChange\n    };\n  }, [handleChange, isNative, value]);\n  return {\n    value,\n    isDisabled,\n    onChange: handleChange,\n    setValue,\n    getCheckboxProps\n  };\n}\n\nexport { useCheckboxGroup };","map":{"version":3,"names":["useCallbackRef","useControllableState","isObject","useCallback","isInputEvent","value","target","useCheckboxGroup","props","defaultValue","valueProp","onChange","isDisabled","isNative","onChangeProp","setValue","handleChange","eventOrValue","isChecked","checked","includes","selectedValue","nextValue","filter","v","String","getCheckboxProps","props2","checkedKey","some","val"],"sources":["/workspaces/200508238/develop/node_modules/@chakra-ui/react/dist/esm/checkbox/use-checkbox-group.mjs"],"sourcesContent":["'use client';\nimport { useCallbackRef, useControllableState } from '@chakra-ui/hooks';\nimport { isObject } from '@chakra-ui/utils';\nimport { useCallback } from 'react';\n\nfunction isInputEvent(value) {\n  return value && isObject(value) && isObject(value.target);\n}\nfunction useCheckboxGroup(props = {}) {\n  const {\n    defaultValue,\n    value: valueProp,\n    onChange,\n    isDisabled,\n    isNative\n  } = props;\n  const onChangeProp = useCallbackRef(onChange);\n  const [value, setValue] = useControllableState({\n    value: valueProp,\n    defaultValue: defaultValue || [],\n    onChange: onChangeProp\n  });\n  const handleChange = useCallback(\n    (eventOrValue) => {\n      if (!value)\n        return;\n      const isChecked = isInputEvent(eventOrValue) ? eventOrValue.target.checked : !value.includes(eventOrValue);\n      const selectedValue = isInputEvent(eventOrValue) ? eventOrValue.target.value : eventOrValue;\n      const nextValue = isChecked ? [...value, selectedValue] : value.filter((v) => String(v) !== String(selectedValue));\n      setValue(nextValue);\n    },\n    [setValue, value]\n  );\n  const getCheckboxProps = useCallback(\n    (props2 = {}) => {\n      const checkedKey = isNative ? \"checked\" : \"isChecked\";\n      return {\n        ...props2,\n        [checkedKey]: value.some((val) => String(props2.value) === String(val)),\n        onChange: handleChange\n      };\n    },\n    [handleChange, isNative, value]\n  );\n  return {\n    value,\n    isDisabled,\n    onChange: handleChange,\n    setValue,\n    getCheckboxProps\n  };\n}\n\nexport { useCheckboxGroup };\n"],"mappings":"AAAA;;AACA,SAASA,cAAT,EAAyBC,oBAAzB,QAAqD,kBAArD;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,WAAT,QAA4B,OAA5B;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;EAC3B,OAAOA,KAAK,IAAIH,QAAQ,CAACG,KAAD,CAAjB,IAA4BH,QAAQ,CAACG,KAAK,CAACC,MAAP,CAA3C;AACD;;AACD,SAASC,gBAAT,GAAsC;EAAA,IAAZC,KAAY,uEAAJ,EAAI;EACpC,MAAM;IACJC,YADI;IAEJJ,KAAK,EAAEK,SAFH;IAGJC,QAHI;IAIJC,UAJI;IAKJC;EALI,IAMFL,KANJ;EAOA,MAAMM,YAAY,GAAGd,cAAc,CAACW,QAAD,CAAnC;EACA,MAAM,CAACN,KAAD,EAAQU,QAAR,IAAoBd,oBAAoB,CAAC;IAC7CI,KAAK,EAAEK,SADsC;IAE7CD,YAAY,EAAEA,YAAY,IAAI,EAFe;IAG7CE,QAAQ,EAAEG;EAHmC,CAAD,CAA9C;EAKA,MAAME,YAAY,GAAGb,WAAW,CAC7Bc,YAAD,IAAkB;IAChB,IAAI,CAACZ,KAAL,EACE;IACF,MAAMa,SAAS,GAAGd,YAAY,CAACa,YAAD,CAAZ,GAA6BA,YAAY,CAACX,MAAb,CAAoBa,OAAjD,GAA2D,CAACd,KAAK,CAACe,QAAN,CAAeH,YAAf,CAA9E;IACA,MAAMI,aAAa,GAAGjB,YAAY,CAACa,YAAD,CAAZ,GAA6BA,YAAY,CAACX,MAAb,CAAoBD,KAAjD,GAAyDY,YAA/E;IACA,MAAMK,SAAS,GAAGJ,SAAS,GAAG,CAAC,GAAGb,KAAJ,EAAWgB,aAAX,CAAH,GAA+BhB,KAAK,CAACkB,MAAN,CAAcC,CAAD,IAAOC,MAAM,CAACD,CAAD,CAAN,KAAcC,MAAM,CAACJ,aAAD,CAAxC,CAA1D;IACAN,QAAQ,CAACO,SAAD,CAAR;EACD,CAR6B,EAS9B,CAACP,QAAD,EAAWV,KAAX,CAT8B,CAAhC;EAWA,MAAMqB,gBAAgB,GAAGvB,WAAW,CAClC,YAAiB;IAAA,IAAhBwB,MAAgB,uEAAP,EAAO;IACf,MAAMC,UAAU,GAAGf,QAAQ,GAAG,SAAH,GAAe,WAA1C;IACA,OAAO,EACL,GAAGc,MADE;MAEL,CAACC,UAAD,GAAcvB,KAAK,CAACwB,IAAN,CAAYC,GAAD,IAASL,MAAM,CAACE,MAAM,CAACtB,KAAR,CAAN,KAAyBoB,MAAM,CAACK,GAAD,CAAnD,CAFT;MAGLnB,QAAQ,EAAEK;IAHL,CAAP;EAKD,CARiC,EASlC,CAACA,YAAD,EAAeH,QAAf,EAAyBR,KAAzB,CATkC,CAApC;EAWA,OAAO;IACLA,KADK;IAELO,UAFK;IAGLD,QAAQ,EAAEK,YAHL;IAILD,QAJK;IAKLW;EALK,CAAP;AAOD;;AAED,SAASnB,gBAAT"},"metadata":{},"sourceType":"module"}