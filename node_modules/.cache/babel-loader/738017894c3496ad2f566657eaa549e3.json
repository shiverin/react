{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { cloneElement } from 'react';\nimport { AvatarName } from './avatar-name.mjs';\nimport { GenericAvatarIcon } from './generic-avatar-icon.mjs';\nimport { useImage } from '../image/use-image.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nfunction AvatarImage(props) {\n  var src = props.src,\n      srcSet = props.srcSet,\n      onError = props.onError,\n      onLoad = props.onLoad,\n      getInitials = props.getInitials,\n      name = props.name,\n      borderRadius = props.borderRadius,\n      loading = props.loading,\n      iconLabel = props.iconLabel,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? /* @__PURE__ */jsx(GenericAvatarIcon, {}) : _props$icon,\n      ignoreFallback = props.ignoreFallback,\n      referrerPolicy = props.referrerPolicy,\n      crossOrigin = props.crossOrigin;\n  var status = useImage({\n    src: src,\n    onError: onError,\n    crossOrigin: crossOrigin,\n    ignoreFallback: ignoreFallback\n  });\n  var hasLoaded = status === \"loaded\";\n  var showFallback = !src || !hasLoaded;\n\n  if (showFallback) {\n    return name ? /* @__PURE__ */jsx(AvatarName, {\n      className: \"chakra-avatar__initials\",\n      getInitials: getInitials,\n      name: name\n    }) : cloneElement(icon, {\n      role: \"img\",\n      \"aria-label\": iconLabel\n    });\n  }\n\n  return /* @__PURE__ */jsx(chakra.img, {\n    src: src,\n    srcSet: srcSet,\n    alt: name !== null && name !== void 0 ? name : iconLabel,\n    onLoad: onLoad,\n    referrerPolicy: referrerPolicy,\n    crossOrigin: crossOrigin !== null && crossOrigin !== void 0 ? crossOrigin : void 0,\n    className: \"chakra-avatar__img\",\n    loading: loading,\n    __css: {\n      width: \"100%\",\n      height: \"100%\",\n      objectFit: \"cover\",\n      borderRadius: borderRadius\n    }\n  });\n}\n\nAvatarImage.displayName = \"AvatarImage\";\nexport { AvatarImage };","map":{"version":3,"names":["jsx","cloneElement","AvatarName","GenericAvatarIcon","useImage","chakra","AvatarImage","props","src","srcSet","onError","onLoad","getInitials","name","borderRadius","loading","iconLabel","icon","ignoreFallback","referrerPolicy","crossOrigin","status","hasLoaded","showFallback","className","role","img","alt","__css","width","height","objectFit","displayName"],"sources":["/workspaces/200508238/develop/node_modules/@chakra-ui/react/dist/esm/avatar/avatar-image.mjs"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { cloneElement } from 'react';\nimport { AvatarName } from './avatar-name.mjs';\nimport { GenericAvatarIcon } from './generic-avatar-icon.mjs';\nimport { useImage } from '../image/use-image.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nfunction AvatarImage(props) {\n  const {\n    src,\n    srcSet,\n    onError,\n    onLoad,\n    getInitials,\n    name,\n    borderRadius,\n    loading,\n    iconLabel,\n    icon = /* @__PURE__ */ jsx(GenericAvatarIcon, {}),\n    ignoreFallback,\n    referrerPolicy,\n    crossOrigin\n  } = props;\n  const status = useImage({ src, onError, crossOrigin, ignoreFallback });\n  const hasLoaded = status === \"loaded\";\n  const showFallback = !src || !hasLoaded;\n  if (showFallback) {\n    return name ? /* @__PURE__ */ jsx(\n      AvatarName,\n      {\n        className: \"chakra-avatar__initials\",\n        getInitials,\n        name\n      }\n    ) : cloneElement(icon, {\n      role: \"img\",\n      \"aria-label\": iconLabel\n    });\n  }\n  return /* @__PURE__ */ jsx(\n    chakra.img,\n    {\n      src,\n      srcSet,\n      alt: name ?? iconLabel,\n      onLoad,\n      referrerPolicy,\n      crossOrigin: crossOrigin ?? void 0,\n      className: \"chakra-avatar__img\",\n      loading,\n      __css: {\n        width: \"100%\",\n        height: \"100%\",\n        objectFit: \"cover\",\n        borderRadius\n      }\n    }\n  );\n}\nAvatarImage.displayName = \"AvatarImage\";\n\nexport { AvatarImage };\n"],"mappings":"AAAA;;AACA,SAASA,GAAT,QAAoB,mBAApB;AACA,SAASC,YAAT,QAA6B,OAA7B;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,iBAAT,QAAkC,2BAAlC;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,MAAT,QAAuB,uBAAvB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;EAC1B,IACEC,GADF,GAcID,KAdJ,CACEC,GADF;EAAA,IAEEC,MAFF,GAcIF,KAdJ,CAEEE,MAFF;EAAA,IAGEC,OAHF,GAcIH,KAdJ,CAGEG,OAHF;EAAA,IAIEC,MAJF,GAcIJ,KAdJ,CAIEI,MAJF;EAAA,IAKEC,WALF,GAcIL,KAdJ,CAKEK,WALF;EAAA,IAMEC,IANF,GAcIN,KAdJ,CAMEM,IANF;EAAA,IAOEC,YAPF,GAcIP,KAdJ,CAOEO,YAPF;EAAA,IAQEC,OARF,GAcIR,KAdJ,CAQEQ,OARF;EAAA,IASEC,SATF,GAcIT,KAdJ,CASES,SATF;EAAA,kBAcIT,KAdJ,CAUEU,IAVF;EAAA,IAUEA,IAVF,4BAUS,eAAgBjB,GAAG,CAACG,iBAAD,EAAoB,EAApB,CAV5B;EAAA,IAWEe,cAXF,GAcIX,KAdJ,CAWEW,cAXF;EAAA,IAYEC,cAZF,GAcIZ,KAdJ,CAYEY,cAZF;EAAA,IAaEC,WAbF,GAcIb,KAdJ,CAaEa,WAbF;EAeA,IAAMC,MAAM,GAAGjB,QAAQ,CAAC;IAAEI,GAAG,EAAHA,GAAF;IAAOE,OAAO,EAAPA,OAAP;IAAgBU,WAAW,EAAXA,WAAhB;IAA6BF,cAAc,EAAdA;EAA7B,CAAD,CAAvB;EACA,IAAMI,SAAS,GAAGD,MAAM,KAAK,QAA7B;EACA,IAAME,YAAY,GAAG,CAACf,GAAD,IAAQ,CAACc,SAA9B;;EACA,IAAIC,YAAJ,EAAkB;IAChB,OAAOV,IAAI,GAAG,eAAgBb,GAAG,CAC/BE,UAD+B,EAE/B;MACEsB,SAAS,EAAE,yBADb;MAEEZ,WAAW,EAAXA,WAFF;MAGEC,IAAI,EAAJA;IAHF,CAF+B,CAAtB,GAOPZ,YAAY,CAACgB,IAAD,EAAO;MACrBQ,IAAI,EAAE,KADe;MAErB,cAAcT;IAFO,CAAP,CAPhB;EAWD;;EACD,OAAO,eAAgBhB,GAAG,CACxBK,MAAM,CAACqB,GADiB,EAExB;IACElB,GAAG,EAAHA,GADF;IAEEC,MAAM,EAANA,MAFF;IAGEkB,GAAG,EAAEd,IAAF,aAAEA,IAAF,cAAEA,IAAF,GAAUG,SAHf;IAIEL,MAAM,EAANA,MAJF;IAKEQ,cAAc,EAAdA,cALF;IAMEC,WAAW,EAAEA,WAAF,aAAEA,WAAF,cAAEA,WAAF,GAAiB,KAAK,CANnC;IAOEI,SAAS,EAAE,oBAPb;IAQET,OAAO,EAAPA,OARF;IASEa,KAAK,EAAE;MACLC,KAAK,EAAE,MADF;MAELC,MAAM,EAAE,MAFH;MAGLC,SAAS,EAAE,OAHN;MAILjB,YAAY,EAAZA;IAJK;EATT,CAFwB,CAA1B;AAmBD;;AACDR,WAAW,CAAC0B,WAAZ,GAA0B,aAA1B;AAEA,SAAS1B,WAAT"},"metadata":{},"sourceType":"module"}