{"ast":null,"code":"'use client';\n\nimport _slicedToArray from \"/workspaces/200508238/develop/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useId as useId$1, useMemo, useState, useCallback } from 'react';\n\nfunction useId(idProp, prefix) {\n  var id = useId$1();\n  return useMemo(function () {\n    return idProp || [prefix, id].filter(Boolean).join(\"-\");\n  }, [idProp, prefix, id]);\n}\n\nfunction useIds(idProp) {\n  for (var _len = arguments.length, prefixes = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    prefixes[_key - 1] = arguments[_key];\n  }\n\n  var id = useId(idProp);\n  return useMemo(function () {\n    return prefixes.map(function (prefix) {\n      return \"\".concat(prefix, \"-\").concat(id);\n    });\n  }, [id, prefixes]);\n}\n\nfunction useOptionalPart(partId) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      id = _useState2[0],\n      setId = _useState2[1];\n\n  var ref = useCallback(function (node) {\n    setId(node ? partId : null);\n  }, [partId]);\n  return {\n    ref: ref,\n    id: id,\n    isRendered: Boolean(id)\n  };\n}\n\nexport { useId, useIds, useOptionalPart };","map":{"version":3,"names":["useId","useId$1","useMemo","useState","useCallback","idProp","prefix","id","filter","Boolean","join","useIds","prefixes","map","useOptionalPart","partId","setId","ref","node","isRendered"],"sources":["/workspaces/200508238/develop/node_modules/@chakra-ui/react/node_modules/@chakra-ui/hooks/dist/esm/use-id.mjs"],"sourcesContent":["'use client';\nimport { useId as useId$1, useMemo, useState, useCallback } from 'react';\n\nfunction useId(idProp, prefix) {\n  const id = useId$1();\n  return useMemo(\n    () => idProp || [prefix, id].filter(Boolean).join(\"-\"),\n    [idProp, prefix, id]\n  );\n}\nfunction useIds(idProp, ...prefixes) {\n  const id = useId(idProp);\n  return useMemo(() => {\n    return prefixes.map((prefix) => `${prefix}-${id}`);\n  }, [id, prefixes]);\n}\nfunction useOptionalPart(partId) {\n  const [id, setId] = useState(null);\n  const ref = useCallback(\n    (node) => {\n      setId(node ? partId : null);\n    },\n    [partId]\n  );\n  return { ref, id, isRendered: Boolean(id) };\n}\n\nexport { useId, useIds, useOptionalPart };\n"],"mappings":"AAAA;;;AACA,SAASA,KAAK,IAAIC,OAAlB,EAA2BC,OAA3B,EAAoCC,QAApC,EAA8CC,WAA9C,QAAiE,OAAjE;;AAEA,SAASJ,KAAT,CAAeK,MAAf,EAAuBC,MAAvB,EAA+B;EAC7B,IAAMC,EAAE,GAAGN,OAAO,EAAlB;EACA,OAAOC,OAAO,CACZ;IAAA,OAAMG,MAAM,IAAI,CAACC,MAAD,EAASC,EAAT,EAAaC,MAAb,CAAoBC,OAApB,EAA6BC,IAA7B,CAAkC,GAAlC,CAAhB;EAAA,CADY,EAEZ,CAACL,MAAD,EAASC,MAAT,EAAiBC,EAAjB,CAFY,CAAd;AAID;;AACD,SAASI,MAAT,CAAgBN,MAAhB,EAAqC;EAAA,kCAAVO,QAAU;IAAVA,QAAU;EAAA;;EACnC,IAAML,EAAE,GAAGP,KAAK,CAACK,MAAD,CAAhB;EACA,OAAOH,OAAO,CAAC,YAAM;IACnB,OAAOU,QAAQ,CAACC,GAAT,CAAa,UAACP,MAAD;MAAA,iBAAeA,MAAf,cAAyBC,EAAzB;IAAA,CAAb,CAAP;EACD,CAFa,EAEX,CAACA,EAAD,EAAKK,QAAL,CAFW,CAAd;AAGD;;AACD,SAASE,eAAT,CAAyBC,MAAzB,EAAiC;EAC/B,gBAAoBZ,QAAQ,CAAC,IAAD,CAA5B;EAAA;EAAA,IAAOI,EAAP;EAAA,IAAWS,KAAX;;EACA,IAAMC,GAAG,GAAGb,WAAW,CACrB,UAACc,IAAD,EAAU;IACRF,KAAK,CAACE,IAAI,GAAGH,MAAH,GAAY,IAAjB,CAAL;EACD,CAHoB,EAIrB,CAACA,MAAD,CAJqB,CAAvB;EAMA,OAAO;IAAEE,GAAG,EAAHA,GAAF;IAAOV,EAAE,EAAFA,EAAP;IAAWY,UAAU,EAAEV,OAAO,CAACF,EAAD;EAA9B,CAAP;AACD;;AAED,SAASP,KAAT,EAAgBW,MAAhB,EAAwBG,eAAxB"},"metadata":{},"sourceType":"module"}