{"ast":null,"code":"'use client';\n\nimport { isObject } from '@chakra-ui/utils';\nimport { useMediaQuery } from './use-media-query.mjs';\nimport { useTheme } from '../system/use-theme.mjs';\n\nfunction useBreakpoint(arg) {\n  var _breakpoints$index$br, _breakpoints$index;\n\n  var opts = isObject(arg) ? arg : {\n    fallback: arg !== null && arg !== void 0 ? arg : \"base\"\n  };\n  var theme = useTheme();\n\n  var breakpoints = theme.__breakpoints.details.map(function (_ref) {\n    var minMaxQuery = _ref.minMaxQuery,\n        breakpoint = _ref.breakpoint;\n    return {\n      breakpoint: breakpoint,\n      query: minMaxQuery.replace(\"@media screen and \", \"\")\n    };\n  });\n\n  var fallback = breakpoints.map(function (bp) {\n    return bp.breakpoint === opts.fallback;\n  });\n  var values = useMediaQuery(breakpoints.map(function (bp) {\n    return bp.query;\n  }), {\n    fallback: fallback,\n    ssr: opts.ssr\n  });\n  var index = values.findIndex(function (value) {\n    return value == true;\n  });\n  return (_breakpoints$index$br = (_breakpoints$index = breakpoints[index]) === null || _breakpoints$index === void 0 ? void 0 : _breakpoints$index.breakpoint) !== null && _breakpoints$index$br !== void 0 ? _breakpoints$index$br : opts.fallback;\n}\n\nexport { useBreakpoint };","map":{"version":3,"names":["isObject","useMediaQuery","useTheme","useBreakpoint","arg","opts","fallback","theme","breakpoints","__breakpoints","details","map","minMaxQuery","breakpoint","query","replace","bp","values","ssr","index","findIndex","value"],"sources":["/workspaces/200508238/develop/node_modules/@chakra-ui/react/dist/esm/media-query/use-breakpoint.mjs"],"sourcesContent":["'use client';\nimport { isObject } from '@chakra-ui/utils';\nimport { useMediaQuery } from './use-media-query.mjs';\nimport { useTheme } from '../system/use-theme.mjs';\n\nfunction useBreakpoint(arg) {\n  const opts = isObject(arg) ? arg : { fallback: arg ?? \"base\" };\n  const theme = useTheme();\n  const breakpoints = theme.__breakpoints.details.map(\n    ({ minMaxQuery, breakpoint }) => ({\n      breakpoint,\n      query: minMaxQuery.replace(\"@media screen and \", \"\")\n    })\n  );\n  const fallback = breakpoints.map((bp) => bp.breakpoint === opts.fallback);\n  const values = useMediaQuery(\n    breakpoints.map((bp) => bp.query),\n    { fallback, ssr: opts.ssr }\n  );\n  const index = values.findIndex((value) => value == true);\n  return breakpoints[index]?.breakpoint ?? opts.fallback;\n}\n\nexport { useBreakpoint };\n"],"mappings":"AAAA;;AACA,SAASA,QAAT,QAAyB,kBAAzB;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,QAAT,QAAyB,yBAAzB;;AAEA,SAASC,aAAT,CAAuBC,GAAvB,EAA4B;EAAA;;EAC1B,IAAMC,IAAI,GAAGL,QAAQ,CAACI,GAAD,CAAR,GAAgBA,GAAhB,GAAsB;IAAEE,QAAQ,EAAEF,GAAF,aAAEA,GAAF,cAAEA,GAAF,GAAS;EAAnB,CAAnC;EACA,IAAMG,KAAK,GAAGL,QAAQ,EAAtB;;EACA,IAAMM,WAAW,GAAGD,KAAK,CAACE,aAAN,CAAoBC,OAApB,CAA4BC,GAA5B,CAClB;IAAA,IAAGC,WAAH,QAAGA,WAAH;IAAA,IAAgBC,UAAhB,QAAgBA,UAAhB;IAAA,OAAkC;MAChCA,UAAU,EAAVA,UADgC;MAEhCC,KAAK,EAAEF,WAAW,CAACG,OAAZ,CAAoB,oBAApB,EAA0C,EAA1C;IAFyB,CAAlC;EAAA,CADkB,CAApB;;EAMA,IAAMT,QAAQ,GAAGE,WAAW,CAACG,GAAZ,CAAgB,UAACK,EAAD;IAAA,OAAQA,EAAE,CAACH,UAAH,KAAkBR,IAAI,CAACC,QAA/B;EAAA,CAAhB,CAAjB;EACA,IAAMW,MAAM,GAAGhB,aAAa,CAC1BO,WAAW,CAACG,GAAZ,CAAgB,UAACK,EAAD;IAAA,OAAQA,EAAE,CAACF,KAAX;EAAA,CAAhB,CAD0B,EAE1B;IAAER,QAAQ,EAARA,QAAF;IAAYY,GAAG,EAAEb,IAAI,CAACa;EAAtB,CAF0B,CAA5B;EAIA,IAAMC,KAAK,GAAGF,MAAM,CAACG,SAAP,CAAiB,UAACC,KAAD;IAAA,OAAWA,KAAK,IAAI,IAApB;EAAA,CAAjB,CAAd;EACA,sDAAOb,WAAW,CAACW,KAAD,CAAlB,uDAAO,mBAAoBN,UAA3B,yEAAyCR,IAAI,CAACC,QAA9C;AACD;;AAED,SAASH,aAAT"},"metadata":{},"sourceType":"module"}