{"ast":null,"code":"import { t } from '../utils/index.mjs';\nimport { transformFunctions } from '../utils/transform-functions.mjs';\nconst typography = {\n  fontFamily: t.prop(\"fontFamily\", \"fonts\"),\n  fontSize: t.prop(\"fontSize\", \"fontSizes\", transformFunctions.px),\n  fontWeight: t.prop(\"fontWeight\", \"fontWeights\"),\n  lineHeight: t.prop(\"lineHeight\", \"lineHeights\"),\n  letterSpacing: t.prop(\"letterSpacing\", \"letterSpacings\"),\n  textAlign: true,\n  fontStyle: true,\n  textIndent: true,\n  wordBreak: true,\n  overflowWrap: true,\n  textOverflow: true,\n  textTransform: true,\n  whiteSpace: true,\n  isTruncated: {\n    transform(value) {\n      if (value === true) {\n        return {\n          overflow: \"hidden\",\n          textOverflow: \"ellipsis\",\n          whiteSpace: \"nowrap\"\n        };\n      }\n    }\n\n  },\n  noOfLines: {\n    static: {\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      display: \"-webkit-box\",\n      WebkitBoxOrient: \"vertical\",\n      //@ts-ignore\n      WebkitLineClamp: \"var(--chakra-line-clamp)\"\n    },\n    property: \"--chakra-line-clamp\"\n  }\n};\nexport { typography };","map":{"version":3,"names":["t","transformFunctions","typography","fontFamily","prop","fontSize","px","fontWeight","lineHeight","letterSpacing","textAlign","fontStyle","textIndent","wordBreak","overflowWrap","textOverflow","textTransform","whiteSpace","isTruncated","transform","value","overflow","noOfLines","static","display","WebkitBoxOrient","WebkitLineClamp","property"],"sources":["/workspaces/200508238/develop/node_modules/@chakra-ui/react/node_modules/@chakra-ui/styled-system/dist/esm/config/typography.mjs"],"sourcesContent":["import { t } from '../utils/index.mjs';\nimport { transformFunctions } from '../utils/transform-functions.mjs';\n\nconst typography = {\n  fontFamily: t.prop(\"fontFamily\", \"fonts\"),\n  fontSize: t.prop(\"fontSize\", \"fontSizes\", transformFunctions.px),\n  fontWeight: t.prop(\"fontWeight\", \"fontWeights\"),\n  lineHeight: t.prop(\"lineHeight\", \"lineHeights\"),\n  letterSpacing: t.prop(\"letterSpacing\", \"letterSpacings\"),\n  textAlign: true,\n  fontStyle: true,\n  textIndent: true,\n  wordBreak: true,\n  overflowWrap: true,\n  textOverflow: true,\n  textTransform: true,\n  whiteSpace: true,\n  isTruncated: {\n    transform(value) {\n      if (value === true) {\n        return {\n          overflow: \"hidden\",\n          textOverflow: \"ellipsis\",\n          whiteSpace: \"nowrap\"\n        };\n      }\n    }\n  },\n  noOfLines: {\n    static: {\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      display: \"-webkit-box\",\n      WebkitBoxOrient: \"vertical\",\n      //@ts-ignore\n      WebkitLineClamp: \"var(--chakra-line-clamp)\"\n    },\n    property: \"--chakra-line-clamp\"\n  }\n};\n\nexport { typography };\n"],"mappings":"AAAA,SAASA,CAAT,QAAkB,oBAAlB;AACA,SAASC,kBAAT,QAAmC,kCAAnC;AAEA,MAAMC,UAAU,GAAG;EACjBC,UAAU,EAAEH,CAAC,CAACI,IAAF,CAAO,YAAP,EAAqB,OAArB,CADK;EAEjBC,QAAQ,EAAEL,CAAC,CAACI,IAAF,CAAO,UAAP,EAAmB,WAAnB,EAAgCH,kBAAkB,CAACK,EAAnD,CAFO;EAGjBC,UAAU,EAAEP,CAAC,CAACI,IAAF,CAAO,YAAP,EAAqB,aAArB,CAHK;EAIjBI,UAAU,EAAER,CAAC,CAACI,IAAF,CAAO,YAAP,EAAqB,aAArB,CAJK;EAKjBK,aAAa,EAAET,CAAC,CAACI,IAAF,CAAO,eAAP,EAAwB,gBAAxB,CALE;EAMjBM,SAAS,EAAE,IANM;EAOjBC,SAAS,EAAE,IAPM;EAQjBC,UAAU,EAAE,IARK;EASjBC,SAAS,EAAE,IATM;EAUjBC,YAAY,EAAE,IAVG;EAWjBC,YAAY,EAAE,IAXG;EAYjBC,aAAa,EAAE,IAZE;EAajBC,UAAU,EAAE,IAbK;EAcjBC,WAAW,EAAE;IACXC,SAAS,CAACC,KAAD,EAAQ;MACf,IAAIA,KAAK,KAAK,IAAd,EAAoB;QAClB,OAAO;UACLC,QAAQ,EAAE,QADL;UAELN,YAAY,EAAE,UAFT;UAGLE,UAAU,EAAE;QAHP,CAAP;MAKD;IACF;;EATU,CAdI;EAyBjBK,SAAS,EAAE;IACTC,MAAM,EAAE;MACNF,QAAQ,EAAE,QADJ;MAENN,YAAY,EAAE,UAFR;MAGNS,OAAO,EAAE,aAHH;MAINC,eAAe,EAAE,UAJX;MAKN;MACAC,eAAe,EAAE;IANX,CADC;IASTC,QAAQ,EAAE;EATD;AAzBM,CAAnB;AAsCA,SAASzB,UAAT"},"metadata":{},"sourceType":"module"}