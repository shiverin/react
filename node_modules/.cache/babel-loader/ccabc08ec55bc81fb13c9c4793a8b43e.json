{"ast":null,"code":"import { t } from '../utils/index.mjs';\nvar position = {\n  position: true,\n  pos: t.prop(\"position\"),\n  zIndex: t.prop(\"zIndex\", \"zIndices\"),\n  inset: t.spaceT(\"inset\"),\n  insetX: t.spaceT([\"left\", \"right\"]),\n  insetInline: t.spaceT(\"insetInline\"),\n  insetY: t.spaceT([\"top\", \"bottom\"]),\n  insetBlock: t.spaceT(\"insetBlock\"),\n  top: t.spaceT(\"top\"),\n  insetBlockStart: t.spaceT(\"insetBlockStart\"),\n  bottom: t.spaceT(\"bottom\"),\n  insetBlockEnd: t.spaceT(\"insetBlockEnd\"),\n  left: t.spaceT(\"left\"),\n  insetInlineStart: t.logical({\n    scale: \"space\",\n    property: {\n      ltr: \"left\",\n      rtl: \"right\"\n    }\n  }),\n  right: t.spaceT(\"right\"),\n  insetInlineEnd: t.logical({\n    scale: \"space\",\n    property: {\n      ltr: \"right\",\n      rtl: \"left\"\n    }\n  })\n};\nObject.assign(position, {\n  insetStart: position.insetInlineStart,\n  insetEnd: position.insetInlineEnd\n});\nexport { position };","map":{"version":3,"names":["t","position","pos","prop","zIndex","inset","spaceT","insetX","insetInline","insetY","insetBlock","top","insetBlockStart","bottom","insetBlockEnd","left","insetInlineStart","logical","scale","property","ltr","rtl","right","insetInlineEnd","Object","assign","insetStart","insetEnd"],"sources":["/workspaces/200508238/develop/node_modules/@chakra-ui/react/node_modules/@chakra-ui/styled-system/dist/esm/config/position.mjs"],"sourcesContent":["import { t } from '../utils/index.mjs';\n\nconst position = {\n  position: true,\n  pos: t.prop(\"position\"),\n  zIndex: t.prop(\"zIndex\", \"zIndices\"),\n  inset: t.spaceT(\"inset\"),\n  insetX: t.spaceT([\"left\", \"right\"]),\n  insetInline: t.spaceT(\"insetInline\"),\n  insetY: t.spaceT([\"top\", \"bottom\"]),\n  insetBlock: t.spaceT(\"insetBlock\"),\n  top: t.spaceT(\"top\"),\n  insetBlockStart: t.spaceT(\"insetBlockStart\"),\n  bottom: t.spaceT(\"bottom\"),\n  insetBlockEnd: t.spaceT(\"insetBlockEnd\"),\n  left: t.spaceT(\"left\"),\n  insetInlineStart: t.logical({\n    scale: \"space\",\n    property: { ltr: \"left\", rtl: \"right\" }\n  }),\n  right: t.spaceT(\"right\"),\n  insetInlineEnd: t.logical({\n    scale: \"space\",\n    property: { ltr: \"right\", rtl: \"left\" }\n  })\n};\nObject.assign(position, {\n  insetStart: position.insetInlineStart,\n  insetEnd: position.insetInlineEnd\n});\n\nexport { position };\n"],"mappings":"AAAA,SAASA,CAAT,QAAkB,oBAAlB;AAEA,IAAMC,QAAQ,GAAG;EACfA,QAAQ,EAAE,IADK;EAEfC,GAAG,EAAEF,CAAC,CAACG,IAAF,CAAO,UAAP,CAFU;EAGfC,MAAM,EAAEJ,CAAC,CAACG,IAAF,CAAO,QAAP,EAAiB,UAAjB,CAHO;EAIfE,KAAK,EAAEL,CAAC,CAACM,MAAF,CAAS,OAAT,CAJQ;EAKfC,MAAM,EAAEP,CAAC,CAACM,MAAF,CAAS,CAAC,MAAD,EAAS,OAAT,CAAT,CALO;EAMfE,WAAW,EAAER,CAAC,CAACM,MAAF,CAAS,aAAT,CANE;EAOfG,MAAM,EAAET,CAAC,CAACM,MAAF,CAAS,CAAC,KAAD,EAAQ,QAAR,CAAT,CAPO;EAQfI,UAAU,EAAEV,CAAC,CAACM,MAAF,CAAS,YAAT,CARG;EASfK,GAAG,EAAEX,CAAC,CAACM,MAAF,CAAS,KAAT,CATU;EAUfM,eAAe,EAAEZ,CAAC,CAACM,MAAF,CAAS,iBAAT,CAVF;EAWfO,MAAM,EAAEb,CAAC,CAACM,MAAF,CAAS,QAAT,CAXO;EAYfQ,aAAa,EAAEd,CAAC,CAACM,MAAF,CAAS,eAAT,CAZA;EAafS,IAAI,EAAEf,CAAC,CAACM,MAAF,CAAS,MAAT,CAbS;EAcfU,gBAAgB,EAAEhB,CAAC,CAACiB,OAAF,CAAU;IAC1BC,KAAK,EAAE,OADmB;IAE1BC,QAAQ,EAAE;MAAEC,GAAG,EAAE,MAAP;MAAeC,GAAG,EAAE;IAApB;EAFgB,CAAV,CAdH;EAkBfC,KAAK,EAAEtB,CAAC,CAACM,MAAF,CAAS,OAAT,CAlBQ;EAmBfiB,cAAc,EAAEvB,CAAC,CAACiB,OAAF,CAAU;IACxBC,KAAK,EAAE,OADiB;IAExBC,QAAQ,EAAE;MAAEC,GAAG,EAAE,OAAP;MAAgBC,GAAG,EAAE;IAArB;EAFc,CAAV;AAnBD,CAAjB;AAwBAG,MAAM,CAACC,MAAP,CAAcxB,QAAd,EAAwB;EACtByB,UAAU,EAAEzB,QAAQ,CAACe,gBADC;EAEtBW,QAAQ,EAAE1B,QAAQ,CAACsB;AAFG,CAAxB;AAKA,SAAStB,QAAT"},"metadata":{},"sourceType":"module"}