{"ast":null,"code":"import { isObject } from '@chakra-ui/utils';\n\nfunction resolveReference(operand) {\n  if (isObject(operand) && operand.reference) {\n    return operand.reference;\n  }\n\n  return String(operand);\n}\n\nconst toExpression = function (operator) {\n  for (var _len = arguments.length, operands = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    operands[_key - 1] = arguments[_key];\n  }\n\n  return operands.map(resolveReference).join(` ${operator} `).replace(/calc/g, \"\");\n};\n\nconst add = function () {\n  for (var _len2 = arguments.length, operands = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    operands[_key2] = arguments[_key2];\n  }\n\n  return `calc(${toExpression(\"+\", ...operands)})`;\n};\n\nconst subtract = function () {\n  for (var _len3 = arguments.length, operands = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    operands[_key3] = arguments[_key3];\n  }\n\n  return `calc(${toExpression(\"-\", ...operands)})`;\n};\n\nconst multiply = function () {\n  for (var _len4 = arguments.length, operands = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    operands[_key4] = arguments[_key4];\n  }\n\n  return `calc(${toExpression(\"*\", ...operands)})`;\n};\n\nconst divide = function () {\n  for (var _len5 = arguments.length, operands = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n    operands[_key5] = arguments[_key5];\n  }\n\n  return `calc(${toExpression(\"/\", ...operands)})`;\n};\n\nconst negate = x => {\n  const value = resolveReference(x);\n\n  if (value != null && !Number.isNaN(parseFloat(value))) {\n    return String(value).startsWith(\"-\") ? String(value).slice(1) : `-${value}`;\n  }\n\n  return multiply(value, -1);\n};\n\nconst calc = Object.assign(x => ({\n  add: function () {\n    for (var _len6 = arguments.length, operands = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      operands[_key6] = arguments[_key6];\n    }\n\n    return calc(add(x, ...operands));\n  },\n  subtract: function () {\n    for (var _len7 = arguments.length, operands = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      operands[_key7] = arguments[_key7];\n    }\n\n    return calc(subtract(x, ...operands));\n  },\n  multiply: function () {\n    for (var _len8 = arguments.length, operands = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n      operands[_key8] = arguments[_key8];\n    }\n\n    return calc(multiply(x, ...operands));\n  },\n  divide: function () {\n    for (var _len9 = arguments.length, operands = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n      operands[_key9] = arguments[_key9];\n    }\n\n    return calc(divide(x, ...operands));\n  },\n  negate: () => calc(negate(x)),\n  toString: () => x.toString()\n}), {\n  add,\n  subtract,\n  multiply,\n  divide,\n  negate\n});\nexport { calc };","map":{"version":3,"names":["isObject","resolveReference","operand","reference","String","toExpression","operator","operands","map","join","replace","add","subtract","multiply","divide","negate","x","value","Number","isNaN","parseFloat","startsWith","slice","calc","Object","assign","toString"],"sources":["/workspaces/200508238/develop/node_modules/@chakra-ui/react/node_modules/@chakra-ui/styled-system/dist/esm/create-theme-vars/calc.mjs"],"sourcesContent":["import { isObject } from '@chakra-ui/utils';\n\nfunction resolveReference(operand) {\n  if (isObject(operand) && operand.reference) {\n    return operand.reference;\n  }\n  return String(operand);\n}\nconst toExpression = (operator, ...operands) => operands.map(resolveReference).join(` ${operator} `).replace(/calc/g, \"\");\nconst add = (...operands) => `calc(${toExpression(\"+\", ...operands)})`;\nconst subtract = (...operands) => `calc(${toExpression(\"-\", ...operands)})`;\nconst multiply = (...operands) => `calc(${toExpression(\"*\", ...operands)})`;\nconst divide = (...operands) => `calc(${toExpression(\"/\", ...operands)})`;\nconst negate = (x) => {\n  const value = resolveReference(x);\n  if (value != null && !Number.isNaN(parseFloat(value))) {\n    return String(value).startsWith(\"-\") ? String(value).slice(1) : `-${value}`;\n  }\n  return multiply(value, -1);\n};\nconst calc = Object.assign(\n  (x) => ({\n    add: (...operands) => calc(add(x, ...operands)),\n    subtract: (...operands) => calc(subtract(x, ...operands)),\n    multiply: (...operands) => calc(multiply(x, ...operands)),\n    divide: (...operands) => calc(divide(x, ...operands)),\n    negate: () => calc(negate(x)),\n    toString: () => x.toString()\n  }),\n  {\n    add,\n    subtract,\n    multiply,\n    divide,\n    negate\n  }\n);\n\nexport { calc };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}